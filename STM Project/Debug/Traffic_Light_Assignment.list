
Traffic_Light_Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004564  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000006c  08004670  08004670  00014670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080046dc  080046dc  00020094  2**0
                  CONTENTS
  4 .ARM          00000000  080046dc  080046dc  00020094  2**0
                  CONTENTS
  5 .preinit_array 00000000  080046dc  080046dc  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080046dc  080046dc  000146dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080046e0  080046e0  000146e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  080046e4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000094  08004778  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000204  08004778  00020204  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cd4a  00000000  00000000  000200bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000023ff  00000000  00000000  0002ce07  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000d90  00000000  00000000  0002f208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c70  00000000  00000000  0002ff98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017fe3  00000000  00000000  00030c08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fa3e  00000000  00000000  00048beb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ad77  00000000  00000000  00058629  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e33a0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003a08  00000000  00000000  000e33f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000094 	.word	0x20000094
 8000128:	00000000 	.word	0x00000000
 800012c:	08004658 	.word	0x08004658

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000098 	.word	0x20000098
 8000148:	08004658 	.word	0x08004658

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <button_reading>:
//we define counter for the button is pressed more than 1 second.
static uint16_t counterForButtonPress1s[N0_OF_BUTTONS];

//read 3 button and modify flag buffer when button is pressed
//this function is called in timer interupt
void button_reading(){
 800015c:	b580      	push	{r7, lr}
 800015e:	b082      	sub	sp, #8
 8000160:	af00      	add	r7, sp, #0
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 8000162:	2300      	movs	r3, #0
 8000164:	607b      	str	r3, [r7, #4]
 8000166:	e0a7      	b.n	80002b8 <button_reading+0x15c>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000168:	4a58      	ldr	r2, [pc, #352]	; (80002cc <button_reading+0x170>)
 800016a:	687b      	ldr	r3, [r7, #4]
 800016c:	4413      	add	r3, r2
 800016e:	7819      	ldrb	r1, [r3, #0]
 8000170:	4a57      	ldr	r2, [pc, #348]	; (80002d0 <button_reading+0x174>)
 8000172:	687b      	ldr	r3, [r7, #4]
 8000174:	4413      	add	r3, r2
 8000176:	460a      	mov	r2, r1
 8000178:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 800017a:	4a56      	ldr	r2, [pc, #344]	; (80002d4 <button_reading+0x178>)
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	4413      	add	r3, r2
 8000180:	7819      	ldrb	r1, [r3, #0]
 8000182:	4a52      	ldr	r2, [pc, #328]	; (80002cc <button_reading+0x170>)
 8000184:	687b      	ldr	r3, [r7, #4]
 8000186:	4413      	add	r3, r2
 8000188:	460a      	mov	r2, r1
 800018a:	701a      	strb	r2, [r3, #0]
		//read raw button to buffer0
		if(i == 0){
 800018c:	687b      	ldr	r3, [r7, #4]
 800018e:	2b00      	cmp	r3, #0
 8000190:	d10b      	bne.n	80001aa <button_reading+0x4e>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON1_GPIO_Port, BUTTON1_Pin);
 8000192:	2102      	movs	r1, #2
 8000194:	4850      	ldr	r0, [pc, #320]	; (80002d8 <button_reading+0x17c>)
 8000196:	f001 fd1b 	bl	8001bd0 <HAL_GPIO_ReadPin>
 800019a:	4603      	mov	r3, r0
 800019c:	4619      	mov	r1, r3
 800019e:	4a4d      	ldr	r2, [pc, #308]	; (80002d4 <button_reading+0x178>)
 80001a0:	687b      	ldr	r3, [r7, #4]
 80001a2:	4413      	add	r3, r2
 80001a4:	460a      	mov	r2, r1
 80001a6:	701a      	strb	r2, [r3, #0]
 80001a8:	e02b      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 1){
 80001aa:	687b      	ldr	r3, [r7, #4]
 80001ac:	2b01      	cmp	r3, #1
 80001ae:	d10b      	bne.n	80001c8 <button_reading+0x6c>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin);
 80001b0:	2110      	movs	r1, #16
 80001b2:	4849      	ldr	r0, [pc, #292]	; (80002d8 <button_reading+0x17c>)
 80001b4:	f001 fd0c 	bl	8001bd0 <HAL_GPIO_ReadPin>
 80001b8:	4603      	mov	r3, r0
 80001ba:	4619      	mov	r1, r3
 80001bc:	4a45      	ldr	r2, [pc, #276]	; (80002d4 <button_reading+0x178>)
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	4413      	add	r3, r2
 80001c2:	460a      	mov	r2, r1
 80001c4:	701a      	strb	r2, [r3, #0]
 80001c6:	e01c      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 2){
 80001c8:	687b      	ldr	r3, [r7, #4]
 80001ca:	2b02      	cmp	r3, #2
 80001cc:	d10b      	bne.n	80001e6 <button_reading+0x8a>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON3_GPIO_Port, BUTTON3_Pin);
 80001ce:	2101      	movs	r1, #1
 80001d0:	4842      	ldr	r0, [pc, #264]	; (80002dc <button_reading+0x180>)
 80001d2:	f001 fcfd 	bl	8001bd0 <HAL_GPIO_ReadPin>
 80001d6:	4603      	mov	r3, r0
 80001d8:	4619      	mov	r1, r3
 80001da:	4a3e      	ldr	r2, [pc, #248]	; (80002d4 <button_reading+0x178>)
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	4413      	add	r3, r2
 80001e0:	460a      	mov	r2, r1
 80001e2:	701a      	strb	r2, [r3, #0]
 80001e4:	e00d      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 3){
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	2b03      	cmp	r3, #3
 80001ea:	d10a      	bne.n	8000202 <button_reading+0xa6>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(PEDE_BUTTON_GPIO_Port, PEDE_BUTTON_Pin);
 80001ec:	2101      	movs	r1, #1
 80001ee:	483a      	ldr	r0, [pc, #232]	; (80002d8 <button_reading+0x17c>)
 80001f0:	f001 fcee 	bl	8001bd0 <HAL_GPIO_ReadPin>
 80001f4:	4603      	mov	r3, r0
 80001f6:	4619      	mov	r1, r3
 80001f8:	4a36      	ldr	r2, [pc, #216]	; (80002d4 <button_reading+0x178>)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4413      	add	r3, r2
 80001fe:	460a      	mov	r2, r1
 8000200:	701a      	strb	r2, [r3, #0]
		}
		//if input is stable: 3 recently input is equal
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 8000202:	4a34      	ldr	r2, [pc, #208]	; (80002d4 <button_reading+0x178>)
 8000204:	687b      	ldr	r3, [r7, #4]
 8000206:	4413      	add	r3, r2
 8000208:	781a      	ldrb	r2, [r3, #0]
 800020a:	4930      	ldr	r1, [pc, #192]	; (80002cc <button_reading+0x170>)
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	440b      	add	r3, r1
 8000210:	781b      	ldrb	r3, [r3, #0]
 8000212:	429a      	cmp	r2, r3
 8000214:	d14d      	bne.n	80002b2 <button_reading+0x156>
				debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
 8000216:	4a2d      	ldr	r2, [pc, #180]	; (80002cc <button_reading+0x170>)
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4413      	add	r3, r2
 800021c:	781a      	ldrb	r2, [r3, #0]
 800021e:	492c      	ldr	r1, [pc, #176]	; (80002d0 <button_reading+0x174>)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	440b      	add	r3, r1
 8000224:	781b      	ldrb	r3, [r3, #0]
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 8000226:	429a      	cmp	r2, r3
 8000228:	d143      	bne.n	80002b2 <button_reading+0x156>
			//if input stable at present different from previous
			if(buttonBuffer[i] != debounceButtonBuffer2[i]){
 800022a:	4a2d      	ldr	r2, [pc, #180]	; (80002e0 <button_reading+0x184>)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4413      	add	r3, r2
 8000230:	781a      	ldrb	r2, [r3, #0]
 8000232:	4927      	ldr	r1, [pc, #156]	; (80002d0 <button_reading+0x174>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	440b      	add	r3, r1
 8000238:	781b      	ldrb	r3, [r3, #0]
 800023a:	429a      	cmp	r2, r3
 800023c:	d019      	beq.n	8000272 <button_reading+0x116>
				//update input to buffer
				buttonBuffer[i] = debounceButtonBuffer2[i];
 800023e:	4a24      	ldr	r2, [pc, #144]	; (80002d0 <button_reading+0x174>)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4413      	add	r3, r2
 8000244:	7819      	ldrb	r1, [r3, #0]
 8000246:	4a26      	ldr	r2, [pc, #152]	; (80002e0 <button_reading+0x184>)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4413      	add	r3, r2
 800024c:	460a      	mov	r2, r1
 800024e:	701a      	strb	r2, [r3, #0]
				//if input is pressed
				if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000250:	4a23      	ldr	r2, [pc, #140]	; (80002e0 <button_reading+0x184>)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4413      	add	r3, r2
 8000256:	781b      	ldrb	r3, [r3, #0]
 8000258:	2b00      	cmp	r3, #0
 800025a:	d12a      	bne.n	80002b2 <button_reading+0x156>
					//turn flag on
					flagForButtonPress[i] = 1;
 800025c:	4a21      	ldr	r2, [pc, #132]	; (80002e4 <button_reading+0x188>)
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4413      	add	r3, r2
 8000262:	2201      	movs	r2, #1
 8000264:	701a      	strb	r2, [r3, #0]
					//set counter
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 8000266:	4a20      	ldr	r2, [pc, #128]	; (80002e8 <button_reading+0x18c>)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	2164      	movs	r1, #100	; 0x64
 800026c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000270:	e01f      	b.n	80002b2 <button_reading+0x156>
				}
			}
			//if input is stable and no change (present = previous)
			else{
				//decrease counter
				counterForButtonPress1s[i]--;
 8000272:	4a1d      	ldr	r2, [pc, #116]	; (80002e8 <button_reading+0x18c>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800027a:	3b01      	subs	r3, #1
 800027c:	b299      	uxth	r1, r3
 800027e:	4a1a      	ldr	r2, [pc, #104]	; (80002e8 <button_reading+0x18c>)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				//when counter is 0, reset counter
				//and if button is press -> turn flag1s on
				if(counterForButtonPress1s[i] == 0){
 8000286:	4a18      	ldr	r2, [pc, #96]	; (80002e8 <button_reading+0x18c>)
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800028e:	2b00      	cmp	r3, #0
 8000290:	d10f      	bne.n	80002b2 <button_reading+0x156>
					if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000292:	4a13      	ldr	r2, [pc, #76]	; (80002e0 <button_reading+0x184>)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4413      	add	r3, r2
 8000298:	781b      	ldrb	r3, [r3, #0]
 800029a:	2b00      	cmp	r3, #0
 800029c:	d104      	bne.n	80002a8 <button_reading+0x14c>
						flagForButtonPress1s[i] = 1;
 800029e:	4a13      	ldr	r2, [pc, #76]	; (80002ec <button_reading+0x190>)
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4413      	add	r3, r2
 80002a4:	2201      	movs	r2, #1
 80002a6:	701a      	strb	r2, [r3, #0]
					}
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 80002a8:	4a0f      	ldr	r2, [pc, #60]	; (80002e8 <button_reading+0x18c>)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	2164      	movs	r1, #100	; 0x64
 80002ae:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	3301      	adds	r3, #1
 80002b6:	607b      	str	r3, [r7, #4]
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	2b03      	cmp	r3, #3
 80002bc:	f77f af54 	ble.w	8000168 <button_reading+0xc>
				}
			}
		}
	}
}
 80002c0:	bf00      	nop
 80002c2:	bf00      	nop
 80002c4:	3708      	adds	r7, #8
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bd80      	pop	{r7, pc}
 80002ca:	bf00      	nop
 80002cc:	200000b8 	.word	0x200000b8
 80002d0:	200000bc 	.word	0x200000bc
 80002d4:	200000b4 	.word	0x200000b4
 80002d8:	40010800 	.word	0x40010800
 80002dc:	40010c00 	.word	0x40010c00
 80002e0:	200000b0 	.word	0x200000b0
 80002e4:	200000c4 	.word	0x200000c4
 80002e8:	200000c8 	.word	0x200000c8
 80002ec:	200000c0 	.word	0x200000c0

080002f0 <is_button1_pressed>:

//this function check if Mode_select_button is pressed or not
//and reset its flag
int is_button1_pressed()
{
 80002f0:	b480      	push	{r7}
 80002f2:	af00      	add	r7, sp, #0
	if(flagForButtonPress[0] == 1){
 80002f4:	4b06      	ldr	r3, [pc, #24]	; (8000310 <is_button1_pressed+0x20>)
 80002f6:	781b      	ldrb	r3, [r3, #0]
 80002f8:	2b01      	cmp	r3, #1
 80002fa:	d104      	bne.n	8000306 <is_button1_pressed+0x16>
		flagForButtonPress[0] = 0;
 80002fc:	4b04      	ldr	r3, [pc, #16]	; (8000310 <is_button1_pressed+0x20>)
 80002fe:	2200      	movs	r2, #0
 8000300:	701a      	strb	r2, [r3, #0]
		return 1;
 8000302:	2301      	movs	r3, #1
 8000304:	e000      	b.n	8000308 <is_button1_pressed+0x18>
	}
	return 0;
 8000306:	2300      	movs	r3, #0
}
 8000308:	4618      	mov	r0, r3
 800030a:	46bd      	mov	sp, r7
 800030c:	bc80      	pop	{r7}
 800030e:	4770      	bx	lr
 8000310:	200000c4 	.word	0x200000c4

08000314 <is_button2_pressed>:

//this fuction check if time_adjust_button is pressed or not
//and reset its flag
int is_button2_pressed()
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
	if(flagForButtonPress[1] == 1){
 8000318:	4b06      	ldr	r3, [pc, #24]	; (8000334 <is_button2_pressed+0x20>)
 800031a:	785b      	ldrb	r3, [r3, #1]
 800031c:	2b01      	cmp	r3, #1
 800031e:	d104      	bne.n	800032a <is_button2_pressed+0x16>
		flagForButtonPress[1] = 0;
 8000320:	4b04      	ldr	r3, [pc, #16]	; (8000334 <is_button2_pressed+0x20>)
 8000322:	2200      	movs	r2, #0
 8000324:	705a      	strb	r2, [r3, #1]
		return 1;
 8000326:	2301      	movs	r3, #1
 8000328:	e000      	b.n	800032c <is_button2_pressed+0x18>
	}
	return 0;
 800032a:	2300      	movs	r3, #0
}
 800032c:	4618      	mov	r0, r3
 800032e:	46bd      	mov	sp, r7
 8000330:	bc80      	pop	{r7}
 8000332:	4770      	bx	lr
 8000334:	200000c4 	.word	0x200000c4

08000338 <is_button3_pressed>:

//this function check if set_button is pressed or not
//and reset its flag
int is_button3_pressed()
{
 8000338:	b480      	push	{r7}
 800033a:	af00      	add	r7, sp, #0
	if(flagForButtonPress[2] == 1){
 800033c:	4b06      	ldr	r3, [pc, #24]	; (8000358 <is_button3_pressed+0x20>)
 800033e:	789b      	ldrb	r3, [r3, #2]
 8000340:	2b01      	cmp	r3, #1
 8000342:	d104      	bne.n	800034e <is_button3_pressed+0x16>
		flagForButtonPress[2] = 0;
 8000344:	4b04      	ldr	r3, [pc, #16]	; (8000358 <is_button3_pressed+0x20>)
 8000346:	2200      	movs	r2, #0
 8000348:	709a      	strb	r2, [r3, #2]
		return 1;
 800034a:	2301      	movs	r3, #1
 800034c:	e000      	b.n	8000350 <is_button3_pressed+0x18>
	}
	return 0;
 800034e:	2300      	movs	r3, #0
}
 8000350:	4618      	mov	r0, r3
 8000352:	46bd      	mov	sp, r7
 8000354:	bc80      	pop	{r7}
 8000356:	4770      	bx	lr
 8000358:	200000c4 	.word	0x200000c4

0800035c <is_pede_button_pressed>:

//the function check if pedestrian button is pressed or not
//and reset its flag
int is_pede_button_pressed()
{
 800035c:	b480      	push	{r7}
 800035e:	af00      	add	r7, sp, #0
	if(flagForButtonPress[3] == 1){
 8000360:	4b06      	ldr	r3, [pc, #24]	; (800037c <is_pede_button_pressed+0x20>)
 8000362:	78db      	ldrb	r3, [r3, #3]
 8000364:	2b01      	cmp	r3, #1
 8000366:	d104      	bne.n	8000372 <is_pede_button_pressed+0x16>
		flagForButtonPress[3] = 0;
 8000368:	4b04      	ldr	r3, [pc, #16]	; (800037c <is_pede_button_pressed+0x20>)
 800036a:	2200      	movs	r2, #0
 800036c:	70da      	strb	r2, [r3, #3]
		return 1;
 800036e:	2301      	movs	r3, #1
 8000370:	e000      	b.n	8000374 <is_pede_button_pressed+0x18>
	}
	return 0;
 8000372:	2300      	movs	r3, #0
}
 8000374:	4618      	mov	r0, r3
 8000376:	46bd      	mov	sp, r7
 8000378:	bc80      	pop	{r7}
 800037a:	4770      	bx	lr
 800037c:	200000c4 	.word	0x200000c4

08000380 <is_button2_press1s>:

//the function check if time_adjust_button is pressed more than 1s or not
//reset the flag and turn on again every 1s if it is keep pressing
int is_button2_press1s()
{
 8000380:	b480      	push	{r7}
 8000382:	af00      	add	r7, sp, #0
	if(flagForButtonPress1s[1]==1){
 8000384:	4b06      	ldr	r3, [pc, #24]	; (80003a0 <is_button2_press1s+0x20>)
 8000386:	785b      	ldrb	r3, [r3, #1]
 8000388:	2b01      	cmp	r3, #1
 800038a:	d104      	bne.n	8000396 <is_button2_press1s+0x16>
		flagForButtonPress1s[1] = 0;
 800038c:	4b04      	ldr	r3, [pc, #16]	; (80003a0 <is_button2_press1s+0x20>)
 800038e:	2200      	movs	r2, #0
 8000390:	705a      	strb	r2, [r3, #1]
		return 1;
 8000392:	2301      	movs	r3, #1
 8000394:	e000      	b.n	8000398 <is_button2_press1s+0x18>
	}
	return 0;
 8000396:	2300      	movs	r3, #0
}
 8000398:	4618      	mov	r0, r3
 800039a:	46bd      	mov	sp, r7
 800039c:	bc80      	pop	{r7}
 800039e:	4770      	bx	lr
 80003a0:	200000c0 	.word	0x200000c0

080003a4 <buzzerRun>:

const int c = (BASE_VALUE - LAST_VALUE) / BASE_TIME;
const int d = LAST_VALUE;

void buzzerRun()
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	af00      	add	r7, sp, #0

	green_pedes_on();
 80003a8:	f000 fff8 	bl	800139c <green_pedes_on>
	if (timer4_flag == 1)
 80003ac:	4b1a      	ldr	r3, [pc, #104]	; (8000418 <buzzerRun+0x74>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	2b01      	cmp	r3, #1
 80003b2:	d12e      	bne.n	8000412 <buzzerRun+0x6e>
	{
		setTimer4(delay);
 80003b4:	4b19      	ldr	r3, [pc, #100]	; (800041c <buzzerRun+0x78>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4618      	mov	r0, r3
 80003ba:	f000 fd25 	bl	8000e08 <setTimer4>
		__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, value[i]);
 80003be:	4b18      	ldr	r3, [pc, #96]	; (8000420 <buzzerRun+0x7c>)
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	4a18      	ldr	r2, [pc, #96]	; (8000424 <buzzerRun+0x80>)
 80003c4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003c8:	4b17      	ldr	r3, [pc, #92]	; (8000428 <buzzerRun+0x84>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	635a      	str	r2, [r3, #52]	; 0x34
		i = (i + 1) % 2;
 80003ce:	4b14      	ldr	r3, [pc, #80]	; (8000420 <buzzerRun+0x7c>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	3301      	adds	r3, #1
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	f003 0301 	and.w	r3, r3, #1
 80003da:	bfb8      	it	lt
 80003dc:	425b      	neglt	r3, r3
 80003de:	4a10      	ldr	r2, [pc, #64]	; (8000420 <buzzerRun+0x7c>)
 80003e0:	6013      	str	r3, [r2, #0]
		// This is the equation with desired coefficients
		delay = a * SEG_counter + b;
 80003e2:	2360      	movs	r3, #96	; 0x60
 80003e4:	461a      	mov	r2, r3
 80003e6:	4b11      	ldr	r3, [pc, #68]	; (800042c <buzzerRun+0x88>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	fb02 f303 	mul.w	r3, r2, r3
 80003ee:	22c8      	movs	r2, #200	; 0xc8
 80003f0:	4413      	add	r3, r2
 80003f2:	461a      	mov	r2, r3
 80003f4:	4b09      	ldr	r3, [pc, #36]	; (800041c <buzzerRun+0x78>)
 80003f6:	601a      	str	r2, [r3, #0]
		value[0] = c * SEG_counter + d;
 80003f8:	f06f 0310 	mvn.w	r3, #16
 80003fc:	461a      	mov	r2, r3
 80003fe:	4b0b      	ldr	r3, [pc, #44]	; (800042c <buzzerRun+0x88>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	fb02 f303 	mul.w	r3, r2, r3
 8000406:	f240 32de 	movw	r2, #990	; 0x3de
 800040a:	4413      	add	r3, r2
 800040c:	461a      	mov	r2, r3
 800040e:	4b05      	ldr	r3, [pc, #20]	; (8000424 <buzzerRun+0x80>)
 8000410:	601a      	str	r2, [r3, #0]
	}
	// Delete this
}
 8000412:	bf00      	nop
 8000414:	bd80      	pop	{r7, pc}
 8000416:	bf00      	nop
 8000418:	200001cc 	.word	0x200001cc
 800041c:	20000008 	.word	0x20000008
 8000420:	200000d0 	.word	0x200000d0
 8000424:	20000000 	.word	0x20000000
 8000428:	2000016c 	.word	0x2000016c
 800042c:	200000d8 	.word	0x200000d8

08000430 <fsm_automatic_run>:
 * Timer1: control time of road1
 * Timer2: control time of road2
 * Timer3: count down for uart in auto
 */
void fsm_automatic_run()
{
 8000430:	b580      	push	{r7, lr}
 8000432:	af00      	add	r7, sp, #0

	switch(state)
 8000434:	4ba1      	ldr	r3, [pc, #644]	; (80006bc <fsm_automatic_run+0x28c>)
 8000436:	781b      	ldrb	r3, [r3, #0]
 8000438:	2b05      	cmp	r3, #5
 800043a:	f200 81c0 	bhi.w	80007be <fsm_automatic_run+0x38e>
 800043e:	a201      	add	r2, pc, #4	; (adr r2, 8000444 <fsm_automatic_run+0x14>)
 8000440:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000444:	0800045d 	.word	0x0800045d
 8000448:	080004e3 	.word	0x080004e3
 800044c:	0800057d 	.word	0x0800057d
 8000450:	080007bf 	.word	0x080007bf
 8000454:	08000621 	.word	0x08000621
 8000458:	080006e9 	.word	0x080006e9
	{
	case INIT:
		if(yellow_time + green_time != red_time){
 800045c:	4b98      	ldr	r3, [pc, #608]	; (80006c0 <fsm_automatic_run+0x290>)
 800045e:	681a      	ldr	r2, [r3, #0]
 8000460:	4b98      	ldr	r3, [pc, #608]	; (80006c4 <fsm_automatic_run+0x294>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	441a      	add	r2, r3
 8000466:	4b98      	ldr	r3, [pc, #608]	; (80006c8 <fsm_automatic_run+0x298>)
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	429a      	cmp	r2, r3
 800046c:	d019      	beq.n	80004a2 <fsm_automatic_run+0x72>
			//error state
			//trap here until mode_button is pressed
			//and go to RED_ADJUST mode to change value again
			turn_all_led_off();
 800046e:	f000 ffa9 	bl	80013c4 <turn_all_led_off>
			if(is_button1_pressed()){
 8000472:	f7ff ff3d 	bl	80002f0 <is_button1_pressed>
 8000476:	4603      	mov	r3, r0
 8000478:	2b00      	cmp	r3, #0
 800047a:	f000 81a2 	beq.w	80007c2 <fsm_automatic_run+0x392>
				state = RED_ADJUST;
 800047e:	4b8f      	ldr	r3, [pc, #572]	; (80006bc <fsm_automatic_run+0x28c>)
 8000480:	220b      	movs	r2, #11
 8000482:	701a      	strb	r2, [r3, #0]
				//display temp time
				SEG_counter = temp_red_time/1000;
 8000484:	4b91      	ldr	r3, [pc, #580]	; (80006cc <fsm_automatic_run+0x29c>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a91      	ldr	r2, [pc, #580]	; (80006d0 <fsm_automatic_run+0x2a0>)
 800048a:	fba2 2303 	umull	r2, r3, r2, r3
 800048e:	099b      	lsrs	r3, r3, #6
 8000490:	4a90      	ldr	r2, [pc, #576]	; (80006d4 <fsm_automatic_run+0x2a4>)
 8000492:	6013      	str	r3, [r2, #0]
				UART_Parse();
 8000494:	f000 ffb4 	bl	8001400 <UART_Parse>
				//reset all button flag
				is_button2_pressed();
 8000498:	f7ff ff3c 	bl	8000314 <is_button2_pressed>
				is_button3_pressed();
 800049c:	f7ff ff4c 	bl	8000338 <is_button3_pressed>
			}
			break;
 80004a0:	e18f      	b.n	80007c2 <fsm_automatic_run+0x392>
		}
		//no error, prepare for changing to S1

		//send time via uart
		SEG_counter = green_time/1000;
 80004a2:	4b88      	ldr	r3, [pc, #544]	; (80006c4 <fsm_automatic_run+0x294>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	4a8a      	ldr	r2, [pc, #552]	; (80006d0 <fsm_automatic_run+0x2a0>)
 80004a8:	fba2 2303 	umull	r2, r3, r2, r3
 80004ac:	099b      	lsrs	r3, r3, #6
 80004ae:	4a89      	ldr	r2, [pc, #548]	; (80006d4 <fsm_automatic_run+0x2a4>)
 80004b0:	6013      	str	r3, [r2, #0]
		UART_Parse();
 80004b2:	f000 ffa5 	bl	8001400 <UART_Parse>

		setTimer4(1000);// Init the counter
 80004b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004ba:	f000 fca5 	bl	8000e08 <setTimer4>
		setTimer1(green_time);
 80004be:	4b81      	ldr	r3, [pc, #516]	; (80006c4 <fsm_automatic_run+0x294>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4618      	mov	r0, r3
 80004c4:	f000 fc58 	bl	8000d78 <setTimer1>
		setTimer2(red_time);
 80004c8:	4b7f      	ldr	r3, [pc, #508]	; (80006c8 <fsm_automatic_run+0x298>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	4618      	mov	r0, r3
 80004ce:	f000 fc6b 	bl	8000da8 <setTimer2>
		setTimer3(1000);
 80004d2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004d6:	f000 fc7f 	bl	8000dd8 <setTimer3>
		state = S1;
 80004da:	4b78      	ldr	r3, [pc, #480]	; (80006bc <fsm_automatic_run+0x28c>)
 80004dc:	2201      	movs	r2, #1
 80004de:	701a      	strb	r2, [r3, #0]
		break;
 80004e0:	e178      	b.n	80007d4 <fsm_automatic_run+0x3a4>
	case S1:
		green1_on();
 80004e2:	f000 ff13 	bl	800130c <green1_on>
		red2_on();
 80004e6:	f000 ff01 	bl	80012ec <red2_on>
		//uart count down
		if(timer3_flag == 1){
 80004ea:	4b7b      	ldr	r3, [pc, #492]	; (80006d8 <fsm_automatic_run+0x2a8>)
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	2b01      	cmp	r3, #1
 80004f0:	d10a      	bne.n	8000508 <fsm_automatic_run+0xd8>
			SEG_counter--;
 80004f2:	4b78      	ldr	r3, [pc, #480]	; (80006d4 <fsm_automatic_run+0x2a4>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	3b01      	subs	r3, #1
 80004f8:	4a76      	ldr	r2, [pc, #472]	; (80006d4 <fsm_automatic_run+0x2a4>)
 80004fa:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80004fc:	f000 ff80 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 8000500:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000504:	f000 fc68 	bl	8000dd8 <setTimer3>
		}

		//road1 timeout -> turn to state S2
		if(timer1_flag == 1){
 8000508:	4b74      	ldr	r3, [pc, #464]	; (80006dc <fsm_automatic_run+0x2ac>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	2b01      	cmp	r3, #1
 800050e:	d115      	bne.n	800053c <fsm_automatic_run+0x10c>
			setTimer1(yellow_time);
 8000510:	4b6b      	ldr	r3, [pc, #428]	; (80006c0 <fsm_automatic_run+0x290>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	4618      	mov	r0, r3
 8000516:	f000 fc2f 	bl	8000d78 <setTimer1>
			state = S2;
 800051a:	4b68      	ldr	r3, [pc, #416]	; (80006bc <fsm_automatic_run+0x28c>)
 800051c:	2202      	movs	r2, #2
 800051e:	701a      	strb	r2, [r3, #0]
			SEG_counter = yellow_time/1000;
 8000520:	4b67      	ldr	r3, [pc, #412]	; (80006c0 <fsm_automatic_run+0x290>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	4a6a      	ldr	r2, [pc, #424]	; (80006d0 <fsm_automatic_run+0x2a0>)
 8000526:	fba2 2303 	umull	r2, r3, r2, r3
 800052a:	099b      	lsrs	r3, r3, #6
 800052c:	4a69      	ldr	r2, [pc, #420]	; (80006d4 <fsm_automatic_run+0x2a4>)
 800052e:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000530:	f000 ff66 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 8000534:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000538:	f000 fc4e 	bl	8000dd8 <setTimer3>
		}

		//Mode_button is pressed -> turn to manual: RED_ADJUST
		if(is_button1_pressed()){
 800053c:	f7ff fed8 	bl	80002f0 <is_button1_pressed>
 8000540:	4603      	mov	r3, r0
 8000542:	2b00      	cmp	r3, #0
 8000544:	d010      	beq.n	8000568 <fsm_automatic_run+0x138>
			state = RED_ADJUST;
 8000546:	4b5d      	ldr	r3, [pc, #372]	; (80006bc <fsm_automatic_run+0x28c>)
 8000548:	220b      	movs	r2, #11
 800054a:	701a      	strb	r2, [r3, #0]
			//display temp time
			SEG_counter = temp_red_time/1000;
 800054c:	4b5f      	ldr	r3, [pc, #380]	; (80006cc <fsm_automatic_run+0x29c>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a5f      	ldr	r2, [pc, #380]	; (80006d0 <fsm_automatic_run+0x2a0>)
 8000552:	fba2 2303 	umull	r2, r3, r2, r3
 8000556:	099b      	lsrs	r3, r3, #6
 8000558:	4a5e      	ldr	r2, [pc, #376]	; (80006d4 <fsm_automatic_run+0x2a4>)
 800055a:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800055c:	f000 ff50 	bl	8001400 <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 8000560:	f7ff fed8 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000564:	f7ff fee8 	bl	8000338 <is_button3_pressed>
		}

		// Pedes light
		if (is_pede_button_pressed())
 8000568:	f7ff fef8 	bl	800035c <is_pede_button_pressed>
 800056c:	4603      	mov	r3, r0
 800056e:	2b00      	cmp	r3, #0
 8000570:	f000 8129 	beq.w	80007c6 <fsm_automatic_run+0x396>
		{
			mode_flag = 1;
 8000574:	4b5a      	ldr	r3, [pc, #360]	; (80006e0 <fsm_automatic_run+0x2b0>)
 8000576:	2201      	movs	r2, #1
 8000578:	601a      	str	r2, [r3, #0]
		}
		break;
 800057a:	e124      	b.n	80007c6 <fsm_automatic_run+0x396>
	case S2:
		yellow1_on();
 800057c:	f000 feea 	bl	8001354 <yellow1_on>
		red2_on();
 8000580:	f000 feb4 	bl	80012ec <red2_on>

		//uart count down
		if(timer3_flag == 1){
 8000584:	4b54      	ldr	r3, [pc, #336]	; (80006d8 <fsm_automatic_run+0x2a8>)
 8000586:	681b      	ldr	r3, [r3, #0]
 8000588:	2b01      	cmp	r3, #1
 800058a:	d10a      	bne.n	80005a2 <fsm_automatic_run+0x172>
			SEG_counter--;
 800058c:	4b51      	ldr	r3, [pc, #324]	; (80006d4 <fsm_automatic_run+0x2a4>)
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	3b01      	subs	r3, #1
 8000592:	4a50      	ldr	r2, [pc, #320]	; (80006d4 <fsm_automatic_run+0x2a4>)
 8000594:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000596:	f000 ff33 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 800059a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800059e:	f000 fc1b 	bl	8000dd8 <setTimer3>
		}

		//road1 timeout -> turn to state S3
		if(timer1_flag == 1){
 80005a2:	4b4e      	ldr	r3, [pc, #312]	; (80006dc <fsm_automatic_run+0x2ac>)
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	2b01      	cmp	r3, #1
 80005a8:	d11a      	bne.n	80005e0 <fsm_automatic_run+0x1b0>
			setTimer1(red_time);
 80005aa:	4b47      	ldr	r3, [pc, #284]	; (80006c8 <fsm_automatic_run+0x298>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4618      	mov	r0, r3
 80005b0:	f000 fbe2 	bl	8000d78 <setTimer1>
			setTimer2(green_time);
 80005b4:	4b43      	ldr	r3, [pc, #268]	; (80006c4 <fsm_automatic_run+0x294>)
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	4618      	mov	r0, r3
 80005ba:	f000 fbf5 	bl	8000da8 <setTimer2>
			state = S3;
 80005be:	4b3f      	ldr	r3, [pc, #252]	; (80006bc <fsm_automatic_run+0x28c>)
 80005c0:	2204      	movs	r2, #4
 80005c2:	701a      	strb	r2, [r3, #0]

			SEG_counter = red_time/1000;
 80005c4:	4b40      	ldr	r3, [pc, #256]	; (80006c8 <fsm_automatic_run+0x298>)
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	4a41      	ldr	r2, [pc, #260]	; (80006d0 <fsm_automatic_run+0x2a0>)
 80005ca:	fba2 2303 	umull	r2, r3, r2, r3
 80005ce:	099b      	lsrs	r3, r3, #6
 80005d0:	4a40      	ldr	r2, [pc, #256]	; (80006d4 <fsm_automatic_run+0x2a4>)
 80005d2:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80005d4:	f000 ff14 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 80005d8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80005dc:	f000 fbfc 	bl	8000dd8 <setTimer3>
		}


		//Mode_button is pressed -> turn to RED_ADJUST
		if(is_button1_pressed()){
 80005e0:	f7ff fe86 	bl	80002f0 <is_button1_pressed>
 80005e4:	4603      	mov	r3, r0
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	d010      	beq.n	800060c <fsm_automatic_run+0x1dc>
			state = RED_ADJUST;
 80005ea:	4b34      	ldr	r3, [pc, #208]	; (80006bc <fsm_automatic_run+0x28c>)
 80005ec:	220b      	movs	r2, #11
 80005ee:	701a      	strb	r2, [r3, #0]
			//display temp time
			SEG_counter = temp_red_time/1000;
 80005f0:	4b36      	ldr	r3, [pc, #216]	; (80006cc <fsm_automatic_run+0x29c>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a36      	ldr	r2, [pc, #216]	; (80006d0 <fsm_automatic_run+0x2a0>)
 80005f6:	fba2 2303 	umull	r2, r3, r2, r3
 80005fa:	099b      	lsrs	r3, r3, #6
 80005fc:	4a35      	ldr	r2, [pc, #212]	; (80006d4 <fsm_automatic_run+0x2a4>)
 80005fe:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000600:	f000 fefe 	bl	8001400 <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 8000604:	f7ff fe86 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000608:	f7ff fe96 	bl	8000338 <is_button3_pressed>
		}

		// Pedes light
		if (is_pede_button_pressed())
 800060c:	f7ff fea6 	bl	800035c <is_pede_button_pressed>
 8000610:	4603      	mov	r3, r0
 8000612:	2b00      	cmp	r3, #0
 8000614:	f000 80d9 	beq.w	80007ca <fsm_automatic_run+0x39a>
		{
			mode_flag = 1;
 8000618:	4b31      	ldr	r3, [pc, #196]	; (80006e0 <fsm_automatic_run+0x2b0>)
 800061a:	2201      	movs	r2, #1
 800061c:	601a      	str	r2, [r3, #0]
		}

		break;
 800061e:	e0d4      	b.n	80007ca <fsm_automatic_run+0x39a>
	case S3:
		red1_on();
 8000620:	f000 fe50 	bl	80012c4 <red1_on>
		green2_on();
 8000624:	f000 fe86 	bl	8001334 <green2_on>

		//uart count down
		if(timer3_flag == 1){
 8000628:	4b2b      	ldr	r3, [pc, #172]	; (80006d8 <fsm_automatic_run+0x2a8>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	2b01      	cmp	r3, #1
 800062e:	d10a      	bne.n	8000646 <fsm_automatic_run+0x216>
			SEG_counter--;
 8000630:	4b28      	ldr	r3, [pc, #160]	; (80006d4 <fsm_automatic_run+0x2a4>)
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	3b01      	subs	r3, #1
 8000636:	4a27      	ldr	r2, [pc, #156]	; (80006d4 <fsm_automatic_run+0x2a4>)
 8000638:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800063a:	f000 fee1 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 800063e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000642:	f000 fbc9 	bl	8000dd8 <setTimer3>
		}

		//road2 timeout -> turn to state S4
		if(timer2_flag == 1){
 8000646:	4b27      	ldr	r3, [pc, #156]	; (80006e4 <fsm_automatic_run+0x2b4>)
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d107      	bne.n	800065e <fsm_automatic_run+0x22e>
			setTimer2(yellow_time);
 800064e:	4b1c      	ldr	r3, [pc, #112]	; (80006c0 <fsm_automatic_run+0x290>)
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	4618      	mov	r0, r3
 8000654:	f000 fba8 	bl	8000da8 <setTimer2>
			state = S4;
 8000658:	4b18      	ldr	r3, [pc, #96]	; (80006bc <fsm_automatic_run+0x28c>)
 800065a:	2205      	movs	r2, #5
 800065c:	701a      	strb	r2, [r3, #0]
		}

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 800065e:	f7ff fe47 	bl	80002f0 <is_button1_pressed>
 8000662:	4603      	mov	r3, r0
 8000664:	2b00      	cmp	r3, #0
 8000666:	d010      	beq.n	800068a <fsm_automatic_run+0x25a>
			state = RED_ADJUST;
 8000668:	4b14      	ldr	r3, [pc, #80]	; (80006bc <fsm_automatic_run+0x28c>)
 800066a:	220b      	movs	r2, #11
 800066c:	701a      	strb	r2, [r3, #0]
			//display temp time
			SEG_counter = temp_red_time/1000;
 800066e:	4b17      	ldr	r3, [pc, #92]	; (80006cc <fsm_automatic_run+0x29c>)
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	4a17      	ldr	r2, [pc, #92]	; (80006d0 <fsm_automatic_run+0x2a0>)
 8000674:	fba2 2303 	umull	r2, r3, r2, r3
 8000678:	099b      	lsrs	r3, r3, #6
 800067a:	4a16      	ldr	r2, [pc, #88]	; (80006d4 <fsm_automatic_run+0x2a4>)
 800067c:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800067e:	f000 febf 	bl	8001400 <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 8000682:	f7ff fe47 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000686:	f7ff fe57 	bl	8000338 <is_button3_pressed>
		}

		// Pedes light
		if (is_pede_button_pressed())
 800068a:	f7ff fe67 	bl	800035c <is_pede_button_pressed>
 800068e:	4603      	mov	r3, r0
 8000690:	2b00      	cmp	r3, #0
 8000692:	d00a      	beq.n	80006aa <fsm_automatic_run+0x27a>
		{
			if (mode_flag == 0)
 8000694:	4b12      	ldr	r3, [pc, #72]	; (80006e0 <fsm_automatic_run+0x2b0>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	2b00      	cmp	r3, #0
 800069a:	d103      	bne.n	80006a4 <fsm_automatic_run+0x274>
				mode_flag = 1;
 800069c:	4b10      	ldr	r3, [pc, #64]	; (80006e0 <fsm_automatic_run+0x2b0>)
 800069e:	2201      	movs	r2, #1
 80006a0:	601a      	str	r2, [r3, #0]
 80006a2:	e002      	b.n	80006aa <fsm_automatic_run+0x27a>
			else
				mode_flag = 0;
 80006a4:	4b0e      	ldr	r3, [pc, #56]	; (80006e0 <fsm_automatic_run+0x2b0>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	601a      	str	r2, [r3, #0]
		}

		if (mode_flag == 1)
 80006aa:	4b0d      	ldr	r3, [pc, #52]	; (80006e0 <fsm_automatic_run+0x2b0>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	2b01      	cmp	r3, #1
 80006b0:	f040 808d 	bne.w	80007ce <fsm_automatic_run+0x39e>
		{
			buzzerRun();
 80006b4:	f7ff fe76 	bl	80003a4 <buzzerRun>
		}

		break;
 80006b8:	e089      	b.n	80007ce <fsm_automatic_run+0x39e>
 80006ba:	bf00      	nop
 80006bc:	200000dc 	.word	0x200000dc
 80006c0:	20000014 	.word	0x20000014
 80006c4:	20000010 	.word	0x20000010
 80006c8:	2000000c 	.word	0x2000000c
 80006cc:	20000018 	.word	0x20000018
 80006d0:	10624dd3 	.word	0x10624dd3
 80006d4:	200000d8 	.word	0x200000d8
 80006d8:	200001c4 	.word	0x200001c4
 80006dc:	200001b4 	.word	0x200001b4
 80006e0:	200000d4 	.word	0x200000d4
 80006e4:	200001bc 	.word	0x200001bc
	case S4:
		red1_on();
 80006e8:	f000 fdec 	bl	80012c4 <red1_on>
		yellow2_on();
 80006ec:	f000 fe46 	bl	800137c <yellow2_on>

		//uart count down
		if(timer3_flag == 1){
 80006f0:	4b39      	ldr	r3, [pc, #228]	; (80007d8 <fsm_automatic_run+0x3a8>)
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	2b01      	cmp	r3, #1
 80006f6:	d10a      	bne.n	800070e <fsm_automatic_run+0x2de>
			SEG_counter--;
 80006f8:	4b38      	ldr	r3, [pc, #224]	; (80007dc <fsm_automatic_run+0x3ac>)
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	3b01      	subs	r3, #1
 80006fe:	4a37      	ldr	r2, [pc, #220]	; (80007dc <fsm_automatic_run+0x3ac>)
 8000700:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000702:	f000 fe7d 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 8000706:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800070a:	f000 fb65 	bl	8000dd8 <setTimer3>
		}

		//road2 timeout -> turn to state S1
		if(timer2_flag == 1){
 800070e:	4b34      	ldr	r3, [pc, #208]	; (80007e0 <fsm_automatic_run+0x3b0>)
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	2b01      	cmp	r3, #1
 8000714:	d126      	bne.n	8000764 <fsm_automatic_run+0x334>
			setTimer1(green_time);
 8000716:	4b33      	ldr	r3, [pc, #204]	; (80007e4 <fsm_automatic_run+0x3b4>)
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	4618      	mov	r0, r3
 800071c:	f000 fb2c 	bl	8000d78 <setTimer1>
			setTimer2(red_time);
 8000720:	4b31      	ldr	r3, [pc, #196]	; (80007e8 <fsm_automatic_run+0x3b8>)
 8000722:	681b      	ldr	r3, [r3, #0]
 8000724:	4618      	mov	r0, r3
 8000726:	f000 fb3f 	bl	8000da8 <setTimer2>
			state = S1;
 800072a:	4b30      	ldr	r3, [pc, #192]	; (80007ec <fsm_automatic_run+0x3bc>)
 800072c:	2201      	movs	r2, #1
 800072e:	701a      	strb	r2, [r3, #0]

			// Turn off pedes light
			HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, RESET);
 8000730:	2200      	movs	r2, #0
 8000732:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000736:	482e      	ldr	r0, [pc, #184]	; (80007f0 <fsm_automatic_run+0x3c0>)
 8000738:	f001 fa61 	bl	8001bfe <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, RESET);
 800073c:	2200      	movs	r2, #0
 800073e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000742:	482c      	ldr	r0, [pc, #176]	; (80007f4 <fsm_automatic_run+0x3c4>)
 8000744:	f001 fa5b 	bl	8001bfe <HAL_GPIO_WritePin>

			SEG_counter = green_time/1000;
 8000748:	4b26      	ldr	r3, [pc, #152]	; (80007e4 <fsm_automatic_run+0x3b4>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	4a2a      	ldr	r2, [pc, #168]	; (80007f8 <fsm_automatic_run+0x3c8>)
 800074e:	fba2 2303 	umull	r2, r3, r2, r3
 8000752:	099b      	lsrs	r3, r3, #6
 8000754:	4a21      	ldr	r2, [pc, #132]	; (80007dc <fsm_automatic_run+0x3ac>)
 8000756:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000758:	f000 fe52 	bl	8001400 <UART_Parse>
			setTimer3(1000);
 800075c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000760:	f000 fb3a 	bl	8000dd8 <setTimer3>
		}

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 8000764:	f7ff fdc4 	bl	80002f0 <is_button1_pressed>
 8000768:	4603      	mov	r3, r0
 800076a:	2b00      	cmp	r3, #0
 800076c:	d010      	beq.n	8000790 <fsm_automatic_run+0x360>
			state = RED_ADJUST;
 800076e:	4b1f      	ldr	r3, [pc, #124]	; (80007ec <fsm_automatic_run+0x3bc>)
 8000770:	220b      	movs	r2, #11
 8000772:	701a      	strb	r2, [r3, #0]
			//display temp time
			SEG_counter = temp_red_time/1000;
 8000774:	4b21      	ldr	r3, [pc, #132]	; (80007fc <fsm_automatic_run+0x3cc>)
 8000776:	681b      	ldr	r3, [r3, #0]
 8000778:	4a1f      	ldr	r2, [pc, #124]	; (80007f8 <fsm_automatic_run+0x3c8>)
 800077a:	fba2 2303 	umull	r2, r3, r2, r3
 800077e:	099b      	lsrs	r3, r3, #6
 8000780:	4a16      	ldr	r2, [pc, #88]	; (80007dc <fsm_automatic_run+0x3ac>)
 8000782:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000784:	f000 fe3c 	bl	8001400 <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 8000788:	f7ff fdc4 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 800078c:	f7ff fdd4 	bl	8000338 <is_button3_pressed>
		}

		// Pedes light
		if (is_pede_button_pressed())
 8000790:	f7ff fde4 	bl	800035c <is_pede_button_pressed>
 8000794:	4603      	mov	r3, r0
 8000796:	2b00      	cmp	r3, #0
 8000798:	d00a      	beq.n	80007b0 <fsm_automatic_run+0x380>
		{
			if (mode_flag == 0)
 800079a:	4b19      	ldr	r3, [pc, #100]	; (8000800 <fsm_automatic_run+0x3d0>)
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	2b00      	cmp	r3, #0
 80007a0:	d103      	bne.n	80007aa <fsm_automatic_run+0x37a>
				mode_flag = 1;
 80007a2:	4b17      	ldr	r3, [pc, #92]	; (8000800 <fsm_automatic_run+0x3d0>)
 80007a4:	2201      	movs	r2, #1
 80007a6:	601a      	str	r2, [r3, #0]
 80007a8:	e002      	b.n	80007b0 <fsm_automatic_run+0x380>
			else
				mode_flag = 0;
 80007aa:	4b15      	ldr	r3, [pc, #84]	; (8000800 <fsm_automatic_run+0x3d0>)
 80007ac:	2200      	movs	r2, #0
 80007ae:	601a      	str	r2, [r3, #0]
		}

		if (mode_flag == 1)
 80007b0:	4b13      	ldr	r3, [pc, #76]	; (8000800 <fsm_automatic_run+0x3d0>)
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	2b01      	cmp	r3, #1
 80007b6:	d10c      	bne.n	80007d2 <fsm_automatic_run+0x3a2>
		{
			buzzerRun();
 80007b8:	f7ff fdf4 	bl	80003a4 <buzzerRun>
		}
		break;
 80007bc:	e009      	b.n	80007d2 <fsm_automatic_run+0x3a2>
	default:
		break;
 80007be:	bf00      	nop
 80007c0:	e008      	b.n	80007d4 <fsm_automatic_run+0x3a4>
			break;
 80007c2:	bf00      	nop
 80007c4:	e006      	b.n	80007d4 <fsm_automatic_run+0x3a4>
		break;
 80007c6:	bf00      	nop
 80007c8:	e004      	b.n	80007d4 <fsm_automatic_run+0x3a4>
		break;
 80007ca:	bf00      	nop
 80007cc:	e002      	b.n	80007d4 <fsm_automatic_run+0x3a4>
		break;
 80007ce:	bf00      	nop
 80007d0:	e000      	b.n	80007d4 <fsm_automatic_run+0x3a4>
		break;
 80007d2:	bf00      	nop
	}
}
 80007d4:	bf00      	nop
 80007d6:	bd80      	pop	{r7, pc}
 80007d8:	200001c4 	.word	0x200001c4
 80007dc:	200000d8 	.word	0x200000d8
 80007e0:	200001bc 	.word	0x200001bc
 80007e4:	20000010 	.word	0x20000010
 80007e8:	2000000c 	.word	0x2000000c
 80007ec:	200000dc 	.word	0x200000dc
 80007f0:	40010c00 	.word	0x40010c00
 80007f4:	40010800 	.word	0x40010800
 80007f8:	10624dd3 	.word	0x10624dd3
 80007fc:	20000018 	.word	0x20000018
 8000800:	200000d4 	.word	0x200000d4

08000804 <fsm_manual_run>:
 * Button1: change mode AUTO -> RED_ADJUST -> YELLOW_ADJUST -> GREEN_ADJUST
 * Button2: change time corresponding to mode
 * Button3: save time
 */
void fsm_manual_run()
{
 8000804:	b580      	push	{r7, lr}
 8000806:	af00      	add	r7, sp, #0
	switch(state)
 8000808:	4b71      	ldr	r3, [pc, #452]	; (80009d0 <fsm_manual_run+0x1cc>)
 800080a:	781b      	ldrb	r3, [r3, #0]
 800080c:	2b0d      	cmp	r3, #13
 800080e:	d052      	beq.n	80008b6 <fsm_manual_run+0xb2>
 8000810:	2b0d      	cmp	r3, #13
 8000812:	f300 80d4 	bgt.w	80009be <fsm_manual_run+0x1ba>
 8000816:	2b0b      	cmp	r3, #11
 8000818:	f000 8088 	beq.w	800092c <fsm_manual_run+0x128>
 800081c:	2b0c      	cmp	r3, #12
 800081e:	f040 80ce 	bne.w	80009be <fsm_manual_run+0x1ba>
	{
	case YELLOW_ADJUST:
		yellow_blink();
 8000822:	f000 fd2b 	bl	800127c <yellow_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000826:	f7ff fd75 	bl	8000314 <is_button2_pressed>
 800082a:	4603      	mov	r3, r0
 800082c:	2b00      	cmp	r3, #0
 800082e:	d104      	bne.n	800083a <fsm_manual_run+0x36>
 8000830:	f7ff fda6 	bl	8000380 <is_button2_press1s>
 8000834:	4603      	mov	r3, r0
 8000836:	2b00      	cmp	r3, #0
 8000838:	d018      	beq.n	800086c <fsm_manual_run+0x68>
			temp_yellow_time = temp_yellow_time% 30000 + 1000;
 800083a:	4b66      	ldr	r3, [pc, #408]	; (80009d4 <fsm_manual_run+0x1d0>)
 800083c:	681a      	ldr	r2, [r3, #0]
 800083e:	4b66      	ldr	r3, [pc, #408]	; (80009d8 <fsm_manual_run+0x1d4>)
 8000840:	fba3 1302 	umull	r1, r3, r3, r2
 8000844:	0b5b      	lsrs	r3, r3, #13
 8000846:	f247 5130 	movw	r1, #30000	; 0x7530
 800084a:	fb01 f303 	mul.w	r3, r1, r3
 800084e:	1ad3      	subs	r3, r2, r3
 8000850:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000854:	4a5f      	ldr	r2, [pc, #380]	; (80009d4 <fsm_manual_run+0x1d0>)
 8000856:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_yellow_time/1000;
 8000858:	4b5e      	ldr	r3, [pc, #376]	; (80009d4 <fsm_manual_run+0x1d0>)
 800085a:	681b      	ldr	r3, [r3, #0]
 800085c:	4a5f      	ldr	r2, [pc, #380]	; (80009dc <fsm_manual_run+0x1d8>)
 800085e:	fba2 2303 	umull	r2, r3, r2, r3
 8000862:	099b      	lsrs	r3, r3, #6
 8000864:	4a5e      	ldr	r2, [pc, #376]	; (80009e0 <fsm_manual_run+0x1dc>)
 8000866:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000868:	f000 fdca 	bl	8001400 <UART_Parse>
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 800086c:	f7ff fd64 	bl	8000338 <is_button3_pressed>
 8000870:	4603      	mov	r3, r0
 8000872:	2b00      	cmp	r3, #0
 8000874:	d003      	beq.n	800087e <fsm_manual_run+0x7a>
			yellow_time = temp_yellow_time;
 8000876:	4b57      	ldr	r3, [pc, #348]	; (80009d4 <fsm_manual_run+0x1d0>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	4a5a      	ldr	r2, [pc, #360]	; (80009e4 <fsm_manual_run+0x1e0>)
 800087c:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to GREEN_ADJUST
		if(is_button1_pressed()){
 800087e:	f7ff fd37 	bl	80002f0 <is_button1_pressed>
 8000882:	4603      	mov	r3, r0
 8000884:	2b00      	cmp	r3, #0
 8000886:	f000 809c 	beq.w	80009c2 <fsm_manual_run+0x1be>
			state = GREEN_ADJUST;
 800088a:	4b51      	ldr	r3, [pc, #324]	; (80009d0 <fsm_manual_run+0x1cc>)
 800088c:	220d      	movs	r2, #13
 800088e:	701a      	strb	r2, [r3, #0]
			green1_on();
 8000890:	f000 fd3c 	bl	800130c <green1_on>
			green2_on();
 8000894:	f000 fd4e 	bl	8001334 <green2_on>
			//reset all button flag
			is_button2_pressed();
 8000898:	f7ff fd3c 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 800089c:	f7ff fd4c 	bl	8000338 <is_button3_pressed>

			SEG_counter = temp_green_time/1000;
 80008a0:	4b51      	ldr	r3, [pc, #324]	; (80009e8 <fsm_manual_run+0x1e4>)
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	4a4d      	ldr	r2, [pc, #308]	; (80009dc <fsm_manual_run+0x1d8>)
 80008a6:	fba2 2303 	umull	r2, r3, r2, r3
 80008aa:	099b      	lsrs	r3, r3, #6
 80008ac:	4a4c      	ldr	r2, [pc, #304]	; (80009e0 <fsm_manual_run+0x1dc>)
 80008ae:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80008b0:	f000 fda6 	bl	8001400 <UART_Parse>
		}
		break;
 80008b4:	e085      	b.n	80009c2 <fsm_manual_run+0x1be>
	case GREEN_ADJUST:
		green_blink();
 80008b6:	f000 fcad 	bl	8001214 <green_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 80008ba:	f7ff fd2b 	bl	8000314 <is_button2_pressed>
 80008be:	4603      	mov	r3, r0
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	d104      	bne.n	80008ce <fsm_manual_run+0xca>
 80008c4:	f7ff fd5c 	bl	8000380 <is_button2_press1s>
 80008c8:	4603      	mov	r3, r0
 80008ca:	2b00      	cmp	r3, #0
 80008cc:	d018      	beq.n	8000900 <fsm_manual_run+0xfc>
			temp_green_time = temp_green_time% 30000 + 1000;
 80008ce:	4b46      	ldr	r3, [pc, #280]	; (80009e8 <fsm_manual_run+0x1e4>)
 80008d0:	681a      	ldr	r2, [r3, #0]
 80008d2:	4b41      	ldr	r3, [pc, #260]	; (80009d8 <fsm_manual_run+0x1d4>)
 80008d4:	fba3 1302 	umull	r1, r3, r3, r2
 80008d8:	0b5b      	lsrs	r3, r3, #13
 80008da:	f247 5130 	movw	r1, #30000	; 0x7530
 80008de:	fb01 f303 	mul.w	r3, r1, r3
 80008e2:	1ad3      	subs	r3, r2, r3
 80008e4:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80008e8:	4a3f      	ldr	r2, [pc, #252]	; (80009e8 <fsm_manual_run+0x1e4>)
 80008ea:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_green_time/1000;
 80008ec:	4b3e      	ldr	r3, [pc, #248]	; (80009e8 <fsm_manual_run+0x1e4>)
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	4a3a      	ldr	r2, [pc, #232]	; (80009dc <fsm_manual_run+0x1d8>)
 80008f2:	fba2 2303 	umull	r2, r3, r2, r3
 80008f6:	099b      	lsrs	r3, r3, #6
 80008f8:	4a39      	ldr	r2, [pc, #228]	; (80009e0 <fsm_manual_run+0x1dc>)
 80008fa:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80008fc:	f000 fd80 	bl	8001400 <UART_Parse>
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000900:	f7ff fd1a 	bl	8000338 <is_button3_pressed>
 8000904:	4603      	mov	r3, r0
 8000906:	2b00      	cmp	r3, #0
 8000908:	d003      	beq.n	8000912 <fsm_manual_run+0x10e>
			green_time = temp_green_time;
 800090a:	4b37      	ldr	r3, [pc, #220]	; (80009e8 <fsm_manual_run+0x1e4>)
 800090c:	681b      	ldr	r3, [r3, #0]
 800090e:	4a37      	ldr	r2, [pc, #220]	; (80009ec <fsm_manual_run+0x1e8>)
 8000910:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to INIT
		if(is_button1_pressed()){
 8000912:	f7ff fced 	bl	80002f0 <is_button1_pressed>
 8000916:	4603      	mov	r3, r0
 8000918:	2b00      	cmp	r3, #0
 800091a:	d054      	beq.n	80009c6 <fsm_manual_run+0x1c2>
			state = INIT;
 800091c:	4b2c      	ldr	r3, [pc, #176]	; (80009d0 <fsm_manual_run+0x1cc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
			//reset all button flag
			is_button2_pressed();
 8000922:	f7ff fcf7 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000926:	f7ff fd07 	bl	8000338 <is_button3_pressed>
		}
		break;
 800092a:	e04c      	b.n	80009c6 <fsm_manual_run+0x1c2>
	case RED_ADJUST:
		red_blink();
 800092c:	f000 fc8a 	bl	8001244 <red_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000930:	f7ff fcf0 	bl	8000314 <is_button2_pressed>
 8000934:	4603      	mov	r3, r0
 8000936:	2b00      	cmp	r3, #0
 8000938:	d104      	bne.n	8000944 <fsm_manual_run+0x140>
 800093a:	f7ff fd21 	bl	8000380 <is_button2_press1s>
 800093e:	4603      	mov	r3, r0
 8000940:	2b00      	cmp	r3, #0
 8000942:	d018      	beq.n	8000976 <fsm_manual_run+0x172>
			temp_red_time = temp_red_time% 30000 + 1000;
 8000944:	4b2a      	ldr	r3, [pc, #168]	; (80009f0 <fsm_manual_run+0x1ec>)
 8000946:	681a      	ldr	r2, [r3, #0]
 8000948:	4b23      	ldr	r3, [pc, #140]	; (80009d8 <fsm_manual_run+0x1d4>)
 800094a:	fba3 1302 	umull	r1, r3, r3, r2
 800094e:	0b5b      	lsrs	r3, r3, #13
 8000950:	f247 5130 	movw	r1, #30000	; 0x7530
 8000954:	fb01 f303 	mul.w	r3, r1, r3
 8000958:	1ad3      	subs	r3, r2, r3
 800095a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 800095e:	4a24      	ldr	r2, [pc, #144]	; (80009f0 <fsm_manual_run+0x1ec>)
 8000960:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_red_time/1000;
 8000962:	4b23      	ldr	r3, [pc, #140]	; (80009f0 <fsm_manual_run+0x1ec>)
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4a1d      	ldr	r2, [pc, #116]	; (80009dc <fsm_manual_run+0x1d8>)
 8000968:	fba2 2303 	umull	r2, r3, r2, r3
 800096c:	099b      	lsrs	r3, r3, #6
 800096e:	4a1c      	ldr	r2, [pc, #112]	; (80009e0 <fsm_manual_run+0x1dc>)
 8000970:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000972:	f000 fd45 	bl	8001400 <UART_Parse>
		}
		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000976:	f7ff fcdf 	bl	8000338 <is_button3_pressed>
 800097a:	4603      	mov	r3, r0
 800097c:	2b00      	cmp	r3, #0
 800097e:	d003      	beq.n	8000988 <fsm_manual_run+0x184>
			red_time = temp_red_time;
 8000980:	4b1b      	ldr	r3, [pc, #108]	; (80009f0 <fsm_manual_run+0x1ec>)
 8000982:	681b      	ldr	r3, [r3, #0]
 8000984:	4a1b      	ldr	r2, [pc, #108]	; (80009f4 <fsm_manual_run+0x1f0>)
 8000986:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to YELLOW_ADJUST
		if(is_button1_pressed()){
 8000988:	f7ff fcb2 	bl	80002f0 <is_button1_pressed>
 800098c:	4603      	mov	r3, r0
 800098e:	2b00      	cmp	r3, #0
 8000990:	d01b      	beq.n	80009ca <fsm_manual_run+0x1c6>
			state = YELLOW_ADJUST;
 8000992:	4b0f      	ldr	r3, [pc, #60]	; (80009d0 <fsm_manual_run+0x1cc>)
 8000994:	220c      	movs	r2, #12
 8000996:	701a      	strb	r2, [r3, #0]
			yellow1_on();
 8000998:	f000 fcdc 	bl	8001354 <yellow1_on>
			yellow2_on();
 800099c:	f000 fcee 	bl	800137c <yellow2_on>
			//reset all button flag
			is_button2_pressed();
 80009a0:	f7ff fcb8 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 80009a4:	f7ff fcc8 	bl	8000338 <is_button3_pressed>

			SEG_counter = temp_yellow_time/1000;
 80009a8:	4b0a      	ldr	r3, [pc, #40]	; (80009d4 <fsm_manual_run+0x1d0>)
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	4a0b      	ldr	r2, [pc, #44]	; (80009dc <fsm_manual_run+0x1d8>)
 80009ae:	fba2 2303 	umull	r2, r3, r2, r3
 80009b2:	099b      	lsrs	r3, r3, #6
 80009b4:	4a0a      	ldr	r2, [pc, #40]	; (80009e0 <fsm_manual_run+0x1dc>)
 80009b6:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80009b8:	f000 fd22 	bl	8001400 <UART_Parse>
		}
		break;
 80009bc:	e005      	b.n	80009ca <fsm_manual_run+0x1c6>
	default:
		break;
 80009be:	bf00      	nop
 80009c0:	e004      	b.n	80009cc <fsm_manual_run+0x1c8>
		break;
 80009c2:	bf00      	nop
 80009c4:	e002      	b.n	80009cc <fsm_manual_run+0x1c8>
		break;
 80009c6:	bf00      	nop
 80009c8:	e000      	b.n	80009cc <fsm_manual_run+0x1c8>
		break;
 80009ca:	bf00      	nop
	}
}
 80009cc:	bf00      	nop
 80009ce:	bd80      	pop	{r7, pc}
 80009d0:	200000dc 	.word	0x200000dc
 80009d4:	20000020 	.word	0x20000020
 80009d8:	45e7b273 	.word	0x45e7b273
 80009dc:	10624dd3 	.word	0x10624dd3
 80009e0:	200000d8 	.word	0x200000d8
 80009e4:	20000014 	.word	0x20000014
 80009e8:	2000001c 	.word	0x2000001c
 80009ec:	20000010 	.word	0x20000010
 80009f0:	20000018 	.word	0x20000018
 80009f4:	2000000c 	.word	0x2000000c

080009f8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80009f8:	b580      	push	{r7, lr}
 80009fa:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80009fc:	f000 fd44 	bl	8001488 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a00:	f000 f818 	bl	8000a34 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a04:	f000 f944 	bl	8000c90 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000a08:	f000 f856 	bl	8000ab8 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000a0c:	f000 f8a0 	bl	8000b50 <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8000a10:	f000 f914 	bl	8000c3c <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start_IT(&htim2);
 8000a14:	4805      	ldr	r0, [pc, #20]	; (8000a2c <main+0x34>)
 8000a16:	f001 fd8d 	bl	8002534 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000a1a:	2100      	movs	r1, #0
 8000a1c:	4804      	ldr	r0, [pc, #16]	; (8000a30 <main+0x38>)
 8000a1e:	f001 fe33 	bl	8002688 <HAL_TIM_PWM_Start>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		fsm_automatic_run();
 8000a22:	f7ff fd05 	bl	8000430 <fsm_automatic_run>
		fsm_manual_run();
 8000a26:	f7ff feed 	bl	8000804 <fsm_manual_run>
		fsm_automatic_run();
 8000a2a:	e7fa      	b.n	8000a22 <main+0x2a>
 8000a2c:	20000124 	.word	0x20000124
 8000a30:	2000016c 	.word	0x2000016c

08000a34 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000a34:	b580      	push	{r7, lr}
 8000a36:	b090      	sub	sp, #64	; 0x40
 8000a38:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000a3a:	f107 0318 	add.w	r3, r7, #24
 8000a3e:	2228      	movs	r2, #40	; 0x28
 8000a40:	2100      	movs	r1, #0
 8000a42:	4618      	mov	r0, r3
 8000a44:	f003 f986 	bl	8003d54 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000a48:	1d3b      	adds	r3, r7, #4
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	601a      	str	r2, [r3, #0]
 8000a4e:	605a      	str	r2, [r3, #4]
 8000a50:	609a      	str	r2, [r3, #8]
 8000a52:	60da      	str	r2, [r3, #12]
 8000a54:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000a56:	2302      	movs	r3, #2
 8000a58:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000a5a:	2301      	movs	r3, #1
 8000a5c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000a5e:	2310      	movs	r3, #16
 8000a60:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000a62:	2302      	movs	r3, #2
 8000a64:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000a66:	2300      	movs	r3, #0
 8000a68:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000a6a:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000a6e:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000a70:	f107 0318 	add.w	r3, r7, #24
 8000a74:	4618      	mov	r0, r3
 8000a76:	f001 f8f3 	bl	8001c60 <HAL_RCC_OscConfig>
 8000a7a:	4603      	mov	r3, r0
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	d001      	beq.n	8000a84 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000a80:	f000 f974 	bl	8000d6c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000a84:	230f      	movs	r3, #15
 8000a86:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000a88:	2302      	movs	r3, #2
 8000a8a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000a90:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a94:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000a96:	2300      	movs	r3, #0
 8000a98:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000a9a:	1d3b      	adds	r3, r7, #4
 8000a9c:	2102      	movs	r1, #2
 8000a9e:	4618      	mov	r0, r3
 8000aa0:	f001 fb60 	bl	8002164 <HAL_RCC_ClockConfig>
 8000aa4:	4603      	mov	r3, r0
 8000aa6:	2b00      	cmp	r3, #0
 8000aa8:	d001      	beq.n	8000aae <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000aaa:	f000 f95f 	bl	8000d6c <Error_Handler>
  }
}
 8000aae:	bf00      	nop
 8000ab0:	3740      	adds	r7, #64	; 0x40
 8000ab2:	46bd      	mov	sp, r7
 8000ab4:	bd80      	pop	{r7, pc}
	...

08000ab8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000ab8:	b580      	push	{r7, lr}
 8000aba:	b086      	sub	sp, #24
 8000abc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000abe:	f107 0308 	add.w	r3, r7, #8
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	601a      	str	r2, [r3, #0]
 8000ac6:	605a      	str	r2, [r3, #4]
 8000ac8:	609a      	str	r2, [r3, #8]
 8000aca:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000acc:	463b      	mov	r3, r7
 8000ace:	2200      	movs	r2, #0
 8000ad0:	601a      	str	r2, [r3, #0]
 8000ad2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000ad4:	4b1d      	ldr	r3, [pc, #116]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000ad6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000ada:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63;
 8000adc:	4b1b      	ldr	r3, [pc, #108]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000ade:	223f      	movs	r2, #63	; 0x3f
 8000ae0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ae2:	4b1a      	ldr	r3, [pc, #104]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8000ae8:	4b18      	ldr	r3, [pc, #96]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000aea:	f242 720f 	movw	r2, #9999	; 0x270f
 8000aee:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000af0:	4b16      	ldr	r3, [pc, #88]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000af2:	2200      	movs	r2, #0
 8000af4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000af6:	4b15      	ldr	r3, [pc, #84]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000af8:	2200      	movs	r2, #0
 8000afa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000afc:	4813      	ldr	r0, [pc, #76]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000afe:	f001 fcc9 	bl	8002494 <HAL_TIM_Base_Init>
 8000b02:	4603      	mov	r3, r0
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	d001      	beq.n	8000b0c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000b08:	f000 f930 	bl	8000d6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000b0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b10:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000b12:	f107 0308 	add.w	r3, r7, #8
 8000b16:	4619      	mov	r1, r3
 8000b18:	480c      	ldr	r0, [pc, #48]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000b1a:	f002 f81d 	bl	8002b58 <HAL_TIM_ConfigClockSource>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	2b00      	cmp	r3, #0
 8000b22:	d001      	beq.n	8000b28 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000b24:	f000 f922 	bl	8000d6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b28:	2300      	movs	r3, #0
 8000b2a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b2c:	2300      	movs	r3, #0
 8000b2e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000b30:	463b      	mov	r3, r7
 8000b32:	4619      	mov	r1, r3
 8000b34:	4805      	ldr	r0, [pc, #20]	; (8000b4c <MX_TIM2_Init+0x94>)
 8000b36:	f002 fb9b 	bl	8003270 <HAL_TIMEx_MasterConfigSynchronization>
 8000b3a:	4603      	mov	r3, r0
 8000b3c:	2b00      	cmp	r3, #0
 8000b3e:	d001      	beq.n	8000b44 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000b40:	f000 f914 	bl	8000d6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000b44:	bf00      	nop
 8000b46:	3718      	adds	r7, #24
 8000b48:	46bd      	mov	sp, r7
 8000b4a:	bd80      	pop	{r7, pc}
 8000b4c:	20000124 	.word	0x20000124

08000b50 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000b50:	b580      	push	{r7, lr}
 8000b52:	b08e      	sub	sp, #56	; 0x38
 8000b54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000b56:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	601a      	str	r2, [r3, #0]
 8000b5e:	605a      	str	r2, [r3, #4]
 8000b60:	609a      	str	r2, [r3, #8]
 8000b62:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000b64:	f107 0320 	add.w	r3, r7, #32
 8000b68:	2200      	movs	r2, #0
 8000b6a:	601a      	str	r2, [r3, #0]
 8000b6c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000b6e:	1d3b      	adds	r3, r7, #4
 8000b70:	2200      	movs	r2, #0
 8000b72:	601a      	str	r2, [r3, #0]
 8000b74:	605a      	str	r2, [r3, #4]
 8000b76:	609a      	str	r2, [r3, #8]
 8000b78:	60da      	str	r2, [r3, #12]
 8000b7a:	611a      	str	r2, [r3, #16]
 8000b7c:	615a      	str	r2, [r3, #20]
 8000b7e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000b80:	4b2c      	ldr	r3, [pc, #176]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000b82:	4a2d      	ldr	r2, [pc, #180]	; (8000c38 <MX_TIM3_Init+0xe8>)
 8000b84:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8000b86:	4b2b      	ldr	r3, [pc, #172]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000b88:	223f      	movs	r2, #63	; 0x3f
 8000b8a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b8c:	4b29      	ldr	r3, [pc, #164]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000b8e:	2200      	movs	r2, #0
 8000b90:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8000b92:	4b28      	ldr	r3, [pc, #160]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000b94:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000b98:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b9a:	4b26      	ldr	r3, [pc, #152]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000ba0:	4b24      	ldr	r3, [pc, #144]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000ba6:	4823      	ldr	r0, [pc, #140]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000ba8:	f001 fc74 	bl	8002494 <HAL_TIM_Base_Init>
 8000bac:	4603      	mov	r3, r0
 8000bae:	2b00      	cmp	r3, #0
 8000bb0:	d001      	beq.n	8000bb6 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8000bb2:	f000 f8db 	bl	8000d6c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000bb6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000bba:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000bbc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000bc0:	4619      	mov	r1, r3
 8000bc2:	481c      	ldr	r0, [pc, #112]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000bc4:	f001 ffc8 	bl	8002b58 <HAL_TIM_ConfigClockSource>
 8000bc8:	4603      	mov	r3, r0
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d001      	beq.n	8000bd2 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8000bce:	f000 f8cd 	bl	8000d6c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000bd2:	4818      	ldr	r0, [pc, #96]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000bd4:	f001 fd00 	bl	80025d8 <HAL_TIM_PWM_Init>
 8000bd8:	4603      	mov	r3, r0
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d001      	beq.n	8000be2 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8000bde:	f000 f8c5 	bl	8000d6c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000be2:	2300      	movs	r3, #0
 8000be4:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000be6:	2300      	movs	r3, #0
 8000be8:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000bea:	f107 0320 	add.w	r3, r7, #32
 8000bee:	4619      	mov	r1, r3
 8000bf0:	4810      	ldr	r0, [pc, #64]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000bf2:	f002 fb3d 	bl	8003270 <HAL_TIMEx_MasterConfigSynchronization>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	2b00      	cmp	r3, #0
 8000bfa:	d001      	beq.n	8000c00 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8000bfc:	f000 f8b6 	bl	8000d6c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000c00:	2360      	movs	r3, #96	; 0x60
 8000c02:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000c04:	2300      	movs	r3, #0
 8000c06:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000c08:	2300      	movs	r3, #0
 8000c0a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000c0c:	2300      	movs	r3, #0
 8000c0e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000c10:	1d3b      	adds	r3, r7, #4
 8000c12:	2200      	movs	r2, #0
 8000c14:	4619      	mov	r1, r3
 8000c16:	4807      	ldr	r0, [pc, #28]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000c18:	f001 fee0 	bl	80029dc <HAL_TIM_PWM_ConfigChannel>
 8000c1c:	4603      	mov	r3, r0
 8000c1e:	2b00      	cmp	r3, #0
 8000c20:	d001      	beq.n	8000c26 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8000c22:	f000 f8a3 	bl	8000d6c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000c26:	4803      	ldr	r0, [pc, #12]	; (8000c34 <MX_TIM3_Init+0xe4>)
 8000c28:	f000 f9ee 	bl	8001008 <HAL_TIM_MspPostInit>

}
 8000c2c:	bf00      	nop
 8000c2e:	3738      	adds	r7, #56	; 0x38
 8000c30:	46bd      	mov	sp, r7
 8000c32:	bd80      	pop	{r7, pc}
 8000c34:	2000016c 	.word	0x2000016c
 8000c38:	40000400 	.word	0x40000400

08000c3c <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000c40:	4b11      	ldr	r3, [pc, #68]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c42:	4a12      	ldr	r2, [pc, #72]	; (8000c8c <MX_USART2_UART_Init+0x50>)
 8000c44:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000c46:	4b10      	ldr	r3, [pc, #64]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c48:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000c4c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000c4e:	4b0e      	ldr	r3, [pc, #56]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c50:	2200      	movs	r2, #0
 8000c52:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000c54:	4b0c      	ldr	r3, [pc, #48]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c56:	2200      	movs	r2, #0
 8000c58:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000c5a:	4b0b      	ldr	r3, [pc, #44]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000c60:	4b09      	ldr	r3, [pc, #36]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c62:	220c      	movs	r2, #12
 8000c64:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c66:	4b08      	ldr	r3, [pc, #32]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c68:	2200      	movs	r2, #0
 8000c6a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000c6c:	4b06      	ldr	r3, [pc, #24]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c6e:	2200      	movs	r2, #0
 8000c70:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000c72:	4805      	ldr	r0, [pc, #20]	; (8000c88 <MX_USART2_UART_Init+0x4c>)
 8000c74:	f002 fb6c 	bl	8003350 <HAL_UART_Init>
 8000c78:	4603      	mov	r3, r0
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d001      	beq.n	8000c82 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000c7e:	f000 f875 	bl	8000d6c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000c82:	bf00      	nop
 8000c84:	bd80      	pop	{r7, pc}
 8000c86:	bf00      	nop
 8000c88:	200000e0 	.word	0x200000e0
 8000c8c:	40004400 	.word	0x40004400

08000c90 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c90:	b580      	push	{r7, lr}
 8000c92:	b086      	sub	sp, #24
 8000c94:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c96:	f107 0308 	add.w	r3, r7, #8
 8000c9a:	2200      	movs	r2, #0
 8000c9c:	601a      	str	r2, [r3, #0]
 8000c9e:	605a      	str	r2, [r3, #4]
 8000ca0:	609a      	str	r2, [r3, #8]
 8000ca2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ca4:	4b2e      	ldr	r3, [pc, #184]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000ca6:	699b      	ldr	r3, [r3, #24]
 8000ca8:	4a2d      	ldr	r2, [pc, #180]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000caa:	f043 0304 	orr.w	r3, r3, #4
 8000cae:	6193      	str	r3, [r2, #24]
 8000cb0:	4b2b      	ldr	r3, [pc, #172]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000cb2:	699b      	ldr	r3, [r3, #24]
 8000cb4:	f003 0304 	and.w	r3, r3, #4
 8000cb8:	607b      	str	r3, [r7, #4]
 8000cba:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cbc:	4b28      	ldr	r3, [pc, #160]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000cbe:	699b      	ldr	r3, [r3, #24]
 8000cc0:	4a27      	ldr	r2, [pc, #156]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000cc2:	f043 0308 	orr.w	r3, r3, #8
 8000cc6:	6193      	str	r3, [r2, #24]
 8000cc8:	4b25      	ldr	r3, [pc, #148]	; (8000d60 <MX_GPIO_Init+0xd0>)
 8000cca:	699b      	ldr	r3, [r3, #24]
 8000ccc:	f003 0308 	and.w	r3, r3, #8
 8000cd0:	603b      	str	r3, [r7, #0]
 8000cd2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin, GPIO_PIN_SET);
 8000cd4:	2201      	movs	r2, #1
 8000cd6:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000cda:	4822      	ldr	r0, [pc, #136]	; (8000d64 <MX_GPIO_Init+0xd4>)
 8000cdc:	f000 ff8f 	bl	8001bfe <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, PEDE_LIGHT_B_Pin|LIGHT1_A_Pin, GPIO_PIN_SET);
 8000ce0:	2201      	movs	r2, #1
 8000ce2:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8000ce6:	4820      	ldr	r0, [pc, #128]	; (8000d68 <MX_GPIO_Init+0xd8>)
 8000ce8:	f000 ff89 	bl	8001bfe <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEDE_BUTTON_Pin BUTTON1_Pin BUTTON2_Pin */
  GPIO_InitStruct.Pin = PEDE_BUTTON_Pin|BUTTON1_Pin|BUTTON2_Pin;
 8000cec:	2313      	movs	r3, #19
 8000cee:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000cf4:	2301      	movs	r3, #1
 8000cf6:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cf8:	f107 0308 	add.w	r3, r7, #8
 8000cfc:	4619      	mov	r1, r3
 8000cfe:	481a      	ldr	r0, [pc, #104]	; (8000d68 <MX_GPIO_Init+0xd8>)
 8000d00:	f000 fde2 	bl	80018c8 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON3_Pin */
  GPIO_InitStruct.Pin = BUTTON3_Pin;
 8000d04:	2301      	movs	r3, #1
 8000d06:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d08:	2300      	movs	r3, #0
 8000d0a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(BUTTON3_GPIO_Port, &GPIO_InitStruct);
 8000d10:	f107 0308 	add.w	r3, r7, #8
 8000d14:	4619      	mov	r1, r3
 8000d16:	4813      	ldr	r0, [pc, #76]	; (8000d64 <MX_GPIO_Init+0xd4>)
 8000d18:	f000 fdd6 	bl	80018c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PEDE_LIGHT_A_Pin LIGHT1_B_Pin LIGHT2_B_Pin LIGHT2_A_Pin */
  GPIO_InitStruct.Pin = PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin;
 8000d1c:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000d20:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d22:	2301      	movs	r3, #1
 8000d24:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d26:	2300      	movs	r3, #0
 8000d28:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d2a:	2302      	movs	r3, #2
 8000d2c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d2e:	f107 0308 	add.w	r3, r7, #8
 8000d32:	4619      	mov	r1, r3
 8000d34:	480b      	ldr	r0, [pc, #44]	; (8000d64 <MX_GPIO_Init+0xd4>)
 8000d36:	f000 fdc7 	bl	80018c8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PEDE_LIGHT_B_Pin LIGHT1_A_Pin */
  GPIO_InitStruct.Pin = PEDE_LIGHT_B_Pin|LIGHT1_A_Pin;
 8000d3a:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8000d3e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d40:	2301      	movs	r3, #1
 8000d42:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d44:	2300      	movs	r3, #0
 8000d46:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d48:	2302      	movs	r3, #2
 8000d4a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d4c:	f107 0308 	add.w	r3, r7, #8
 8000d50:	4619      	mov	r1, r3
 8000d52:	4805      	ldr	r0, [pc, #20]	; (8000d68 <MX_GPIO_Init+0xd8>)
 8000d54:	f000 fdb8 	bl	80018c8 <HAL_GPIO_Init>

}
 8000d58:	bf00      	nop
 8000d5a:	3718      	adds	r7, #24
 8000d5c:	46bd      	mov	sp, r7
 8000d5e:	bd80      	pop	{r7, pc}
 8000d60:	40021000 	.word	0x40021000
 8000d64:	40010c00 	.word	0x40010c00
 8000d68:	40010800 	.word	0x40010800

08000d6c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d6c:	b480      	push	{r7}
 8000d6e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d70:	b672      	cpsid	i
}
 8000d72:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8000d74:	e7fe      	b.n	8000d74 <Error_Handler+0x8>
	...

08000d78 <setTimer1>:

// Add params for timer 5
int timer5_flag = 0;
int timer5_counter = 0;

void setTimer1(uint32_t duration){
 8000d78:	b480      	push	{r7}
 8000d7a:	b083      	sub	sp, #12
 8000d7c:	af00      	add	r7, sp, #0
 8000d7e:	6078      	str	r0, [r7, #4]
	timer1_counter = duration/TIMER_CYCLE;
 8000d80:	230a      	movs	r3, #10
 8000d82:	461a      	mov	r2, r3
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	fbb3 f3f2 	udiv	r3, r3, r2
 8000d8a:	461a      	mov	r2, r3
 8000d8c:	4b04      	ldr	r3, [pc, #16]	; (8000da0 <setTimer1+0x28>)
 8000d8e:	601a      	str	r2, [r3, #0]
	timer1_flag = 0;
 8000d90:	4b04      	ldr	r3, [pc, #16]	; (8000da4 <setTimer1+0x2c>)
 8000d92:	2200      	movs	r2, #0
 8000d94:	601a      	str	r2, [r3, #0]
}
 8000d96:	bf00      	nop
 8000d98:	370c      	adds	r7, #12
 8000d9a:	46bd      	mov	sp, r7
 8000d9c:	bc80      	pop	{r7}
 8000d9e:	4770      	bx	lr
 8000da0:	200001b8 	.word	0x200001b8
 8000da4:	200001b4 	.word	0x200001b4

08000da8 <setTimer2>:

void setTimer2(uint32_t duration){
 8000da8:	b480      	push	{r7}
 8000daa:	b083      	sub	sp, #12
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TIMER_CYCLE;
 8000db0:	230a      	movs	r3, #10
 8000db2:	461a      	mov	r2, r3
 8000db4:	687b      	ldr	r3, [r7, #4]
 8000db6:	fbb3 f3f2 	udiv	r3, r3, r2
 8000dba:	461a      	mov	r2, r3
 8000dbc:	4b04      	ldr	r3, [pc, #16]	; (8000dd0 <setTimer2+0x28>)
 8000dbe:	601a      	str	r2, [r3, #0]
	timer2_flag = 0;
 8000dc0:	4b04      	ldr	r3, [pc, #16]	; (8000dd4 <setTimer2+0x2c>)
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	601a      	str	r2, [r3, #0]
}
 8000dc6:	bf00      	nop
 8000dc8:	370c      	adds	r7, #12
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	bc80      	pop	{r7}
 8000dce:	4770      	bx	lr
 8000dd0:	200001c0 	.word	0x200001c0
 8000dd4:	200001bc 	.word	0x200001bc

08000dd8 <setTimer3>:

void setTimer3(uint32_t duration){
 8000dd8:	b480      	push	{r7}
 8000dda:	b083      	sub	sp, #12
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
	timer3_counter = duration/TIMER_CYCLE;
 8000de0:	230a      	movs	r3, #10
 8000de2:	461a      	mov	r2, r3
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	fbb3 f3f2 	udiv	r3, r3, r2
 8000dea:	461a      	mov	r2, r3
 8000dec:	4b04      	ldr	r3, [pc, #16]	; (8000e00 <setTimer3+0x28>)
 8000dee:	601a      	str	r2, [r3, #0]
	timer3_flag = 0;
 8000df0:	4b04      	ldr	r3, [pc, #16]	; (8000e04 <setTimer3+0x2c>)
 8000df2:	2200      	movs	r2, #0
 8000df4:	601a      	str	r2, [r3, #0]
}
 8000df6:	bf00      	nop
 8000df8:	370c      	adds	r7, #12
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	bc80      	pop	{r7}
 8000dfe:	4770      	bx	lr
 8000e00:	200001c8 	.word	0x200001c8
 8000e04:	200001c4 	.word	0x200001c4

08000e08 <setTimer4>:

void setTimer4(uint32_t duration)
{
 8000e08:	b480      	push	{r7}
 8000e0a:	b083      	sub	sp, #12
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	6078      	str	r0, [r7, #4]
	timer4_counter = duration/TIMER_CYCLE;
 8000e10:	230a      	movs	r3, #10
 8000e12:	461a      	mov	r2, r3
 8000e14:	687b      	ldr	r3, [r7, #4]
 8000e16:	fbb3 f3f2 	udiv	r3, r3, r2
 8000e1a:	461a      	mov	r2, r3
 8000e1c:	4b04      	ldr	r3, [pc, #16]	; (8000e30 <setTimer4+0x28>)
 8000e1e:	601a      	str	r2, [r3, #0]
	timer4_flag = 0;
 8000e20:	4b04      	ldr	r3, [pc, #16]	; (8000e34 <setTimer4+0x2c>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	601a      	str	r2, [r3, #0]
}
 8000e26:	bf00      	nop
 8000e28:	370c      	adds	r7, #12
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	bc80      	pop	{r7}
 8000e2e:	4770      	bx	lr
 8000e30:	200001d0 	.word	0x200001d0
 8000e34:	200001cc 	.word	0x200001cc

08000e38 <timerRun>:
	timer5_counter = duration/TIMER_CYCLE;
	timer5_flag = 0;
}


void timerRun(){
 8000e38:	b480      	push	{r7}
 8000e3a:	af00      	add	r7, sp, #0
	if(timer1_counter >0){
 8000e3c:	4b29      	ldr	r3, [pc, #164]	; (8000ee4 <timerRun+0xac>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	dd0b      	ble.n	8000e5c <timerRun+0x24>
		timer1_counter--;
 8000e44:	4b27      	ldr	r3, [pc, #156]	; (8000ee4 <timerRun+0xac>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	3b01      	subs	r3, #1
 8000e4a:	4a26      	ldr	r2, [pc, #152]	; (8000ee4 <timerRun+0xac>)
 8000e4c:	6013      	str	r3, [r2, #0]
		if(timer1_counter <=0){
 8000e4e:	4b25      	ldr	r3, [pc, #148]	; (8000ee4 <timerRun+0xac>)
 8000e50:	681b      	ldr	r3, [r3, #0]
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	dc02      	bgt.n	8000e5c <timerRun+0x24>
			timer1_flag =1;
 8000e56:	4b24      	ldr	r3, [pc, #144]	; (8000ee8 <timerRun+0xb0>)
 8000e58:	2201      	movs	r2, #1
 8000e5a:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer2_counter >0){
 8000e5c:	4b23      	ldr	r3, [pc, #140]	; (8000eec <timerRun+0xb4>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	dd0b      	ble.n	8000e7c <timerRun+0x44>
			timer2_counter--;
 8000e64:	4b21      	ldr	r3, [pc, #132]	; (8000eec <timerRun+0xb4>)
 8000e66:	681b      	ldr	r3, [r3, #0]
 8000e68:	3b01      	subs	r3, #1
 8000e6a:	4a20      	ldr	r2, [pc, #128]	; (8000eec <timerRun+0xb4>)
 8000e6c:	6013      	str	r3, [r2, #0]
			if(timer2_counter <=0){
 8000e6e:	4b1f      	ldr	r3, [pc, #124]	; (8000eec <timerRun+0xb4>)
 8000e70:	681b      	ldr	r3, [r3, #0]
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	dc02      	bgt.n	8000e7c <timerRun+0x44>
				timer2_flag =1;
 8000e76:	4b1e      	ldr	r3, [pc, #120]	; (8000ef0 <timerRun+0xb8>)
 8000e78:	2201      	movs	r2, #1
 8000e7a:	601a      	str	r2, [r3, #0]
			}
		}
	if(timer3_counter >0){
 8000e7c:	4b1d      	ldr	r3, [pc, #116]	; (8000ef4 <timerRun+0xbc>)
 8000e7e:	681b      	ldr	r3, [r3, #0]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	dd0b      	ble.n	8000e9c <timerRun+0x64>
			timer3_counter--;
 8000e84:	4b1b      	ldr	r3, [pc, #108]	; (8000ef4 <timerRun+0xbc>)
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	3b01      	subs	r3, #1
 8000e8a:	4a1a      	ldr	r2, [pc, #104]	; (8000ef4 <timerRun+0xbc>)
 8000e8c:	6013      	str	r3, [r2, #0]
			if(timer3_counter <=0){
 8000e8e:	4b19      	ldr	r3, [pc, #100]	; (8000ef4 <timerRun+0xbc>)
 8000e90:	681b      	ldr	r3, [r3, #0]
 8000e92:	2b00      	cmp	r3, #0
 8000e94:	dc02      	bgt.n	8000e9c <timerRun+0x64>
				timer3_flag =1;
 8000e96:	4b18      	ldr	r3, [pc, #96]	; (8000ef8 <timerRun+0xc0>)
 8000e98:	2201      	movs	r2, #1
 8000e9a:	601a      	str	r2, [r3, #0]
			}
	}
	if(timer4_counter >0){
 8000e9c:	4b17      	ldr	r3, [pc, #92]	; (8000efc <timerRun+0xc4>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	dd0b      	ble.n	8000ebc <timerRun+0x84>
				timer4_counter--;
 8000ea4:	4b15      	ldr	r3, [pc, #84]	; (8000efc <timerRun+0xc4>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	3b01      	subs	r3, #1
 8000eaa:	4a14      	ldr	r2, [pc, #80]	; (8000efc <timerRun+0xc4>)
 8000eac:	6013      	str	r3, [r2, #0]
				if(timer4_counter <=0){
 8000eae:	4b13      	ldr	r3, [pc, #76]	; (8000efc <timerRun+0xc4>)
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	dc02      	bgt.n	8000ebc <timerRun+0x84>
					timer4_flag =1;
 8000eb6:	4b12      	ldr	r3, [pc, #72]	; (8000f00 <timerRun+0xc8>)
 8000eb8:	2201      	movs	r2, #1
 8000eba:	601a      	str	r2, [r3, #0]
				}
		}
	if(timer5_counter >0){
 8000ebc:	4b11      	ldr	r3, [pc, #68]	; (8000f04 <timerRun+0xcc>)
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	dd0b      	ble.n	8000edc <timerRun+0xa4>
				timer5_counter--;
 8000ec4:	4b0f      	ldr	r3, [pc, #60]	; (8000f04 <timerRun+0xcc>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	3b01      	subs	r3, #1
 8000eca:	4a0e      	ldr	r2, [pc, #56]	; (8000f04 <timerRun+0xcc>)
 8000ecc:	6013      	str	r3, [r2, #0]
				if(timer5_counter <=0){
 8000ece:	4b0d      	ldr	r3, [pc, #52]	; (8000f04 <timerRun+0xcc>)
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	2b00      	cmp	r3, #0
 8000ed4:	dc02      	bgt.n	8000edc <timerRun+0xa4>
					timer5_flag =1;
 8000ed6:	4b0c      	ldr	r3, [pc, #48]	; (8000f08 <timerRun+0xd0>)
 8000ed8:	2201      	movs	r2, #1
 8000eda:	601a      	str	r2, [r3, #0]
				}
		}
}
 8000edc:	bf00      	nop
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	bc80      	pop	{r7}
 8000ee2:	4770      	bx	lr
 8000ee4:	200001b8 	.word	0x200001b8
 8000ee8:	200001b4 	.word	0x200001b4
 8000eec:	200001c0 	.word	0x200001c0
 8000ef0:	200001bc 	.word	0x200001bc
 8000ef4:	200001c8 	.word	0x200001c8
 8000ef8:	200001c4 	.word	0x200001c4
 8000efc:	200001d0 	.word	0x200001d0
 8000f00:	200001cc 	.word	0x200001cc
 8000f04:	200001d8 	.word	0x200001d8
 8000f08:	200001d4 	.word	0x200001d4

08000f0c <HAL_TIM_PeriodElapsedCallback>:


void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	b082      	sub	sp, #8
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	6078      	str	r0, [r7, #4]
	button_reading();
 8000f14:	f7ff f922 	bl	800015c <button_reading>
	timerRun();
 8000f18:	f7ff ff8e 	bl	8000e38 <timerRun>
}
 8000f1c:	bf00      	nop
 8000f1e:	3708      	adds	r7, #8
 8000f20:	46bd      	mov	sp, r7
 8000f22:	bd80      	pop	{r7, pc}

08000f24 <HAL_MspInit>:
 8000f24:	b480      	push	{r7}
 8000f26:	b085      	sub	sp, #20
 8000f28:	af00      	add	r7, sp, #0
 8000f2a:	4b15      	ldr	r3, [pc, #84]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f2c:	699b      	ldr	r3, [r3, #24]
 8000f2e:	4a14      	ldr	r2, [pc, #80]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f30:	f043 0301 	orr.w	r3, r3, #1
 8000f34:	6193      	str	r3, [r2, #24]
 8000f36:	4b12      	ldr	r3, [pc, #72]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f38:	699b      	ldr	r3, [r3, #24]
 8000f3a:	f003 0301 	and.w	r3, r3, #1
 8000f3e:	60bb      	str	r3, [r7, #8]
 8000f40:	68bb      	ldr	r3, [r7, #8]
 8000f42:	4b0f      	ldr	r3, [pc, #60]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f44:	69db      	ldr	r3, [r3, #28]
 8000f46:	4a0e      	ldr	r2, [pc, #56]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f48:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f4c:	61d3      	str	r3, [r2, #28]
 8000f4e:	4b0c      	ldr	r3, [pc, #48]	; (8000f80 <HAL_MspInit+0x5c>)
 8000f50:	69db      	ldr	r3, [r3, #28]
 8000f52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f56:	607b      	str	r3, [r7, #4]
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	4b0a      	ldr	r3, [pc, #40]	; (8000f84 <HAL_MspInit+0x60>)
 8000f5c:	685b      	ldr	r3, [r3, #4]
 8000f5e:	60fb      	str	r3, [r7, #12]
 8000f60:	68fb      	ldr	r3, [r7, #12]
 8000f62:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000f66:	60fb      	str	r3, [r7, #12]
 8000f68:	68fb      	ldr	r3, [r7, #12]
 8000f6a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000f6e:	60fb      	str	r3, [r7, #12]
 8000f70:	4a04      	ldr	r2, [pc, #16]	; (8000f84 <HAL_MspInit+0x60>)
 8000f72:	68fb      	ldr	r3, [r7, #12]
 8000f74:	6053      	str	r3, [r2, #4]
 8000f76:	bf00      	nop
 8000f78:	3714      	adds	r7, #20
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bc80      	pop	{r7}
 8000f7e:	4770      	bx	lr
 8000f80:	40021000 	.word	0x40021000
 8000f84:	40010000 	.word	0x40010000

08000f88 <HAL_TIM_Base_MspInit>:
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	b084      	sub	sp, #16
 8000f8c:	af00      	add	r7, sp, #0
 8000f8e:	6078      	str	r0, [r7, #4]
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000f98:	d114      	bne.n	8000fc4 <HAL_TIM_Base_MspInit+0x3c>
 8000f9a:	4b19      	ldr	r3, [pc, #100]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000f9c:	69db      	ldr	r3, [r3, #28]
 8000f9e:	4a18      	ldr	r2, [pc, #96]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000fa0:	f043 0301 	orr.w	r3, r3, #1
 8000fa4:	61d3      	str	r3, [r2, #28]
 8000fa6:	4b16      	ldr	r3, [pc, #88]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000fa8:	69db      	ldr	r3, [r3, #28]
 8000faa:	f003 0301 	and.w	r3, r3, #1
 8000fae:	60fb      	str	r3, [r7, #12]
 8000fb0:	68fb      	ldr	r3, [r7, #12]
 8000fb2:	2200      	movs	r2, #0
 8000fb4:	2100      	movs	r1, #0
 8000fb6:	201c      	movs	r0, #28
 8000fb8:	f000 fb9f 	bl	80016fa <HAL_NVIC_SetPriority>
 8000fbc:	201c      	movs	r0, #28
 8000fbe:	f000 fbb8 	bl	8001732 <HAL_NVIC_EnableIRQ>
 8000fc2:	e018      	b.n	8000ff6 <HAL_TIM_Base_MspInit+0x6e>
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	4a0e      	ldr	r2, [pc, #56]	; (8001004 <HAL_TIM_Base_MspInit+0x7c>)
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	d113      	bne.n	8000ff6 <HAL_TIM_Base_MspInit+0x6e>
 8000fce:	4b0c      	ldr	r3, [pc, #48]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000fd0:	69db      	ldr	r3, [r3, #28]
 8000fd2:	4a0b      	ldr	r2, [pc, #44]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000fd4:	f043 0302 	orr.w	r3, r3, #2
 8000fd8:	61d3      	str	r3, [r2, #28]
 8000fda:	4b09      	ldr	r3, [pc, #36]	; (8001000 <HAL_TIM_Base_MspInit+0x78>)
 8000fdc:	69db      	ldr	r3, [r3, #28]
 8000fde:	f003 0302 	and.w	r3, r3, #2
 8000fe2:	60bb      	str	r3, [r7, #8]
 8000fe4:	68bb      	ldr	r3, [r7, #8]
 8000fe6:	2200      	movs	r2, #0
 8000fe8:	2100      	movs	r1, #0
 8000fea:	201d      	movs	r0, #29
 8000fec:	f000 fb85 	bl	80016fa <HAL_NVIC_SetPriority>
 8000ff0:	201d      	movs	r0, #29
 8000ff2:	f000 fb9e 	bl	8001732 <HAL_NVIC_EnableIRQ>
 8000ff6:	bf00      	nop
 8000ff8:	3710      	adds	r7, #16
 8000ffa:	46bd      	mov	sp, r7
 8000ffc:	bd80      	pop	{r7, pc}
 8000ffe:	bf00      	nop
 8001000:	40021000 	.word	0x40021000
 8001004:	40000400 	.word	0x40000400

08001008 <HAL_TIM_MspPostInit>:
 8001008:	b580      	push	{r7, lr}
 800100a:	b088      	sub	sp, #32
 800100c:	af00      	add	r7, sp, #0
 800100e:	6078      	str	r0, [r7, #4]
 8001010:	f107 0310 	add.w	r3, r7, #16
 8001014:	2200      	movs	r2, #0
 8001016:	601a      	str	r2, [r3, #0]
 8001018:	605a      	str	r2, [r3, #4]
 800101a:	609a      	str	r2, [r3, #8]
 800101c:	60da      	str	r2, [r3, #12]
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	4a0f      	ldr	r2, [pc, #60]	; (8001060 <HAL_TIM_MspPostInit+0x58>)
 8001024:	4293      	cmp	r3, r2
 8001026:	d117      	bne.n	8001058 <HAL_TIM_MspPostInit+0x50>
 8001028:	4b0e      	ldr	r3, [pc, #56]	; (8001064 <HAL_TIM_MspPostInit+0x5c>)
 800102a:	699b      	ldr	r3, [r3, #24]
 800102c:	4a0d      	ldr	r2, [pc, #52]	; (8001064 <HAL_TIM_MspPostInit+0x5c>)
 800102e:	f043 0304 	orr.w	r3, r3, #4
 8001032:	6193      	str	r3, [r2, #24]
 8001034:	4b0b      	ldr	r3, [pc, #44]	; (8001064 <HAL_TIM_MspPostInit+0x5c>)
 8001036:	699b      	ldr	r3, [r3, #24]
 8001038:	f003 0304 	and.w	r3, r3, #4
 800103c:	60fb      	str	r3, [r7, #12]
 800103e:	68fb      	ldr	r3, [r7, #12]
 8001040:	2340      	movs	r3, #64	; 0x40
 8001042:	613b      	str	r3, [r7, #16]
 8001044:	2302      	movs	r3, #2
 8001046:	617b      	str	r3, [r7, #20]
 8001048:	2302      	movs	r3, #2
 800104a:	61fb      	str	r3, [r7, #28]
 800104c:	f107 0310 	add.w	r3, r7, #16
 8001050:	4619      	mov	r1, r3
 8001052:	4805      	ldr	r0, [pc, #20]	; (8001068 <HAL_TIM_MspPostInit+0x60>)
 8001054:	f000 fc38 	bl	80018c8 <HAL_GPIO_Init>
 8001058:	bf00      	nop
 800105a:	3720      	adds	r7, #32
 800105c:	46bd      	mov	sp, r7
 800105e:	bd80      	pop	{r7, pc}
 8001060:	40000400 	.word	0x40000400
 8001064:	40021000 	.word	0x40021000
 8001068:	40010800 	.word	0x40010800

0800106c <HAL_UART_MspInit>:
 800106c:	b580      	push	{r7, lr}
 800106e:	b088      	sub	sp, #32
 8001070:	af00      	add	r7, sp, #0
 8001072:	6078      	str	r0, [r7, #4]
 8001074:	f107 0310 	add.w	r3, r7, #16
 8001078:	2200      	movs	r2, #0
 800107a:	601a      	str	r2, [r3, #0]
 800107c:	605a      	str	r2, [r3, #4]
 800107e:	609a      	str	r2, [r3, #8]
 8001080:	60da      	str	r2, [r3, #12]
 8001082:	687b      	ldr	r3, [r7, #4]
 8001084:	681b      	ldr	r3, [r3, #0]
 8001086:	4a1f      	ldr	r2, [pc, #124]	; (8001104 <HAL_UART_MspInit+0x98>)
 8001088:	4293      	cmp	r3, r2
 800108a:	d137      	bne.n	80010fc <HAL_UART_MspInit+0x90>
 800108c:	4b1e      	ldr	r3, [pc, #120]	; (8001108 <HAL_UART_MspInit+0x9c>)
 800108e:	69db      	ldr	r3, [r3, #28]
 8001090:	4a1d      	ldr	r2, [pc, #116]	; (8001108 <HAL_UART_MspInit+0x9c>)
 8001092:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001096:	61d3      	str	r3, [r2, #28]
 8001098:	4b1b      	ldr	r3, [pc, #108]	; (8001108 <HAL_UART_MspInit+0x9c>)
 800109a:	69db      	ldr	r3, [r3, #28]
 800109c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80010a0:	60fb      	str	r3, [r7, #12]
 80010a2:	68fb      	ldr	r3, [r7, #12]
 80010a4:	4b18      	ldr	r3, [pc, #96]	; (8001108 <HAL_UART_MspInit+0x9c>)
 80010a6:	699b      	ldr	r3, [r3, #24]
 80010a8:	4a17      	ldr	r2, [pc, #92]	; (8001108 <HAL_UART_MspInit+0x9c>)
 80010aa:	f043 0304 	orr.w	r3, r3, #4
 80010ae:	6193      	str	r3, [r2, #24]
 80010b0:	4b15      	ldr	r3, [pc, #84]	; (8001108 <HAL_UART_MspInit+0x9c>)
 80010b2:	699b      	ldr	r3, [r3, #24]
 80010b4:	f003 0304 	and.w	r3, r3, #4
 80010b8:	60bb      	str	r3, [r7, #8]
 80010ba:	68bb      	ldr	r3, [r7, #8]
 80010bc:	2304      	movs	r3, #4
 80010be:	613b      	str	r3, [r7, #16]
 80010c0:	2302      	movs	r3, #2
 80010c2:	617b      	str	r3, [r7, #20]
 80010c4:	2303      	movs	r3, #3
 80010c6:	61fb      	str	r3, [r7, #28]
 80010c8:	f107 0310 	add.w	r3, r7, #16
 80010cc:	4619      	mov	r1, r3
 80010ce:	480f      	ldr	r0, [pc, #60]	; (800110c <HAL_UART_MspInit+0xa0>)
 80010d0:	f000 fbfa 	bl	80018c8 <HAL_GPIO_Init>
 80010d4:	2308      	movs	r3, #8
 80010d6:	613b      	str	r3, [r7, #16]
 80010d8:	2300      	movs	r3, #0
 80010da:	617b      	str	r3, [r7, #20]
 80010dc:	2300      	movs	r3, #0
 80010de:	61bb      	str	r3, [r7, #24]
 80010e0:	f107 0310 	add.w	r3, r7, #16
 80010e4:	4619      	mov	r1, r3
 80010e6:	4809      	ldr	r0, [pc, #36]	; (800110c <HAL_UART_MspInit+0xa0>)
 80010e8:	f000 fbee 	bl	80018c8 <HAL_GPIO_Init>
 80010ec:	2200      	movs	r2, #0
 80010ee:	2100      	movs	r1, #0
 80010f0:	2026      	movs	r0, #38	; 0x26
 80010f2:	f000 fb02 	bl	80016fa <HAL_NVIC_SetPriority>
 80010f6:	2026      	movs	r0, #38	; 0x26
 80010f8:	f000 fb1b 	bl	8001732 <HAL_NVIC_EnableIRQ>
 80010fc:	bf00      	nop
 80010fe:	3720      	adds	r7, #32
 8001100:	46bd      	mov	sp, r7
 8001102:	bd80      	pop	{r7, pc}
 8001104:	40004400 	.word	0x40004400
 8001108:	40021000 	.word	0x40021000
 800110c:	40010800 	.word	0x40010800

08001110 <NMI_Handler>:
 8001110:	b480      	push	{r7}
 8001112:	af00      	add	r7, sp, #0
 8001114:	e7fe      	b.n	8001114 <NMI_Handler+0x4>

08001116 <HardFault_Handler>:
 8001116:	b480      	push	{r7}
 8001118:	af00      	add	r7, sp, #0
 800111a:	e7fe      	b.n	800111a <HardFault_Handler+0x4>

0800111c <MemManage_Handler>:
 800111c:	b480      	push	{r7}
 800111e:	af00      	add	r7, sp, #0
 8001120:	e7fe      	b.n	8001120 <MemManage_Handler+0x4>

08001122 <BusFault_Handler>:
 8001122:	b480      	push	{r7}
 8001124:	af00      	add	r7, sp, #0
 8001126:	e7fe      	b.n	8001126 <BusFault_Handler+0x4>

08001128 <UsageFault_Handler>:
 8001128:	b480      	push	{r7}
 800112a:	af00      	add	r7, sp, #0
 800112c:	e7fe      	b.n	800112c <UsageFault_Handler+0x4>

0800112e <SVC_Handler>:
 800112e:	b480      	push	{r7}
 8001130:	af00      	add	r7, sp, #0
 8001132:	bf00      	nop
 8001134:	46bd      	mov	sp, r7
 8001136:	bc80      	pop	{r7}
 8001138:	4770      	bx	lr

0800113a <DebugMon_Handler>:
 800113a:	b480      	push	{r7}
 800113c:	af00      	add	r7, sp, #0
 800113e:	bf00      	nop
 8001140:	46bd      	mov	sp, r7
 8001142:	bc80      	pop	{r7}
 8001144:	4770      	bx	lr

08001146 <PendSV_Handler>:
 8001146:	b480      	push	{r7}
 8001148:	af00      	add	r7, sp, #0
 800114a:	bf00      	nop
 800114c:	46bd      	mov	sp, r7
 800114e:	bc80      	pop	{r7}
 8001150:	4770      	bx	lr

08001152 <SysTick_Handler>:
 8001152:	b580      	push	{r7, lr}
 8001154:	af00      	add	r7, sp, #0
 8001156:	f000 f9dd 	bl	8001514 <HAL_IncTick>
 800115a:	bf00      	nop
 800115c:	bd80      	pop	{r7, pc}
	...

08001160 <TIM2_IRQHandler>:
 8001160:	b580      	push	{r7, lr}
 8001162:	af00      	add	r7, sp, #0
 8001164:	4802      	ldr	r0, [pc, #8]	; (8001170 <TIM2_IRQHandler+0x10>)
 8001166:	f001 fb31 	bl	80027cc <HAL_TIM_IRQHandler>
 800116a:	bf00      	nop
 800116c:	bd80      	pop	{r7, pc}
 800116e:	bf00      	nop
 8001170:	20000124 	.word	0x20000124

08001174 <TIM3_IRQHandler>:
 8001174:	b580      	push	{r7, lr}
 8001176:	af00      	add	r7, sp, #0
 8001178:	4802      	ldr	r0, [pc, #8]	; (8001184 <TIM3_IRQHandler+0x10>)
 800117a:	f001 fb27 	bl	80027cc <HAL_TIM_IRQHandler>
 800117e:	bf00      	nop
 8001180:	bd80      	pop	{r7, pc}
 8001182:	bf00      	nop
 8001184:	2000016c 	.word	0x2000016c

08001188 <USART2_IRQHandler>:
 8001188:	b580      	push	{r7, lr}
 800118a:	af00      	add	r7, sp, #0
 800118c:	4802      	ldr	r0, [pc, #8]	; (8001198 <USART2_IRQHandler+0x10>)
 800118e:	f002 f9bf 	bl	8003510 <HAL_UART_IRQHandler>
 8001192:	bf00      	nop
 8001194:	bd80      	pop	{r7, pc}
 8001196:	bf00      	nop
 8001198:	200000e0 	.word	0x200000e0

0800119c <_sbrk>:
 800119c:	b580      	push	{r7, lr}
 800119e:	b086      	sub	sp, #24
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	6078      	str	r0, [r7, #4]
 80011a4:	4a14      	ldr	r2, [pc, #80]	; (80011f8 <_sbrk+0x5c>)
 80011a6:	4b15      	ldr	r3, [pc, #84]	; (80011fc <_sbrk+0x60>)
 80011a8:	1ad3      	subs	r3, r2, r3
 80011aa:	617b      	str	r3, [r7, #20]
 80011ac:	697b      	ldr	r3, [r7, #20]
 80011ae:	613b      	str	r3, [r7, #16]
 80011b0:	4b13      	ldr	r3, [pc, #76]	; (8001200 <_sbrk+0x64>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	2b00      	cmp	r3, #0
 80011b6:	d102      	bne.n	80011be <_sbrk+0x22>
 80011b8:	4b11      	ldr	r3, [pc, #68]	; (8001200 <_sbrk+0x64>)
 80011ba:	4a12      	ldr	r2, [pc, #72]	; (8001204 <_sbrk+0x68>)
 80011bc:	601a      	str	r2, [r3, #0]
 80011be:	4b10      	ldr	r3, [pc, #64]	; (8001200 <_sbrk+0x64>)
 80011c0:	681a      	ldr	r2, [r3, #0]
 80011c2:	687b      	ldr	r3, [r7, #4]
 80011c4:	4413      	add	r3, r2
 80011c6:	693a      	ldr	r2, [r7, #16]
 80011c8:	429a      	cmp	r2, r3
 80011ca:	d207      	bcs.n	80011dc <_sbrk+0x40>
 80011cc:	f002 fd98 	bl	8003d00 <__errno>
 80011d0:	4603      	mov	r3, r0
 80011d2:	220c      	movs	r2, #12
 80011d4:	601a      	str	r2, [r3, #0]
 80011d6:	f04f 33ff 	mov.w	r3, #4294967295
 80011da:	e009      	b.n	80011f0 <_sbrk+0x54>
 80011dc:	4b08      	ldr	r3, [pc, #32]	; (8001200 <_sbrk+0x64>)
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	60fb      	str	r3, [r7, #12]
 80011e2:	4b07      	ldr	r3, [pc, #28]	; (8001200 <_sbrk+0x64>)
 80011e4:	681a      	ldr	r2, [r3, #0]
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	4413      	add	r3, r2
 80011ea:	4a05      	ldr	r2, [pc, #20]	; (8001200 <_sbrk+0x64>)
 80011ec:	6013      	str	r3, [r2, #0]
 80011ee:	68fb      	ldr	r3, [r7, #12]
 80011f0:	4618      	mov	r0, r3
 80011f2:	3718      	adds	r7, #24
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}
 80011f8:	20005000 	.word	0x20005000
 80011fc:	00000400 	.word	0x00000400
 8001200:	200001dc 	.word	0x200001dc
 8001204:	20000208 	.word	0x20000208

08001208 <SystemInit>:
 8001208:	b480      	push	{r7}
 800120a:	af00      	add	r7, sp, #0
 800120c:	bf00      	nop
 800120e:	46bd      	mov	sp, r7
 8001210:	bc80      	pop	{r7}
 8001212:	4770      	bx	lr

08001214 <green_blink>:
//	0	0	off
//	0	1	green
//	1	0	red
//	1	1	yellow
void green_blink()
{
 8001214:	b580      	push	{r7, lr}
 8001216:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8001218:	4b08      	ldr	r3, [pc, #32]	; (800123c <green_blink+0x28>)
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	2b01      	cmp	r3, #1
 800121e:	d10b      	bne.n	8001238 <green_blink+0x24>
		setTimer3(BLINK_TIME);
 8001220:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001224:	f7ff fdd8 	bl	8000dd8 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 8001228:	2108      	movs	r1, #8
 800122a:	4805      	ldr	r0, [pc, #20]	; (8001240 <green_blink+0x2c>)
 800122c:	f000 fcff 	bl	8001c2e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 8001230:	2110      	movs	r1, #16
 8001232:	4803      	ldr	r0, [pc, #12]	; (8001240 <green_blink+0x2c>)
 8001234:	f000 fcfb 	bl	8001c2e <HAL_GPIO_TogglePin>
	}
}
 8001238:	bf00      	nop
 800123a:	bd80      	pop	{r7, pc}
 800123c:	200001c4 	.word	0x200001c4
 8001240:	40010c00 	.word	0x40010c00

08001244 <red_blink>:
void red_blink()
{
 8001244:	b580      	push	{r7, lr}
 8001246:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8001248:	4b09      	ldr	r3, [pc, #36]	; (8001270 <red_blink+0x2c>)
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	2b01      	cmp	r3, #1
 800124e:	d10c      	bne.n	800126a <red_blink+0x26>
		setTimer3(BLINK_TIME);
 8001250:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001254:	f7ff fdc0 	bl	8000dd8 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 8001258:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800125c:	4805      	ldr	r0, [pc, #20]	; (8001274 <red_blink+0x30>)
 800125e:	f000 fce6 	bl	8001c2e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 8001262:	2120      	movs	r1, #32
 8001264:	4804      	ldr	r0, [pc, #16]	; (8001278 <red_blink+0x34>)
 8001266:	f000 fce2 	bl	8001c2e <HAL_GPIO_TogglePin>
	}
}
 800126a:	bf00      	nop
 800126c:	bd80      	pop	{r7, pc}
 800126e:	bf00      	nop
 8001270:	200001c4 	.word	0x200001c4
 8001274:	40010800 	.word	0x40010800
 8001278:	40010c00 	.word	0x40010c00

0800127c <yellow_blink>:

void yellow_blink()
{
 800127c:	b580      	push	{r7, lr}
 800127e:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8001280:	4b0d      	ldr	r3, [pc, #52]	; (80012b8 <yellow_blink+0x3c>)
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	2b01      	cmp	r3, #1
 8001286:	d114      	bne.n	80012b2 <yellow_blink+0x36>
		setTimer3(BLINK_TIME);
 8001288:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800128c:	f7ff fda4 	bl	8000dd8 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 8001290:	2108      	movs	r1, #8
 8001292:	480a      	ldr	r0, [pc, #40]	; (80012bc <yellow_blink+0x40>)
 8001294:	f000 fccb 	bl	8001c2e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 8001298:	2110      	movs	r1, #16
 800129a:	4808      	ldr	r0, [pc, #32]	; (80012bc <yellow_blink+0x40>)
 800129c:	f000 fcc7 	bl	8001c2e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 80012a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80012a4:	4806      	ldr	r0, [pc, #24]	; (80012c0 <yellow_blink+0x44>)
 80012a6:	f000 fcc2 	bl	8001c2e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 80012aa:	2120      	movs	r1, #32
 80012ac:	4803      	ldr	r0, [pc, #12]	; (80012bc <yellow_blink+0x40>)
 80012ae:	f000 fcbe 	bl	8001c2e <HAL_GPIO_TogglePin>
	}
}
 80012b2:	bf00      	nop
 80012b4:	bd80      	pop	{r7, pc}
 80012b6:	bf00      	nop
 80012b8:	200001c4 	.word	0x200001c4
 80012bc:	40010c00 	.word	0x40010c00
 80012c0:	40010800 	.word	0x40010800

080012c4 <red1_on>:

//turn the led corresponding to this road on
void red1_on()
{
 80012c4:	b580      	push	{r7, lr}
 80012c6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 80012c8:	2201      	movs	r2, #1
 80012ca:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80012ce:	4805      	ldr	r0, [pc, #20]	; (80012e4 <red1_on+0x20>)
 80012d0:	f000 fc95 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 80012d4:	2200      	movs	r2, #0
 80012d6:	2108      	movs	r1, #8
 80012d8:	4803      	ldr	r0, [pc, #12]	; (80012e8 <red1_on+0x24>)
 80012da:	f000 fc90 	bl	8001bfe <HAL_GPIO_WritePin>
}
 80012de:	bf00      	nop
 80012e0:	bd80      	pop	{r7, pc}
 80012e2:	bf00      	nop
 80012e4:	40010800 	.word	0x40010800
 80012e8:	40010c00 	.word	0x40010c00

080012ec <red2_on>:
void red2_on()
{
 80012ec:	b580      	push	{r7, lr}
 80012ee:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 80012f0:	2201      	movs	r2, #1
 80012f2:	2120      	movs	r1, #32
 80012f4:	4804      	ldr	r0, [pc, #16]	; (8001308 <red2_on+0x1c>)
 80012f6:	f000 fc82 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 80012fa:	2200      	movs	r2, #0
 80012fc:	2110      	movs	r1, #16
 80012fe:	4802      	ldr	r0, [pc, #8]	; (8001308 <red2_on+0x1c>)
 8001300:	f000 fc7d 	bl	8001bfe <HAL_GPIO_WritePin>
}
 8001304:	bf00      	nop
 8001306:	bd80      	pop	{r7, pc}
 8001308:	40010c00 	.word	0x40010c00

0800130c <green1_on>:
void green1_on()
{
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 8001310:	2200      	movs	r2, #0
 8001312:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001316:	4805      	ldr	r0, [pc, #20]	; (800132c <green1_on+0x20>)
 8001318:	f000 fc71 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 800131c:	2201      	movs	r2, #1
 800131e:	2108      	movs	r1, #8
 8001320:	4803      	ldr	r0, [pc, #12]	; (8001330 <green1_on+0x24>)
 8001322:	f000 fc6c 	bl	8001bfe <HAL_GPIO_WritePin>
}
 8001326:	bf00      	nop
 8001328:	bd80      	pop	{r7, pc}
 800132a:	bf00      	nop
 800132c:	40010800 	.word	0x40010800
 8001330:	40010c00 	.word	0x40010c00

08001334 <green2_on>:
void green2_on()
{
 8001334:	b580      	push	{r7, lr}
 8001336:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 8001338:	2200      	movs	r2, #0
 800133a:	2120      	movs	r1, #32
 800133c:	4804      	ldr	r0, [pc, #16]	; (8001350 <green2_on+0x1c>)
 800133e:	f000 fc5e 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 8001342:	2201      	movs	r2, #1
 8001344:	2110      	movs	r1, #16
 8001346:	4802      	ldr	r0, [pc, #8]	; (8001350 <green2_on+0x1c>)
 8001348:	f000 fc59 	bl	8001bfe <HAL_GPIO_WritePin>
}
 800134c:	bf00      	nop
 800134e:	bd80      	pop	{r7, pc}
 8001350:	40010c00 	.word	0x40010c00

08001354 <yellow1_on>:
void yellow1_on()
{
 8001354:	b580      	push	{r7, lr}
 8001356:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 8001358:	2201      	movs	r2, #1
 800135a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800135e:	4805      	ldr	r0, [pc, #20]	; (8001374 <yellow1_on+0x20>)
 8001360:	f000 fc4d 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 8001364:	2201      	movs	r2, #1
 8001366:	2108      	movs	r1, #8
 8001368:	4803      	ldr	r0, [pc, #12]	; (8001378 <yellow1_on+0x24>)
 800136a:	f000 fc48 	bl	8001bfe <HAL_GPIO_WritePin>
}
 800136e:	bf00      	nop
 8001370:	bd80      	pop	{r7, pc}
 8001372:	bf00      	nop
 8001374:	40010800 	.word	0x40010800
 8001378:	40010c00 	.word	0x40010c00

0800137c <yellow2_on>:
void yellow2_on()
{
 800137c:	b580      	push	{r7, lr}
 800137e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 8001380:	2201      	movs	r2, #1
 8001382:	2120      	movs	r1, #32
 8001384:	4804      	ldr	r0, [pc, #16]	; (8001398 <yellow2_on+0x1c>)
 8001386:	f000 fc3a 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 800138a:	2201      	movs	r2, #1
 800138c:	2110      	movs	r1, #16
 800138e:	4802      	ldr	r0, [pc, #8]	; (8001398 <yellow2_on+0x1c>)
 8001390:	f000 fc35 	bl	8001bfe <HAL_GPIO_WritePin>
}
 8001394:	bf00      	nop
 8001396:	bd80      	pop	{r7, pc}
 8001398:	40010c00 	.word	0x40010c00

0800139c <green_pedes_on>:
	HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, SET);
	HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, RESET);
}

void green_pedes_on()
{
 800139c:	b580      	push	{r7, lr}
 800139e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, RESET);
 80013a0:	2200      	movs	r2, #0
 80013a2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80013a6:	4805      	ldr	r0, [pc, #20]	; (80013bc <green_pedes_on+0x20>)
 80013a8:	f000 fc29 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, SET);
 80013ac:	2201      	movs	r2, #1
 80013ae:	f44f 7180 	mov.w	r1, #256	; 0x100
 80013b2:	4803      	ldr	r0, [pc, #12]	; (80013c0 <green_pedes_on+0x24>)
 80013b4:	f000 fc23 	bl	8001bfe <HAL_GPIO_WritePin>
}
 80013b8:	bf00      	nop
 80013ba:	bd80      	pop	{r7, pc}
 80013bc:	40010c00 	.word	0x40010c00
 80013c0:	40010800 	.word	0x40010800

080013c4 <turn_all_led_off>:


//this function is used when error detected
void turn_all_led_off()
{
 80013c4:	b580      	push	{r7, lr}
 80013c6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 80013c8:	2200      	movs	r2, #0
 80013ca:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80013ce:	480a      	ldr	r0, [pc, #40]	; (80013f8 <turn_all_led_off+0x34>)
 80013d0:	f000 fc15 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 80013d4:	2200      	movs	r2, #0
 80013d6:	2108      	movs	r1, #8
 80013d8:	4808      	ldr	r0, [pc, #32]	; (80013fc <turn_all_led_off+0x38>)
 80013da:	f000 fc10 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 80013de:	2200      	movs	r2, #0
 80013e0:	2120      	movs	r1, #32
 80013e2:	4806      	ldr	r0, [pc, #24]	; (80013fc <turn_all_led_off+0x38>)
 80013e4:	f000 fc0b 	bl	8001bfe <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 80013e8:	2200      	movs	r2, #0
 80013ea:	2110      	movs	r1, #16
 80013ec:	4803      	ldr	r0, [pc, #12]	; (80013fc <turn_all_led_off+0x38>)
 80013ee:	f000 fc06 	bl	8001bfe <HAL_GPIO_WritePin>
}
 80013f2:	bf00      	nop
 80013f4:	bd80      	pop	{r7, pc}
 80013f6:	bf00      	nop
 80013f8:	40010800 	.word	0x40010800
 80013fc:	40010c00 	.word	0x40010c00

08001400 <UART_Parse>:

// Add task for UART
char str[15];		//buffer store data to send
void UART_Parse()
{
 8001400:	b580      	push	{r7, lr}
 8001402:	af00      	add	r7, sp, #0
	sprintf(str, "!7SEG:%lu#\r\n", SEG_counter);
 8001404:	4b09      	ldr	r3, [pc, #36]	; (800142c <UART_Parse+0x2c>)
 8001406:	681b      	ldr	r3, [r3, #0]
 8001408:	461a      	mov	r2, r3
 800140a:	4909      	ldr	r1, [pc, #36]	; (8001430 <UART_Parse+0x30>)
 800140c:	4809      	ldr	r0, [pc, #36]	; (8001434 <UART_Parse+0x34>)
 800140e:	f002 fca9 	bl	8003d64 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)str, strlen(str), 2000);
 8001412:	4808      	ldr	r0, [pc, #32]	; (8001434 <UART_Parse+0x34>)
 8001414:	f7fe fe9a 	bl	800014c <strlen>
 8001418:	4603      	mov	r3, r0
 800141a:	b29a      	uxth	r2, r3
 800141c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 8001420:	4904      	ldr	r1, [pc, #16]	; (8001434 <UART_Parse+0x34>)
 8001422:	4805      	ldr	r0, [pc, #20]	; (8001438 <UART_Parse+0x38>)
 8001424:	f001 ffe1 	bl	80033ea <HAL_UART_Transmit>
}
 8001428:	bf00      	nop
 800142a:	bd80      	pop	{r7, pc}
 800142c:	200000d8 	.word	0x200000d8
 8001430:	08004670 	.word	0x08004670
 8001434:	200001e0 	.word	0x200001e0
 8001438:	200000e0 	.word	0x200000e0

0800143c <Reset_Handler>:
 800143c:	480c      	ldr	r0, [pc, #48]	; (8001470 <LoopFillZerobss+0x12>)
 800143e:	490d      	ldr	r1, [pc, #52]	; (8001474 <LoopFillZerobss+0x16>)
 8001440:	4a0d      	ldr	r2, [pc, #52]	; (8001478 <LoopFillZerobss+0x1a>)
 8001442:	2300      	movs	r3, #0
 8001444:	e002      	b.n	800144c <LoopCopyDataInit>

08001446 <CopyDataInit>:
 8001446:	58d4      	ldr	r4, [r2, r3]
 8001448:	50c4      	str	r4, [r0, r3]
 800144a:	3304      	adds	r3, #4

0800144c <LoopCopyDataInit>:
 800144c:	18c4      	adds	r4, r0, r3
 800144e:	428c      	cmp	r4, r1
 8001450:	d3f9      	bcc.n	8001446 <CopyDataInit>
 8001452:	4a0a      	ldr	r2, [pc, #40]	; (800147c <LoopFillZerobss+0x1e>)
 8001454:	4c0a      	ldr	r4, [pc, #40]	; (8001480 <LoopFillZerobss+0x22>)
 8001456:	2300      	movs	r3, #0
 8001458:	e001      	b.n	800145e <LoopFillZerobss>

0800145a <FillZerobss>:
 800145a:	6013      	str	r3, [r2, #0]
 800145c:	3204      	adds	r2, #4

0800145e <LoopFillZerobss>:
 800145e:	42a2      	cmp	r2, r4
 8001460:	d3fb      	bcc.n	800145a <FillZerobss>
 8001462:	f7ff fed1 	bl	8001208 <SystemInit>
 8001466:	f002 fc51 	bl	8003d0c <__libc_init_array>
 800146a:	f7ff fac5 	bl	80009f8 <main>
 800146e:	4770      	bx	lr
 8001470:	20000000 	.word	0x20000000
 8001474:	20000094 	.word	0x20000094
 8001478:	080046e4 	.word	0x080046e4
 800147c:	20000094 	.word	0x20000094
 8001480:	20000204 	.word	0x20000204

08001484 <ADC1_2_IRQHandler>:
 8001484:	e7fe      	b.n	8001484 <ADC1_2_IRQHandler>
	...

08001488 <HAL_Init>:
 8001488:	b580      	push	{r7, lr}
 800148a:	af00      	add	r7, sp, #0
 800148c:	4b08      	ldr	r3, [pc, #32]	; (80014b0 <HAL_Init+0x28>)
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	4a07      	ldr	r2, [pc, #28]	; (80014b0 <HAL_Init+0x28>)
 8001492:	f043 0310 	orr.w	r3, r3, #16
 8001496:	6013      	str	r3, [r2, #0]
 8001498:	2003      	movs	r0, #3
 800149a:	f000 f923 	bl	80016e4 <HAL_NVIC_SetPriorityGrouping>
 800149e:	200f      	movs	r0, #15
 80014a0:	f000 f808 	bl	80014b4 <HAL_InitTick>
 80014a4:	f7ff fd3e 	bl	8000f24 <HAL_MspInit>
 80014a8:	2300      	movs	r3, #0
 80014aa:	4618      	mov	r0, r3
 80014ac:	bd80      	pop	{r7, pc}
 80014ae:	bf00      	nop
 80014b0:	40022000 	.word	0x40022000

080014b4 <HAL_InitTick>:
 80014b4:	b580      	push	{r7, lr}
 80014b6:	b082      	sub	sp, #8
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
 80014bc:	4b12      	ldr	r3, [pc, #72]	; (8001508 <HAL_InitTick+0x54>)
 80014be:	681a      	ldr	r2, [r3, #0]
 80014c0:	4b12      	ldr	r3, [pc, #72]	; (800150c <HAL_InitTick+0x58>)
 80014c2:	781b      	ldrb	r3, [r3, #0]
 80014c4:	4619      	mov	r1, r3
 80014c6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80014ca:	fbb3 f3f1 	udiv	r3, r3, r1
 80014ce:	fbb2 f3f3 	udiv	r3, r2, r3
 80014d2:	4618      	mov	r0, r3
 80014d4:	f000 f93b 	bl	800174e <HAL_SYSTICK_Config>
 80014d8:	4603      	mov	r3, r0
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d001      	beq.n	80014e2 <HAL_InitTick+0x2e>
 80014de:	2301      	movs	r3, #1
 80014e0:	e00e      	b.n	8001500 <HAL_InitTick+0x4c>
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	2b0f      	cmp	r3, #15
 80014e6:	d80a      	bhi.n	80014fe <HAL_InitTick+0x4a>
 80014e8:	2200      	movs	r2, #0
 80014ea:	6879      	ldr	r1, [r7, #4]
 80014ec:	f04f 30ff 	mov.w	r0, #4294967295
 80014f0:	f000 f903 	bl	80016fa <HAL_NVIC_SetPriority>
 80014f4:	4a06      	ldr	r2, [pc, #24]	; (8001510 <HAL_InitTick+0x5c>)
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	6013      	str	r3, [r2, #0]
 80014fa:	2300      	movs	r3, #0
 80014fc:	e000      	b.n	8001500 <HAL_InitTick+0x4c>
 80014fe:	2301      	movs	r3, #1
 8001500:	4618      	mov	r0, r3
 8001502:	3708      	adds	r7, #8
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}
 8001508:	20000024 	.word	0x20000024
 800150c:	2000002c 	.word	0x2000002c
 8001510:	20000028 	.word	0x20000028

08001514 <HAL_IncTick>:
 8001514:	b480      	push	{r7}
 8001516:	af00      	add	r7, sp, #0
 8001518:	4b05      	ldr	r3, [pc, #20]	; (8001530 <HAL_IncTick+0x1c>)
 800151a:	781b      	ldrb	r3, [r3, #0]
 800151c:	461a      	mov	r2, r3
 800151e:	4b05      	ldr	r3, [pc, #20]	; (8001534 <HAL_IncTick+0x20>)
 8001520:	681b      	ldr	r3, [r3, #0]
 8001522:	4413      	add	r3, r2
 8001524:	4a03      	ldr	r2, [pc, #12]	; (8001534 <HAL_IncTick+0x20>)
 8001526:	6013      	str	r3, [r2, #0]
 8001528:	bf00      	nop
 800152a:	46bd      	mov	sp, r7
 800152c:	bc80      	pop	{r7}
 800152e:	4770      	bx	lr
 8001530:	2000002c 	.word	0x2000002c
 8001534:	200001f0 	.word	0x200001f0

08001538 <HAL_GetTick>:
 8001538:	b480      	push	{r7}
 800153a:	af00      	add	r7, sp, #0
 800153c:	4b02      	ldr	r3, [pc, #8]	; (8001548 <HAL_GetTick+0x10>)
 800153e:	681b      	ldr	r3, [r3, #0]
 8001540:	4618      	mov	r0, r3
 8001542:	46bd      	mov	sp, r7
 8001544:	bc80      	pop	{r7}
 8001546:	4770      	bx	lr
 8001548:	200001f0 	.word	0x200001f0

0800154c <__NVIC_SetPriorityGrouping>:
 800154c:	b480      	push	{r7}
 800154e:	b085      	sub	sp, #20
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	f003 0307 	and.w	r3, r3, #7
 800155a:	60fb      	str	r3, [r7, #12]
 800155c:	4b0c      	ldr	r3, [pc, #48]	; (8001590 <__NVIC_SetPriorityGrouping+0x44>)
 800155e:	68db      	ldr	r3, [r3, #12]
 8001560:	60bb      	str	r3, [r7, #8]
 8001562:	68ba      	ldr	r2, [r7, #8]
 8001564:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001568:	4013      	ands	r3, r2
 800156a:	60bb      	str	r3, [r7, #8]
 800156c:	68fb      	ldr	r3, [r7, #12]
 800156e:	021a      	lsls	r2, r3, #8
 8001570:	68bb      	ldr	r3, [r7, #8]
 8001572:	4313      	orrs	r3, r2
 8001574:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001578:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800157c:	60bb      	str	r3, [r7, #8]
 800157e:	4a04      	ldr	r2, [pc, #16]	; (8001590 <__NVIC_SetPriorityGrouping+0x44>)
 8001580:	68bb      	ldr	r3, [r7, #8]
 8001582:	60d3      	str	r3, [r2, #12]
 8001584:	bf00      	nop
 8001586:	3714      	adds	r7, #20
 8001588:	46bd      	mov	sp, r7
 800158a:	bc80      	pop	{r7}
 800158c:	4770      	bx	lr
 800158e:	bf00      	nop
 8001590:	e000ed00 	.word	0xe000ed00

08001594 <__NVIC_GetPriorityGrouping>:
 8001594:	b480      	push	{r7}
 8001596:	af00      	add	r7, sp, #0
 8001598:	4b04      	ldr	r3, [pc, #16]	; (80015ac <__NVIC_GetPriorityGrouping+0x18>)
 800159a:	68db      	ldr	r3, [r3, #12]
 800159c:	0a1b      	lsrs	r3, r3, #8
 800159e:	f003 0307 	and.w	r3, r3, #7
 80015a2:	4618      	mov	r0, r3
 80015a4:	46bd      	mov	sp, r7
 80015a6:	bc80      	pop	{r7}
 80015a8:	4770      	bx	lr
 80015aa:	bf00      	nop
 80015ac:	e000ed00 	.word	0xe000ed00

080015b0 <__NVIC_EnableIRQ>:
 80015b0:	b480      	push	{r7}
 80015b2:	b083      	sub	sp, #12
 80015b4:	af00      	add	r7, sp, #0
 80015b6:	4603      	mov	r3, r0
 80015b8:	71fb      	strb	r3, [r7, #7]
 80015ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015be:	2b00      	cmp	r3, #0
 80015c0:	db0b      	blt.n	80015da <__NVIC_EnableIRQ+0x2a>
 80015c2:	79fb      	ldrb	r3, [r7, #7]
 80015c4:	f003 021f 	and.w	r2, r3, #31
 80015c8:	4906      	ldr	r1, [pc, #24]	; (80015e4 <__NVIC_EnableIRQ+0x34>)
 80015ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015ce:	095b      	lsrs	r3, r3, #5
 80015d0:	2001      	movs	r0, #1
 80015d2:	fa00 f202 	lsl.w	r2, r0, r2
 80015d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015da:	bf00      	nop
 80015dc:	370c      	adds	r7, #12
 80015de:	46bd      	mov	sp, r7
 80015e0:	bc80      	pop	{r7}
 80015e2:	4770      	bx	lr
 80015e4:	e000e100 	.word	0xe000e100

080015e8 <__NVIC_SetPriority>:
 80015e8:	b480      	push	{r7}
 80015ea:	b083      	sub	sp, #12
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	4603      	mov	r3, r0
 80015f0:	6039      	str	r1, [r7, #0]
 80015f2:	71fb      	strb	r3, [r7, #7]
 80015f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	db0a      	blt.n	8001612 <__NVIC_SetPriority+0x2a>
 80015fc:	683b      	ldr	r3, [r7, #0]
 80015fe:	b2da      	uxtb	r2, r3
 8001600:	490c      	ldr	r1, [pc, #48]	; (8001634 <__NVIC_SetPriority+0x4c>)
 8001602:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001606:	0112      	lsls	r2, r2, #4
 8001608:	b2d2      	uxtb	r2, r2
 800160a:	440b      	add	r3, r1
 800160c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001610:	e00a      	b.n	8001628 <__NVIC_SetPriority+0x40>
 8001612:	683b      	ldr	r3, [r7, #0]
 8001614:	b2da      	uxtb	r2, r3
 8001616:	4908      	ldr	r1, [pc, #32]	; (8001638 <__NVIC_SetPriority+0x50>)
 8001618:	79fb      	ldrb	r3, [r7, #7]
 800161a:	f003 030f 	and.w	r3, r3, #15
 800161e:	3b04      	subs	r3, #4
 8001620:	0112      	lsls	r2, r2, #4
 8001622:	b2d2      	uxtb	r2, r2
 8001624:	440b      	add	r3, r1
 8001626:	761a      	strb	r2, [r3, #24]
 8001628:	bf00      	nop
 800162a:	370c      	adds	r7, #12
 800162c:	46bd      	mov	sp, r7
 800162e:	bc80      	pop	{r7}
 8001630:	4770      	bx	lr
 8001632:	bf00      	nop
 8001634:	e000e100 	.word	0xe000e100
 8001638:	e000ed00 	.word	0xe000ed00

0800163c <NVIC_EncodePriority>:
 800163c:	b480      	push	{r7}
 800163e:	b089      	sub	sp, #36	; 0x24
 8001640:	af00      	add	r7, sp, #0
 8001642:	60f8      	str	r0, [r7, #12]
 8001644:	60b9      	str	r1, [r7, #8]
 8001646:	607a      	str	r2, [r7, #4]
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	f003 0307 	and.w	r3, r3, #7
 800164e:	61fb      	str	r3, [r7, #28]
 8001650:	69fb      	ldr	r3, [r7, #28]
 8001652:	f1c3 0307 	rsb	r3, r3, #7
 8001656:	2b04      	cmp	r3, #4
 8001658:	bf28      	it	cs
 800165a:	2304      	movcs	r3, #4
 800165c:	61bb      	str	r3, [r7, #24]
 800165e:	69fb      	ldr	r3, [r7, #28]
 8001660:	3304      	adds	r3, #4
 8001662:	2b06      	cmp	r3, #6
 8001664:	d902      	bls.n	800166c <NVIC_EncodePriority+0x30>
 8001666:	69fb      	ldr	r3, [r7, #28]
 8001668:	3b03      	subs	r3, #3
 800166a:	e000      	b.n	800166e <NVIC_EncodePriority+0x32>
 800166c:	2300      	movs	r3, #0
 800166e:	617b      	str	r3, [r7, #20]
 8001670:	f04f 32ff 	mov.w	r2, #4294967295
 8001674:	69bb      	ldr	r3, [r7, #24]
 8001676:	fa02 f303 	lsl.w	r3, r2, r3
 800167a:	43da      	mvns	r2, r3
 800167c:	68bb      	ldr	r3, [r7, #8]
 800167e:	401a      	ands	r2, r3
 8001680:	697b      	ldr	r3, [r7, #20]
 8001682:	409a      	lsls	r2, r3
 8001684:	f04f 31ff 	mov.w	r1, #4294967295
 8001688:	697b      	ldr	r3, [r7, #20]
 800168a:	fa01 f303 	lsl.w	r3, r1, r3
 800168e:	43d9      	mvns	r1, r3
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	400b      	ands	r3, r1
 8001694:	4313      	orrs	r3, r2
 8001696:	4618      	mov	r0, r3
 8001698:	3724      	adds	r7, #36	; 0x24
 800169a:	46bd      	mov	sp, r7
 800169c:	bc80      	pop	{r7}
 800169e:	4770      	bx	lr

080016a0 <SysTick_Config>:
 80016a0:	b580      	push	{r7, lr}
 80016a2:	b082      	sub	sp, #8
 80016a4:	af00      	add	r7, sp, #0
 80016a6:	6078      	str	r0, [r7, #4]
 80016a8:	687b      	ldr	r3, [r7, #4]
 80016aa:	3b01      	subs	r3, #1
 80016ac:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80016b0:	d301      	bcc.n	80016b6 <SysTick_Config+0x16>
 80016b2:	2301      	movs	r3, #1
 80016b4:	e00f      	b.n	80016d6 <SysTick_Config+0x36>
 80016b6:	4a0a      	ldr	r2, [pc, #40]	; (80016e0 <SysTick_Config+0x40>)
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	3b01      	subs	r3, #1
 80016bc:	6053      	str	r3, [r2, #4]
 80016be:	210f      	movs	r1, #15
 80016c0:	f04f 30ff 	mov.w	r0, #4294967295
 80016c4:	f7ff ff90 	bl	80015e8 <__NVIC_SetPriority>
 80016c8:	4b05      	ldr	r3, [pc, #20]	; (80016e0 <SysTick_Config+0x40>)
 80016ca:	2200      	movs	r2, #0
 80016cc:	609a      	str	r2, [r3, #8]
 80016ce:	4b04      	ldr	r3, [pc, #16]	; (80016e0 <SysTick_Config+0x40>)
 80016d0:	2207      	movs	r2, #7
 80016d2:	601a      	str	r2, [r3, #0]
 80016d4:	2300      	movs	r3, #0
 80016d6:	4618      	mov	r0, r3
 80016d8:	3708      	adds	r7, #8
 80016da:	46bd      	mov	sp, r7
 80016dc:	bd80      	pop	{r7, pc}
 80016de:	bf00      	nop
 80016e0:	e000e010 	.word	0xe000e010

080016e4 <HAL_NVIC_SetPriorityGrouping>:
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b082      	sub	sp, #8
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
 80016ec:	6878      	ldr	r0, [r7, #4]
 80016ee:	f7ff ff2d 	bl	800154c <__NVIC_SetPriorityGrouping>
 80016f2:	bf00      	nop
 80016f4:	3708      	adds	r7, #8
 80016f6:	46bd      	mov	sp, r7
 80016f8:	bd80      	pop	{r7, pc}

080016fa <HAL_NVIC_SetPriority>:
 80016fa:	b580      	push	{r7, lr}
 80016fc:	b086      	sub	sp, #24
 80016fe:	af00      	add	r7, sp, #0
 8001700:	4603      	mov	r3, r0
 8001702:	60b9      	str	r1, [r7, #8]
 8001704:	607a      	str	r2, [r7, #4]
 8001706:	73fb      	strb	r3, [r7, #15]
 8001708:	2300      	movs	r3, #0
 800170a:	617b      	str	r3, [r7, #20]
 800170c:	f7ff ff42 	bl	8001594 <__NVIC_GetPriorityGrouping>
 8001710:	6178      	str	r0, [r7, #20]
 8001712:	687a      	ldr	r2, [r7, #4]
 8001714:	68b9      	ldr	r1, [r7, #8]
 8001716:	6978      	ldr	r0, [r7, #20]
 8001718:	f7ff ff90 	bl	800163c <NVIC_EncodePriority>
 800171c:	4602      	mov	r2, r0
 800171e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001722:	4611      	mov	r1, r2
 8001724:	4618      	mov	r0, r3
 8001726:	f7ff ff5f 	bl	80015e8 <__NVIC_SetPriority>
 800172a:	bf00      	nop
 800172c:	3718      	adds	r7, #24
 800172e:	46bd      	mov	sp, r7
 8001730:	bd80      	pop	{r7, pc}

08001732 <HAL_NVIC_EnableIRQ>:
 8001732:	b580      	push	{r7, lr}
 8001734:	b082      	sub	sp, #8
 8001736:	af00      	add	r7, sp, #0
 8001738:	4603      	mov	r3, r0
 800173a:	71fb      	strb	r3, [r7, #7]
 800173c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001740:	4618      	mov	r0, r3
 8001742:	f7ff ff35 	bl	80015b0 <__NVIC_EnableIRQ>
 8001746:	bf00      	nop
 8001748:	3708      	adds	r7, #8
 800174a:	46bd      	mov	sp, r7
 800174c:	bd80      	pop	{r7, pc}

0800174e <HAL_SYSTICK_Config>:
 800174e:	b580      	push	{r7, lr}
 8001750:	b082      	sub	sp, #8
 8001752:	af00      	add	r7, sp, #0
 8001754:	6078      	str	r0, [r7, #4]
 8001756:	6878      	ldr	r0, [r7, #4]
 8001758:	f7ff ffa2 	bl	80016a0 <SysTick_Config>
 800175c:	4603      	mov	r3, r0
 800175e:	4618      	mov	r0, r3
 8001760:	3708      	adds	r7, #8
 8001762:	46bd      	mov	sp, r7
 8001764:	bd80      	pop	{r7, pc}

08001766 <HAL_DMA_Abort>:
 8001766:	b480      	push	{r7}
 8001768:	b085      	sub	sp, #20
 800176a:	af00      	add	r7, sp, #0
 800176c:	6078      	str	r0, [r7, #4]
 800176e:	2300      	movs	r3, #0
 8001770:	73fb      	strb	r3, [r7, #15]
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001778:	2b02      	cmp	r3, #2
 800177a:	d008      	beq.n	800178e <HAL_DMA_Abort+0x28>
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	2204      	movs	r2, #4
 8001780:	639a      	str	r2, [r3, #56]	; 0x38
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	2200      	movs	r2, #0
 8001786:	f883 2020 	strb.w	r2, [r3, #32]
 800178a:	2301      	movs	r3, #1
 800178c:	e020      	b.n	80017d0 <HAL_DMA_Abort+0x6a>
 800178e:	687b      	ldr	r3, [r7, #4]
 8001790:	681b      	ldr	r3, [r3, #0]
 8001792:	681a      	ldr	r2, [r3, #0]
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	f022 020e 	bic.w	r2, r2, #14
 800179c:	601a      	str	r2, [r3, #0]
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	681a      	ldr	r2, [r3, #0]
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	f022 0201 	bic.w	r2, r2, #1
 80017ac:	601a      	str	r2, [r3, #0]
 80017ae:	687b      	ldr	r3, [r7, #4]
 80017b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80017b6:	2101      	movs	r1, #1
 80017b8:	fa01 f202 	lsl.w	r2, r1, r2
 80017bc:	605a      	str	r2, [r3, #4]
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	2201      	movs	r2, #1
 80017c2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	2200      	movs	r2, #0
 80017ca:	f883 2020 	strb.w	r2, [r3, #32]
 80017ce:	7bfb      	ldrb	r3, [r7, #15]
 80017d0:	4618      	mov	r0, r3
 80017d2:	3714      	adds	r7, #20
 80017d4:	46bd      	mov	sp, r7
 80017d6:	bc80      	pop	{r7}
 80017d8:	4770      	bx	lr
	...

080017dc <HAL_DMA_Abort_IT>:
 80017dc:	b580      	push	{r7, lr}
 80017de:	b084      	sub	sp, #16
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
 80017e4:	2300      	movs	r3, #0
 80017e6:	73fb      	strb	r3, [r7, #15]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80017ee:	2b02      	cmp	r3, #2
 80017f0:	d005      	beq.n	80017fe <HAL_DMA_Abort_IT+0x22>
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	2204      	movs	r2, #4
 80017f6:	639a      	str	r2, [r3, #56]	; 0x38
 80017f8:	2301      	movs	r3, #1
 80017fa:	73fb      	strb	r3, [r7, #15]
 80017fc:	e051      	b.n	80018a2 <HAL_DMA_Abort_IT+0xc6>
 80017fe:	687b      	ldr	r3, [r7, #4]
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	681a      	ldr	r2, [r3, #0]
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	f022 020e 	bic.w	r2, r2, #14
 800180c:	601a      	str	r2, [r3, #0]
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	681b      	ldr	r3, [r3, #0]
 8001812:	681a      	ldr	r2, [r3, #0]
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	f022 0201 	bic.w	r2, r2, #1
 800181c:	601a      	str	r2, [r3, #0]
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4a22      	ldr	r2, [pc, #136]	; (80018ac <HAL_DMA_Abort_IT+0xd0>)
 8001824:	4293      	cmp	r3, r2
 8001826:	d029      	beq.n	800187c <HAL_DMA_Abort_IT+0xa0>
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	681b      	ldr	r3, [r3, #0]
 800182c:	4a20      	ldr	r2, [pc, #128]	; (80018b0 <HAL_DMA_Abort_IT+0xd4>)
 800182e:	4293      	cmp	r3, r2
 8001830:	d022      	beq.n	8001878 <HAL_DMA_Abort_IT+0x9c>
 8001832:	687b      	ldr	r3, [r7, #4]
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	4a1f      	ldr	r2, [pc, #124]	; (80018b4 <HAL_DMA_Abort_IT+0xd8>)
 8001838:	4293      	cmp	r3, r2
 800183a:	d01a      	beq.n	8001872 <HAL_DMA_Abort_IT+0x96>
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	4a1d      	ldr	r2, [pc, #116]	; (80018b8 <HAL_DMA_Abort_IT+0xdc>)
 8001842:	4293      	cmp	r3, r2
 8001844:	d012      	beq.n	800186c <HAL_DMA_Abort_IT+0x90>
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	4a1c      	ldr	r2, [pc, #112]	; (80018bc <HAL_DMA_Abort_IT+0xe0>)
 800184c:	4293      	cmp	r3, r2
 800184e:	d00a      	beq.n	8001866 <HAL_DMA_Abort_IT+0x8a>
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	4a1a      	ldr	r2, [pc, #104]	; (80018c0 <HAL_DMA_Abort_IT+0xe4>)
 8001856:	4293      	cmp	r3, r2
 8001858:	d102      	bne.n	8001860 <HAL_DMA_Abort_IT+0x84>
 800185a:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800185e:	e00e      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 8001860:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001864:	e00b      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 8001866:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800186a:	e008      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 800186c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001870:	e005      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 8001872:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001876:	e002      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 8001878:	2310      	movs	r3, #16
 800187a:	e000      	b.n	800187e <HAL_DMA_Abort_IT+0xa2>
 800187c:	2301      	movs	r3, #1
 800187e:	4a11      	ldr	r2, [pc, #68]	; (80018c4 <HAL_DMA_Abort_IT+0xe8>)
 8001880:	6053      	str	r3, [r2, #4]
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	2201      	movs	r2, #1
 8001886:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800188a:	687b      	ldr	r3, [r7, #4]
 800188c:	2200      	movs	r2, #0
 800188e:	f883 2020 	strb.w	r2, [r3, #32]
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001896:	2b00      	cmp	r3, #0
 8001898:	d003      	beq.n	80018a2 <HAL_DMA_Abort_IT+0xc6>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800189e:	6878      	ldr	r0, [r7, #4]
 80018a0:	4798      	blx	r3
 80018a2:	7bfb      	ldrb	r3, [r7, #15]
 80018a4:	4618      	mov	r0, r3
 80018a6:	3710      	adds	r7, #16
 80018a8:	46bd      	mov	sp, r7
 80018aa:	bd80      	pop	{r7, pc}
 80018ac:	40020008 	.word	0x40020008
 80018b0:	4002001c 	.word	0x4002001c
 80018b4:	40020030 	.word	0x40020030
 80018b8:	40020044 	.word	0x40020044
 80018bc:	40020058 	.word	0x40020058
 80018c0:	4002006c 	.word	0x4002006c
 80018c4:	40020000 	.word	0x40020000

080018c8 <HAL_GPIO_Init>:
 80018c8:	b480      	push	{r7}
 80018ca:	b08b      	sub	sp, #44	; 0x2c
 80018cc:	af00      	add	r7, sp, #0
 80018ce:	6078      	str	r0, [r7, #4]
 80018d0:	6039      	str	r1, [r7, #0]
 80018d2:	2300      	movs	r3, #0
 80018d4:	627b      	str	r3, [r7, #36]	; 0x24
 80018d6:	2300      	movs	r3, #0
 80018d8:	623b      	str	r3, [r7, #32]
 80018da:	e169      	b.n	8001bb0 <HAL_GPIO_Init+0x2e8>
 80018dc:	2201      	movs	r2, #1
 80018de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018e0:	fa02 f303 	lsl.w	r3, r2, r3
 80018e4:	61fb      	str	r3, [r7, #28]
 80018e6:	683b      	ldr	r3, [r7, #0]
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	69fa      	ldr	r2, [r7, #28]
 80018ec:	4013      	ands	r3, r2
 80018ee:	61bb      	str	r3, [r7, #24]
 80018f0:	69ba      	ldr	r2, [r7, #24]
 80018f2:	69fb      	ldr	r3, [r7, #28]
 80018f4:	429a      	cmp	r2, r3
 80018f6:	f040 8158 	bne.w	8001baa <HAL_GPIO_Init+0x2e2>
 80018fa:	683b      	ldr	r3, [r7, #0]
 80018fc:	685b      	ldr	r3, [r3, #4]
 80018fe:	4a9a      	ldr	r2, [pc, #616]	; (8001b68 <HAL_GPIO_Init+0x2a0>)
 8001900:	4293      	cmp	r3, r2
 8001902:	d05e      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 8001904:	4a98      	ldr	r2, [pc, #608]	; (8001b68 <HAL_GPIO_Init+0x2a0>)
 8001906:	4293      	cmp	r3, r2
 8001908:	d875      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 800190a:	4a98      	ldr	r2, [pc, #608]	; (8001b6c <HAL_GPIO_Init+0x2a4>)
 800190c:	4293      	cmp	r3, r2
 800190e:	d058      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 8001910:	4a96      	ldr	r2, [pc, #600]	; (8001b6c <HAL_GPIO_Init+0x2a4>)
 8001912:	4293      	cmp	r3, r2
 8001914:	d86f      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 8001916:	4a96      	ldr	r2, [pc, #600]	; (8001b70 <HAL_GPIO_Init+0x2a8>)
 8001918:	4293      	cmp	r3, r2
 800191a:	d052      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 800191c:	4a94      	ldr	r2, [pc, #592]	; (8001b70 <HAL_GPIO_Init+0x2a8>)
 800191e:	4293      	cmp	r3, r2
 8001920:	d869      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 8001922:	4a94      	ldr	r2, [pc, #592]	; (8001b74 <HAL_GPIO_Init+0x2ac>)
 8001924:	4293      	cmp	r3, r2
 8001926:	d04c      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 8001928:	4a92      	ldr	r2, [pc, #584]	; (8001b74 <HAL_GPIO_Init+0x2ac>)
 800192a:	4293      	cmp	r3, r2
 800192c:	d863      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 800192e:	4a92      	ldr	r2, [pc, #584]	; (8001b78 <HAL_GPIO_Init+0x2b0>)
 8001930:	4293      	cmp	r3, r2
 8001932:	d046      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 8001934:	4a90      	ldr	r2, [pc, #576]	; (8001b78 <HAL_GPIO_Init+0x2b0>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d85d      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 800193a:	2b12      	cmp	r3, #18
 800193c:	d82a      	bhi.n	8001994 <HAL_GPIO_Init+0xcc>
 800193e:	2b12      	cmp	r3, #18
 8001940:	d859      	bhi.n	80019f6 <HAL_GPIO_Init+0x12e>
 8001942:	a201      	add	r2, pc, #4	; (adr r2, 8001948 <HAL_GPIO_Init+0x80>)
 8001944:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001948:	080019c3 	.word	0x080019c3
 800194c:	0800199d 	.word	0x0800199d
 8001950:	080019af 	.word	0x080019af
 8001954:	080019f1 	.word	0x080019f1
 8001958:	080019f7 	.word	0x080019f7
 800195c:	080019f7 	.word	0x080019f7
 8001960:	080019f7 	.word	0x080019f7
 8001964:	080019f7 	.word	0x080019f7
 8001968:	080019f7 	.word	0x080019f7
 800196c:	080019f7 	.word	0x080019f7
 8001970:	080019f7 	.word	0x080019f7
 8001974:	080019f7 	.word	0x080019f7
 8001978:	080019f7 	.word	0x080019f7
 800197c:	080019f7 	.word	0x080019f7
 8001980:	080019f7 	.word	0x080019f7
 8001984:	080019f7 	.word	0x080019f7
 8001988:	080019f7 	.word	0x080019f7
 800198c:	080019a5 	.word	0x080019a5
 8001990:	080019b9 	.word	0x080019b9
 8001994:	4a79      	ldr	r2, [pc, #484]	; (8001b7c <HAL_GPIO_Init+0x2b4>)
 8001996:	4293      	cmp	r3, r2
 8001998:	d013      	beq.n	80019c2 <HAL_GPIO_Init+0xfa>
 800199a:	e02c      	b.n	80019f6 <HAL_GPIO_Init+0x12e>
 800199c:	683b      	ldr	r3, [r7, #0]
 800199e:	68db      	ldr	r3, [r3, #12]
 80019a0:	623b      	str	r3, [r7, #32]
 80019a2:	e029      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019a4:	683b      	ldr	r3, [r7, #0]
 80019a6:	68db      	ldr	r3, [r3, #12]
 80019a8:	3304      	adds	r3, #4
 80019aa:	623b      	str	r3, [r7, #32]
 80019ac:	e024      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019ae:	683b      	ldr	r3, [r7, #0]
 80019b0:	68db      	ldr	r3, [r3, #12]
 80019b2:	3308      	adds	r3, #8
 80019b4:	623b      	str	r3, [r7, #32]
 80019b6:	e01f      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019b8:	683b      	ldr	r3, [r7, #0]
 80019ba:	68db      	ldr	r3, [r3, #12]
 80019bc:	330c      	adds	r3, #12
 80019be:	623b      	str	r3, [r7, #32]
 80019c0:	e01a      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019c2:	683b      	ldr	r3, [r7, #0]
 80019c4:	689b      	ldr	r3, [r3, #8]
 80019c6:	2b00      	cmp	r3, #0
 80019c8:	d102      	bne.n	80019d0 <HAL_GPIO_Init+0x108>
 80019ca:	2304      	movs	r3, #4
 80019cc:	623b      	str	r3, [r7, #32]
 80019ce:	e013      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019d0:	683b      	ldr	r3, [r7, #0]
 80019d2:	689b      	ldr	r3, [r3, #8]
 80019d4:	2b01      	cmp	r3, #1
 80019d6:	d105      	bne.n	80019e4 <HAL_GPIO_Init+0x11c>
 80019d8:	2308      	movs	r3, #8
 80019da:	623b      	str	r3, [r7, #32]
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	69fa      	ldr	r2, [r7, #28]
 80019e0:	611a      	str	r2, [r3, #16]
 80019e2:	e009      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019e4:	2308      	movs	r3, #8
 80019e6:	623b      	str	r3, [r7, #32]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	69fa      	ldr	r2, [r7, #28]
 80019ec:	615a      	str	r2, [r3, #20]
 80019ee:	e003      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019f0:	2300      	movs	r3, #0
 80019f2:	623b      	str	r3, [r7, #32]
 80019f4:	e000      	b.n	80019f8 <HAL_GPIO_Init+0x130>
 80019f6:	bf00      	nop
 80019f8:	69bb      	ldr	r3, [r7, #24]
 80019fa:	2bff      	cmp	r3, #255	; 0xff
 80019fc:	d801      	bhi.n	8001a02 <HAL_GPIO_Init+0x13a>
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	e001      	b.n	8001a06 <HAL_GPIO_Init+0x13e>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	3304      	adds	r3, #4
 8001a06:	617b      	str	r3, [r7, #20]
 8001a08:	69bb      	ldr	r3, [r7, #24]
 8001a0a:	2bff      	cmp	r3, #255	; 0xff
 8001a0c:	d802      	bhi.n	8001a14 <HAL_GPIO_Init+0x14c>
 8001a0e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a10:	009b      	lsls	r3, r3, #2
 8001a12:	e002      	b.n	8001a1a <HAL_GPIO_Init+0x152>
 8001a14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a16:	3b08      	subs	r3, #8
 8001a18:	009b      	lsls	r3, r3, #2
 8001a1a:	613b      	str	r3, [r7, #16]
 8001a1c:	697b      	ldr	r3, [r7, #20]
 8001a1e:	681a      	ldr	r2, [r3, #0]
 8001a20:	210f      	movs	r1, #15
 8001a22:	693b      	ldr	r3, [r7, #16]
 8001a24:	fa01 f303 	lsl.w	r3, r1, r3
 8001a28:	43db      	mvns	r3, r3
 8001a2a:	401a      	ands	r2, r3
 8001a2c:	6a39      	ldr	r1, [r7, #32]
 8001a2e:	693b      	ldr	r3, [r7, #16]
 8001a30:	fa01 f303 	lsl.w	r3, r1, r3
 8001a34:	431a      	orrs	r2, r3
 8001a36:	697b      	ldr	r3, [r7, #20]
 8001a38:	601a      	str	r2, [r3, #0]
 8001a3a:	683b      	ldr	r3, [r7, #0]
 8001a3c:	685b      	ldr	r3, [r3, #4]
 8001a3e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a42:	2b00      	cmp	r3, #0
 8001a44:	f000 80b1 	beq.w	8001baa <HAL_GPIO_Init+0x2e2>
 8001a48:	4b4d      	ldr	r3, [pc, #308]	; (8001b80 <HAL_GPIO_Init+0x2b8>)
 8001a4a:	699b      	ldr	r3, [r3, #24]
 8001a4c:	4a4c      	ldr	r2, [pc, #304]	; (8001b80 <HAL_GPIO_Init+0x2b8>)
 8001a4e:	f043 0301 	orr.w	r3, r3, #1
 8001a52:	6193      	str	r3, [r2, #24]
 8001a54:	4b4a      	ldr	r3, [pc, #296]	; (8001b80 <HAL_GPIO_Init+0x2b8>)
 8001a56:	699b      	ldr	r3, [r3, #24]
 8001a58:	f003 0301 	and.w	r3, r3, #1
 8001a5c:	60bb      	str	r3, [r7, #8]
 8001a5e:	68bb      	ldr	r3, [r7, #8]
 8001a60:	4a48      	ldr	r2, [pc, #288]	; (8001b84 <HAL_GPIO_Init+0x2bc>)
 8001a62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a64:	089b      	lsrs	r3, r3, #2
 8001a66:	3302      	adds	r3, #2
 8001a68:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a6c:	60fb      	str	r3, [r7, #12]
 8001a6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a70:	f003 0303 	and.w	r3, r3, #3
 8001a74:	009b      	lsls	r3, r3, #2
 8001a76:	220f      	movs	r2, #15
 8001a78:	fa02 f303 	lsl.w	r3, r2, r3
 8001a7c:	43db      	mvns	r3, r3
 8001a7e:	68fa      	ldr	r2, [r7, #12]
 8001a80:	4013      	ands	r3, r2
 8001a82:	60fb      	str	r3, [r7, #12]
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	4a40      	ldr	r2, [pc, #256]	; (8001b88 <HAL_GPIO_Init+0x2c0>)
 8001a88:	4293      	cmp	r3, r2
 8001a8a:	d013      	beq.n	8001ab4 <HAL_GPIO_Init+0x1ec>
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	4a3f      	ldr	r2, [pc, #252]	; (8001b8c <HAL_GPIO_Init+0x2c4>)
 8001a90:	4293      	cmp	r3, r2
 8001a92:	d00d      	beq.n	8001ab0 <HAL_GPIO_Init+0x1e8>
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	4a3e      	ldr	r2, [pc, #248]	; (8001b90 <HAL_GPIO_Init+0x2c8>)
 8001a98:	4293      	cmp	r3, r2
 8001a9a:	d007      	beq.n	8001aac <HAL_GPIO_Init+0x1e4>
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	4a3d      	ldr	r2, [pc, #244]	; (8001b94 <HAL_GPIO_Init+0x2cc>)
 8001aa0:	4293      	cmp	r3, r2
 8001aa2:	d101      	bne.n	8001aa8 <HAL_GPIO_Init+0x1e0>
 8001aa4:	2303      	movs	r3, #3
 8001aa6:	e006      	b.n	8001ab6 <HAL_GPIO_Init+0x1ee>
 8001aa8:	2304      	movs	r3, #4
 8001aaa:	e004      	b.n	8001ab6 <HAL_GPIO_Init+0x1ee>
 8001aac:	2302      	movs	r3, #2
 8001aae:	e002      	b.n	8001ab6 <HAL_GPIO_Init+0x1ee>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	e000      	b.n	8001ab6 <HAL_GPIO_Init+0x1ee>
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001ab8:	f002 0203 	and.w	r2, r2, #3
 8001abc:	0092      	lsls	r2, r2, #2
 8001abe:	4093      	lsls	r3, r2
 8001ac0:	68fa      	ldr	r2, [r7, #12]
 8001ac2:	4313      	orrs	r3, r2
 8001ac4:	60fb      	str	r3, [r7, #12]
 8001ac6:	492f      	ldr	r1, [pc, #188]	; (8001b84 <HAL_GPIO_Init+0x2bc>)
 8001ac8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001aca:	089b      	lsrs	r3, r3, #2
 8001acc:	3302      	adds	r3, #2
 8001ace:	68fa      	ldr	r2, [r7, #12]
 8001ad0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001ad4:	683b      	ldr	r3, [r7, #0]
 8001ad6:	685b      	ldr	r3, [r3, #4]
 8001ad8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001adc:	2b00      	cmp	r3, #0
 8001ade:	d006      	beq.n	8001aee <HAL_GPIO_Init+0x226>
 8001ae0:	4b2d      	ldr	r3, [pc, #180]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001ae2:	681a      	ldr	r2, [r3, #0]
 8001ae4:	492c      	ldr	r1, [pc, #176]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001ae6:	69bb      	ldr	r3, [r7, #24]
 8001ae8:	4313      	orrs	r3, r2
 8001aea:	600b      	str	r3, [r1, #0]
 8001aec:	e006      	b.n	8001afc <HAL_GPIO_Init+0x234>
 8001aee:	4b2a      	ldr	r3, [pc, #168]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001af0:	681a      	ldr	r2, [r3, #0]
 8001af2:	69bb      	ldr	r3, [r7, #24]
 8001af4:	43db      	mvns	r3, r3
 8001af6:	4928      	ldr	r1, [pc, #160]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001af8:	4013      	ands	r3, r2
 8001afa:	600b      	str	r3, [r1, #0]
 8001afc:	683b      	ldr	r3, [r7, #0]
 8001afe:	685b      	ldr	r3, [r3, #4]
 8001b00:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	d006      	beq.n	8001b16 <HAL_GPIO_Init+0x24e>
 8001b08:	4b23      	ldr	r3, [pc, #140]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b0a:	685a      	ldr	r2, [r3, #4]
 8001b0c:	4922      	ldr	r1, [pc, #136]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b0e:	69bb      	ldr	r3, [r7, #24]
 8001b10:	4313      	orrs	r3, r2
 8001b12:	604b      	str	r3, [r1, #4]
 8001b14:	e006      	b.n	8001b24 <HAL_GPIO_Init+0x25c>
 8001b16:	4b20      	ldr	r3, [pc, #128]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b18:	685a      	ldr	r2, [r3, #4]
 8001b1a:	69bb      	ldr	r3, [r7, #24]
 8001b1c:	43db      	mvns	r3, r3
 8001b1e:	491e      	ldr	r1, [pc, #120]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b20:	4013      	ands	r3, r2
 8001b22:	604b      	str	r3, [r1, #4]
 8001b24:	683b      	ldr	r3, [r7, #0]
 8001b26:	685b      	ldr	r3, [r3, #4]
 8001b28:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001b2c:	2b00      	cmp	r3, #0
 8001b2e:	d006      	beq.n	8001b3e <HAL_GPIO_Init+0x276>
 8001b30:	4b19      	ldr	r3, [pc, #100]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b32:	689a      	ldr	r2, [r3, #8]
 8001b34:	4918      	ldr	r1, [pc, #96]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b36:	69bb      	ldr	r3, [r7, #24]
 8001b38:	4313      	orrs	r3, r2
 8001b3a:	608b      	str	r3, [r1, #8]
 8001b3c:	e006      	b.n	8001b4c <HAL_GPIO_Init+0x284>
 8001b3e:	4b16      	ldr	r3, [pc, #88]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b40:	689a      	ldr	r2, [r3, #8]
 8001b42:	69bb      	ldr	r3, [r7, #24]
 8001b44:	43db      	mvns	r3, r3
 8001b46:	4914      	ldr	r1, [pc, #80]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b48:	4013      	ands	r3, r2
 8001b4a:	608b      	str	r3, [r1, #8]
 8001b4c:	683b      	ldr	r3, [r7, #0]
 8001b4e:	685b      	ldr	r3, [r3, #4]
 8001b50:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d021      	beq.n	8001b9c <HAL_GPIO_Init+0x2d4>
 8001b58:	4b0f      	ldr	r3, [pc, #60]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b5a:	68da      	ldr	r2, [r3, #12]
 8001b5c:	490e      	ldr	r1, [pc, #56]	; (8001b98 <HAL_GPIO_Init+0x2d0>)
 8001b5e:	69bb      	ldr	r3, [r7, #24]
 8001b60:	4313      	orrs	r3, r2
 8001b62:	60cb      	str	r3, [r1, #12]
 8001b64:	e021      	b.n	8001baa <HAL_GPIO_Init+0x2e2>
 8001b66:	bf00      	nop
 8001b68:	10320000 	.word	0x10320000
 8001b6c:	10310000 	.word	0x10310000
 8001b70:	10220000 	.word	0x10220000
 8001b74:	10210000 	.word	0x10210000
 8001b78:	10120000 	.word	0x10120000
 8001b7c:	10110000 	.word	0x10110000
 8001b80:	40021000 	.word	0x40021000
 8001b84:	40010000 	.word	0x40010000
 8001b88:	40010800 	.word	0x40010800
 8001b8c:	40010c00 	.word	0x40010c00
 8001b90:	40011000 	.word	0x40011000
 8001b94:	40011400 	.word	0x40011400
 8001b98:	40010400 	.word	0x40010400
 8001b9c:	4b0b      	ldr	r3, [pc, #44]	; (8001bcc <HAL_GPIO_Init+0x304>)
 8001b9e:	68da      	ldr	r2, [r3, #12]
 8001ba0:	69bb      	ldr	r3, [r7, #24]
 8001ba2:	43db      	mvns	r3, r3
 8001ba4:	4909      	ldr	r1, [pc, #36]	; (8001bcc <HAL_GPIO_Init+0x304>)
 8001ba6:	4013      	ands	r3, r2
 8001ba8:	60cb      	str	r3, [r1, #12]
 8001baa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bac:	3301      	adds	r3, #1
 8001bae:	627b      	str	r3, [r7, #36]	; 0x24
 8001bb0:	683b      	ldr	r3, [r7, #0]
 8001bb2:	681a      	ldr	r2, [r3, #0]
 8001bb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bb6:	fa22 f303 	lsr.w	r3, r2, r3
 8001bba:	2b00      	cmp	r3, #0
 8001bbc:	f47f ae8e 	bne.w	80018dc <HAL_GPIO_Init+0x14>
 8001bc0:	bf00      	nop
 8001bc2:	bf00      	nop
 8001bc4:	372c      	adds	r7, #44	; 0x2c
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	bc80      	pop	{r7}
 8001bca:	4770      	bx	lr
 8001bcc:	40010400 	.word	0x40010400

08001bd0 <HAL_GPIO_ReadPin>:
 8001bd0:	b480      	push	{r7}
 8001bd2:	b085      	sub	sp, #20
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
 8001bd8:	460b      	mov	r3, r1
 8001bda:	807b      	strh	r3, [r7, #2]
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	689a      	ldr	r2, [r3, #8]
 8001be0:	887b      	ldrh	r3, [r7, #2]
 8001be2:	4013      	ands	r3, r2
 8001be4:	2b00      	cmp	r3, #0
 8001be6:	d002      	beq.n	8001bee <HAL_GPIO_ReadPin+0x1e>
 8001be8:	2301      	movs	r3, #1
 8001bea:	73fb      	strb	r3, [r7, #15]
 8001bec:	e001      	b.n	8001bf2 <HAL_GPIO_ReadPin+0x22>
 8001bee:	2300      	movs	r3, #0
 8001bf0:	73fb      	strb	r3, [r7, #15]
 8001bf2:	7bfb      	ldrb	r3, [r7, #15]
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	3714      	adds	r7, #20
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bc80      	pop	{r7}
 8001bfc:	4770      	bx	lr

08001bfe <HAL_GPIO_WritePin>:
 8001bfe:	b480      	push	{r7}
 8001c00:	b083      	sub	sp, #12
 8001c02:	af00      	add	r7, sp, #0
 8001c04:	6078      	str	r0, [r7, #4]
 8001c06:	460b      	mov	r3, r1
 8001c08:	807b      	strh	r3, [r7, #2]
 8001c0a:	4613      	mov	r3, r2
 8001c0c:	707b      	strb	r3, [r7, #1]
 8001c0e:	787b      	ldrb	r3, [r7, #1]
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d003      	beq.n	8001c1c <HAL_GPIO_WritePin+0x1e>
 8001c14:	887a      	ldrh	r2, [r7, #2]
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	611a      	str	r2, [r3, #16]
 8001c1a:	e003      	b.n	8001c24 <HAL_GPIO_WritePin+0x26>
 8001c1c:	887b      	ldrh	r3, [r7, #2]
 8001c1e:	041a      	lsls	r2, r3, #16
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	611a      	str	r2, [r3, #16]
 8001c24:	bf00      	nop
 8001c26:	370c      	adds	r7, #12
 8001c28:	46bd      	mov	sp, r7
 8001c2a:	bc80      	pop	{r7}
 8001c2c:	4770      	bx	lr

08001c2e <HAL_GPIO_TogglePin>:
 8001c2e:	b480      	push	{r7}
 8001c30:	b085      	sub	sp, #20
 8001c32:	af00      	add	r7, sp, #0
 8001c34:	6078      	str	r0, [r7, #4]
 8001c36:	460b      	mov	r3, r1
 8001c38:	807b      	strh	r3, [r7, #2]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	68db      	ldr	r3, [r3, #12]
 8001c3e:	60fb      	str	r3, [r7, #12]
 8001c40:	887a      	ldrh	r2, [r7, #2]
 8001c42:	68fb      	ldr	r3, [r7, #12]
 8001c44:	4013      	ands	r3, r2
 8001c46:	041a      	lsls	r2, r3, #16
 8001c48:	68fb      	ldr	r3, [r7, #12]
 8001c4a:	43d9      	mvns	r1, r3
 8001c4c:	887b      	ldrh	r3, [r7, #2]
 8001c4e:	400b      	ands	r3, r1
 8001c50:	431a      	orrs	r2, r3
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	611a      	str	r2, [r3, #16]
 8001c56:	bf00      	nop
 8001c58:	3714      	adds	r7, #20
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	bc80      	pop	{r7}
 8001c5e:	4770      	bx	lr

08001c60 <HAL_RCC_OscConfig>:
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b086      	sub	sp, #24
 8001c64:	af00      	add	r7, sp, #0
 8001c66:	6078      	str	r0, [r7, #4]
 8001c68:	687b      	ldr	r3, [r7, #4]
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d101      	bne.n	8001c72 <HAL_RCC_OscConfig+0x12>
 8001c6e:	2301      	movs	r3, #1
 8001c70:	e272      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	681b      	ldr	r3, [r3, #0]
 8001c76:	f003 0301 	and.w	r3, r3, #1
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	f000 8087 	beq.w	8001d8e <HAL_RCC_OscConfig+0x12e>
 8001c80:	4b92      	ldr	r3, [pc, #584]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001c82:	685b      	ldr	r3, [r3, #4]
 8001c84:	f003 030c 	and.w	r3, r3, #12
 8001c88:	2b04      	cmp	r3, #4
 8001c8a:	d00c      	beq.n	8001ca6 <HAL_RCC_OscConfig+0x46>
 8001c8c:	4b8f      	ldr	r3, [pc, #572]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	f003 030c 	and.w	r3, r3, #12
 8001c94:	2b08      	cmp	r3, #8
 8001c96:	d112      	bne.n	8001cbe <HAL_RCC_OscConfig+0x5e>
 8001c98:	4b8c      	ldr	r3, [pc, #560]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001c9a:	685b      	ldr	r3, [r3, #4]
 8001c9c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001ca0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001ca4:	d10b      	bne.n	8001cbe <HAL_RCC_OscConfig+0x5e>
 8001ca6:	4b89      	ldr	r3, [pc, #548]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	d06c      	beq.n	8001d8c <HAL_RCC_OscConfig+0x12c>
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	685b      	ldr	r3, [r3, #4]
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d168      	bne.n	8001d8c <HAL_RCC_OscConfig+0x12c>
 8001cba:	2301      	movs	r3, #1
 8001cbc:	e24c      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	685b      	ldr	r3, [r3, #4]
 8001cc2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001cc6:	d106      	bne.n	8001cd6 <HAL_RCC_OscConfig+0x76>
 8001cc8:	4b80      	ldr	r3, [pc, #512]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	4a7f      	ldr	r2, [pc, #508]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001cce:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001cd2:	6013      	str	r3, [r2, #0]
 8001cd4:	e02e      	b.n	8001d34 <HAL_RCC_OscConfig+0xd4>
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	685b      	ldr	r3, [r3, #4]
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d10c      	bne.n	8001cf8 <HAL_RCC_OscConfig+0x98>
 8001cde:	4b7b      	ldr	r3, [pc, #492]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	4a7a      	ldr	r2, [pc, #488]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001ce4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001ce8:	6013      	str	r3, [r2, #0]
 8001cea:	4b78      	ldr	r3, [pc, #480]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001cec:	681b      	ldr	r3, [r3, #0]
 8001cee:	4a77      	ldr	r2, [pc, #476]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001cf0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001cf4:	6013      	str	r3, [r2, #0]
 8001cf6:	e01d      	b.n	8001d34 <HAL_RCC_OscConfig+0xd4>
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	685b      	ldr	r3, [r3, #4]
 8001cfc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001d00:	d10c      	bne.n	8001d1c <HAL_RCC_OscConfig+0xbc>
 8001d02:	4b72      	ldr	r3, [pc, #456]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	4a71      	ldr	r2, [pc, #452]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d08:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001d0c:	6013      	str	r3, [r2, #0]
 8001d0e:	4b6f      	ldr	r3, [pc, #444]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	4a6e      	ldr	r2, [pc, #440]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d14:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001d18:	6013      	str	r3, [r2, #0]
 8001d1a:	e00b      	b.n	8001d34 <HAL_RCC_OscConfig+0xd4>
 8001d1c:	4b6b      	ldr	r3, [pc, #428]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a6a      	ldr	r2, [pc, #424]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001d26:	6013      	str	r3, [r2, #0]
 8001d28:	4b68      	ldr	r3, [pc, #416]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	4a67      	ldr	r2, [pc, #412]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d2e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001d32:	6013      	str	r3, [r2, #0]
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	685b      	ldr	r3, [r3, #4]
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	d013      	beq.n	8001d64 <HAL_RCC_OscConfig+0x104>
 8001d3c:	f7ff fbfc 	bl	8001538 <HAL_GetTick>
 8001d40:	6138      	str	r0, [r7, #16]
 8001d42:	e008      	b.n	8001d56 <HAL_RCC_OscConfig+0xf6>
 8001d44:	f7ff fbf8 	bl	8001538 <HAL_GetTick>
 8001d48:	4602      	mov	r2, r0
 8001d4a:	693b      	ldr	r3, [r7, #16]
 8001d4c:	1ad3      	subs	r3, r2, r3
 8001d4e:	2b64      	cmp	r3, #100	; 0x64
 8001d50:	d901      	bls.n	8001d56 <HAL_RCC_OscConfig+0xf6>
 8001d52:	2303      	movs	r3, #3
 8001d54:	e200      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001d56:	4b5d      	ldr	r3, [pc, #372]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d58:	681b      	ldr	r3, [r3, #0]
 8001d5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	d0f0      	beq.n	8001d44 <HAL_RCC_OscConfig+0xe4>
 8001d62:	e014      	b.n	8001d8e <HAL_RCC_OscConfig+0x12e>
 8001d64:	f7ff fbe8 	bl	8001538 <HAL_GetTick>
 8001d68:	6138      	str	r0, [r7, #16]
 8001d6a:	e008      	b.n	8001d7e <HAL_RCC_OscConfig+0x11e>
 8001d6c:	f7ff fbe4 	bl	8001538 <HAL_GetTick>
 8001d70:	4602      	mov	r2, r0
 8001d72:	693b      	ldr	r3, [r7, #16]
 8001d74:	1ad3      	subs	r3, r2, r3
 8001d76:	2b64      	cmp	r3, #100	; 0x64
 8001d78:	d901      	bls.n	8001d7e <HAL_RCC_OscConfig+0x11e>
 8001d7a:	2303      	movs	r3, #3
 8001d7c:	e1ec      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001d7e:	4b53      	ldr	r3, [pc, #332]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d80:	681b      	ldr	r3, [r3, #0]
 8001d82:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	d1f0      	bne.n	8001d6c <HAL_RCC_OscConfig+0x10c>
 8001d8a:	e000      	b.n	8001d8e <HAL_RCC_OscConfig+0x12e>
 8001d8c:	bf00      	nop
 8001d8e:	687b      	ldr	r3, [r7, #4]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	f003 0302 	and.w	r3, r3, #2
 8001d96:	2b00      	cmp	r3, #0
 8001d98:	d063      	beq.n	8001e62 <HAL_RCC_OscConfig+0x202>
 8001d9a:	4b4c      	ldr	r3, [pc, #304]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	f003 030c 	and.w	r3, r3, #12
 8001da2:	2b00      	cmp	r3, #0
 8001da4:	d00b      	beq.n	8001dbe <HAL_RCC_OscConfig+0x15e>
 8001da6:	4b49      	ldr	r3, [pc, #292]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001da8:	685b      	ldr	r3, [r3, #4]
 8001daa:	f003 030c 	and.w	r3, r3, #12
 8001dae:	2b08      	cmp	r3, #8
 8001db0:	d11c      	bne.n	8001dec <HAL_RCC_OscConfig+0x18c>
 8001db2:	4b46      	ldr	r3, [pc, #280]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001db4:	685b      	ldr	r3, [r3, #4]
 8001db6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001dba:	2b00      	cmp	r3, #0
 8001dbc:	d116      	bne.n	8001dec <HAL_RCC_OscConfig+0x18c>
 8001dbe:	4b43      	ldr	r3, [pc, #268]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	f003 0302 	and.w	r3, r3, #2
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d005      	beq.n	8001dd6 <HAL_RCC_OscConfig+0x176>
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	691b      	ldr	r3, [r3, #16]
 8001dce:	2b01      	cmp	r3, #1
 8001dd0:	d001      	beq.n	8001dd6 <HAL_RCC_OscConfig+0x176>
 8001dd2:	2301      	movs	r3, #1
 8001dd4:	e1c0      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001dd6:	4b3d      	ldr	r3, [pc, #244]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	695b      	ldr	r3, [r3, #20]
 8001de2:	00db      	lsls	r3, r3, #3
 8001de4:	4939      	ldr	r1, [pc, #228]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001de6:	4313      	orrs	r3, r2
 8001de8:	600b      	str	r3, [r1, #0]
 8001dea:	e03a      	b.n	8001e62 <HAL_RCC_OscConfig+0x202>
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	691b      	ldr	r3, [r3, #16]
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d020      	beq.n	8001e36 <HAL_RCC_OscConfig+0x1d6>
 8001df4:	4b36      	ldr	r3, [pc, #216]	; (8001ed0 <HAL_RCC_OscConfig+0x270>)
 8001df6:	2201      	movs	r2, #1
 8001df8:	601a      	str	r2, [r3, #0]
 8001dfa:	f7ff fb9d 	bl	8001538 <HAL_GetTick>
 8001dfe:	6138      	str	r0, [r7, #16]
 8001e00:	e008      	b.n	8001e14 <HAL_RCC_OscConfig+0x1b4>
 8001e02:	f7ff fb99 	bl	8001538 <HAL_GetTick>
 8001e06:	4602      	mov	r2, r0
 8001e08:	693b      	ldr	r3, [r7, #16]
 8001e0a:	1ad3      	subs	r3, r2, r3
 8001e0c:	2b02      	cmp	r3, #2
 8001e0e:	d901      	bls.n	8001e14 <HAL_RCC_OscConfig+0x1b4>
 8001e10:	2303      	movs	r3, #3
 8001e12:	e1a1      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001e14:	4b2d      	ldr	r3, [pc, #180]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	f003 0302 	and.w	r3, r3, #2
 8001e1c:	2b00      	cmp	r3, #0
 8001e1e:	d0f0      	beq.n	8001e02 <HAL_RCC_OscConfig+0x1a2>
 8001e20:	4b2a      	ldr	r3, [pc, #168]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001e28:	687b      	ldr	r3, [r7, #4]
 8001e2a:	695b      	ldr	r3, [r3, #20]
 8001e2c:	00db      	lsls	r3, r3, #3
 8001e2e:	4927      	ldr	r1, [pc, #156]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001e30:	4313      	orrs	r3, r2
 8001e32:	600b      	str	r3, [r1, #0]
 8001e34:	e015      	b.n	8001e62 <HAL_RCC_OscConfig+0x202>
 8001e36:	4b26      	ldr	r3, [pc, #152]	; (8001ed0 <HAL_RCC_OscConfig+0x270>)
 8001e38:	2200      	movs	r2, #0
 8001e3a:	601a      	str	r2, [r3, #0]
 8001e3c:	f7ff fb7c 	bl	8001538 <HAL_GetTick>
 8001e40:	6138      	str	r0, [r7, #16]
 8001e42:	e008      	b.n	8001e56 <HAL_RCC_OscConfig+0x1f6>
 8001e44:	f7ff fb78 	bl	8001538 <HAL_GetTick>
 8001e48:	4602      	mov	r2, r0
 8001e4a:	693b      	ldr	r3, [r7, #16]
 8001e4c:	1ad3      	subs	r3, r2, r3
 8001e4e:	2b02      	cmp	r3, #2
 8001e50:	d901      	bls.n	8001e56 <HAL_RCC_OscConfig+0x1f6>
 8001e52:	2303      	movs	r3, #3
 8001e54:	e180      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001e56:	4b1d      	ldr	r3, [pc, #116]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	f003 0302 	and.w	r3, r3, #2
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d1f0      	bne.n	8001e44 <HAL_RCC_OscConfig+0x1e4>
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	f003 0308 	and.w	r3, r3, #8
 8001e6a:	2b00      	cmp	r3, #0
 8001e6c:	d03a      	beq.n	8001ee4 <HAL_RCC_OscConfig+0x284>
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	699b      	ldr	r3, [r3, #24]
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d019      	beq.n	8001eaa <HAL_RCC_OscConfig+0x24a>
 8001e76:	4b17      	ldr	r3, [pc, #92]	; (8001ed4 <HAL_RCC_OscConfig+0x274>)
 8001e78:	2201      	movs	r2, #1
 8001e7a:	601a      	str	r2, [r3, #0]
 8001e7c:	f7ff fb5c 	bl	8001538 <HAL_GetTick>
 8001e80:	6138      	str	r0, [r7, #16]
 8001e82:	e008      	b.n	8001e96 <HAL_RCC_OscConfig+0x236>
 8001e84:	f7ff fb58 	bl	8001538 <HAL_GetTick>
 8001e88:	4602      	mov	r2, r0
 8001e8a:	693b      	ldr	r3, [r7, #16]
 8001e8c:	1ad3      	subs	r3, r2, r3
 8001e8e:	2b02      	cmp	r3, #2
 8001e90:	d901      	bls.n	8001e96 <HAL_RCC_OscConfig+0x236>
 8001e92:	2303      	movs	r3, #3
 8001e94:	e160      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001e96:	4b0d      	ldr	r3, [pc, #52]	; (8001ecc <HAL_RCC_OscConfig+0x26c>)
 8001e98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e9a:	f003 0302 	and.w	r3, r3, #2
 8001e9e:	2b00      	cmp	r3, #0
 8001ea0:	d0f0      	beq.n	8001e84 <HAL_RCC_OscConfig+0x224>
 8001ea2:	2001      	movs	r0, #1
 8001ea4:	f000 fad8 	bl	8002458 <RCC_Delay>
 8001ea8:	e01c      	b.n	8001ee4 <HAL_RCC_OscConfig+0x284>
 8001eaa:	4b0a      	ldr	r3, [pc, #40]	; (8001ed4 <HAL_RCC_OscConfig+0x274>)
 8001eac:	2200      	movs	r2, #0
 8001eae:	601a      	str	r2, [r3, #0]
 8001eb0:	f7ff fb42 	bl	8001538 <HAL_GetTick>
 8001eb4:	6138      	str	r0, [r7, #16]
 8001eb6:	e00f      	b.n	8001ed8 <HAL_RCC_OscConfig+0x278>
 8001eb8:	f7ff fb3e 	bl	8001538 <HAL_GetTick>
 8001ebc:	4602      	mov	r2, r0
 8001ebe:	693b      	ldr	r3, [r7, #16]
 8001ec0:	1ad3      	subs	r3, r2, r3
 8001ec2:	2b02      	cmp	r3, #2
 8001ec4:	d908      	bls.n	8001ed8 <HAL_RCC_OscConfig+0x278>
 8001ec6:	2303      	movs	r3, #3
 8001ec8:	e146      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001eca:	bf00      	nop
 8001ecc:	40021000 	.word	0x40021000
 8001ed0:	42420000 	.word	0x42420000
 8001ed4:	42420480 	.word	0x42420480
 8001ed8:	4b92      	ldr	r3, [pc, #584]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001eda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001edc:	f003 0302 	and.w	r3, r3, #2
 8001ee0:	2b00      	cmp	r3, #0
 8001ee2:	d1e9      	bne.n	8001eb8 <HAL_RCC_OscConfig+0x258>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	f003 0304 	and.w	r3, r3, #4
 8001eec:	2b00      	cmp	r3, #0
 8001eee:	f000 80a6 	beq.w	800203e <HAL_RCC_OscConfig+0x3de>
 8001ef2:	2300      	movs	r3, #0
 8001ef4:	75fb      	strb	r3, [r7, #23]
 8001ef6:	4b8b      	ldr	r3, [pc, #556]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001ef8:	69db      	ldr	r3, [r3, #28]
 8001efa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d10d      	bne.n	8001f1e <HAL_RCC_OscConfig+0x2be>
 8001f02:	4b88      	ldr	r3, [pc, #544]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f04:	69db      	ldr	r3, [r3, #28]
 8001f06:	4a87      	ldr	r2, [pc, #540]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f08:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001f0c:	61d3      	str	r3, [r2, #28]
 8001f0e:	4b85      	ldr	r3, [pc, #532]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f10:	69db      	ldr	r3, [r3, #28]
 8001f12:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001f16:	60bb      	str	r3, [r7, #8]
 8001f18:	68bb      	ldr	r3, [r7, #8]
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	75fb      	strb	r3, [r7, #23]
 8001f1e:	4b82      	ldr	r3, [pc, #520]	; (8002128 <HAL_RCC_OscConfig+0x4c8>)
 8001f20:	681b      	ldr	r3, [r3, #0]
 8001f22:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d118      	bne.n	8001f5c <HAL_RCC_OscConfig+0x2fc>
 8001f2a:	4b7f      	ldr	r3, [pc, #508]	; (8002128 <HAL_RCC_OscConfig+0x4c8>)
 8001f2c:	681b      	ldr	r3, [r3, #0]
 8001f2e:	4a7e      	ldr	r2, [pc, #504]	; (8002128 <HAL_RCC_OscConfig+0x4c8>)
 8001f30:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001f34:	6013      	str	r3, [r2, #0]
 8001f36:	f7ff faff 	bl	8001538 <HAL_GetTick>
 8001f3a:	6138      	str	r0, [r7, #16]
 8001f3c:	e008      	b.n	8001f50 <HAL_RCC_OscConfig+0x2f0>
 8001f3e:	f7ff fafb 	bl	8001538 <HAL_GetTick>
 8001f42:	4602      	mov	r2, r0
 8001f44:	693b      	ldr	r3, [r7, #16]
 8001f46:	1ad3      	subs	r3, r2, r3
 8001f48:	2b64      	cmp	r3, #100	; 0x64
 8001f4a:	d901      	bls.n	8001f50 <HAL_RCC_OscConfig+0x2f0>
 8001f4c:	2303      	movs	r3, #3
 8001f4e:	e103      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001f50:	4b75      	ldr	r3, [pc, #468]	; (8002128 <HAL_RCC_OscConfig+0x4c8>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001f58:	2b00      	cmp	r3, #0
 8001f5a:	d0f0      	beq.n	8001f3e <HAL_RCC_OscConfig+0x2de>
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	68db      	ldr	r3, [r3, #12]
 8001f60:	2b01      	cmp	r3, #1
 8001f62:	d106      	bne.n	8001f72 <HAL_RCC_OscConfig+0x312>
 8001f64:	4b6f      	ldr	r3, [pc, #444]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f66:	6a1b      	ldr	r3, [r3, #32]
 8001f68:	4a6e      	ldr	r2, [pc, #440]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f6a:	f043 0301 	orr.w	r3, r3, #1
 8001f6e:	6213      	str	r3, [r2, #32]
 8001f70:	e02d      	b.n	8001fce <HAL_RCC_OscConfig+0x36e>
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	68db      	ldr	r3, [r3, #12]
 8001f76:	2b00      	cmp	r3, #0
 8001f78:	d10c      	bne.n	8001f94 <HAL_RCC_OscConfig+0x334>
 8001f7a:	4b6a      	ldr	r3, [pc, #424]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f7c:	6a1b      	ldr	r3, [r3, #32]
 8001f7e:	4a69      	ldr	r2, [pc, #420]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f80:	f023 0301 	bic.w	r3, r3, #1
 8001f84:	6213      	str	r3, [r2, #32]
 8001f86:	4b67      	ldr	r3, [pc, #412]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f88:	6a1b      	ldr	r3, [r3, #32]
 8001f8a:	4a66      	ldr	r2, [pc, #408]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f8c:	f023 0304 	bic.w	r3, r3, #4
 8001f90:	6213      	str	r3, [r2, #32]
 8001f92:	e01c      	b.n	8001fce <HAL_RCC_OscConfig+0x36e>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	68db      	ldr	r3, [r3, #12]
 8001f98:	2b05      	cmp	r3, #5
 8001f9a:	d10c      	bne.n	8001fb6 <HAL_RCC_OscConfig+0x356>
 8001f9c:	4b61      	ldr	r3, [pc, #388]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001f9e:	6a1b      	ldr	r3, [r3, #32]
 8001fa0:	4a60      	ldr	r2, [pc, #384]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fa2:	f043 0304 	orr.w	r3, r3, #4
 8001fa6:	6213      	str	r3, [r2, #32]
 8001fa8:	4b5e      	ldr	r3, [pc, #376]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001faa:	6a1b      	ldr	r3, [r3, #32]
 8001fac:	4a5d      	ldr	r2, [pc, #372]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fae:	f043 0301 	orr.w	r3, r3, #1
 8001fb2:	6213      	str	r3, [r2, #32]
 8001fb4:	e00b      	b.n	8001fce <HAL_RCC_OscConfig+0x36e>
 8001fb6:	4b5b      	ldr	r3, [pc, #364]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fb8:	6a1b      	ldr	r3, [r3, #32]
 8001fba:	4a5a      	ldr	r2, [pc, #360]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fbc:	f023 0301 	bic.w	r3, r3, #1
 8001fc0:	6213      	str	r3, [r2, #32]
 8001fc2:	4b58      	ldr	r3, [pc, #352]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fc4:	6a1b      	ldr	r3, [r3, #32]
 8001fc6:	4a57      	ldr	r2, [pc, #348]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001fc8:	f023 0304 	bic.w	r3, r3, #4
 8001fcc:	6213      	str	r3, [r2, #32]
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	68db      	ldr	r3, [r3, #12]
 8001fd2:	2b00      	cmp	r3, #0
 8001fd4:	d015      	beq.n	8002002 <HAL_RCC_OscConfig+0x3a2>
 8001fd6:	f7ff faaf 	bl	8001538 <HAL_GetTick>
 8001fda:	6138      	str	r0, [r7, #16]
 8001fdc:	e00a      	b.n	8001ff4 <HAL_RCC_OscConfig+0x394>
 8001fde:	f7ff faab 	bl	8001538 <HAL_GetTick>
 8001fe2:	4602      	mov	r2, r0
 8001fe4:	693b      	ldr	r3, [r7, #16]
 8001fe6:	1ad3      	subs	r3, r2, r3
 8001fe8:	f241 3288 	movw	r2, #5000	; 0x1388
 8001fec:	4293      	cmp	r3, r2
 8001fee:	d901      	bls.n	8001ff4 <HAL_RCC_OscConfig+0x394>
 8001ff0:	2303      	movs	r3, #3
 8001ff2:	e0b1      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8001ff4:	4b4b      	ldr	r3, [pc, #300]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8001ff6:	6a1b      	ldr	r3, [r3, #32]
 8001ff8:	f003 0302 	and.w	r3, r3, #2
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d0ee      	beq.n	8001fde <HAL_RCC_OscConfig+0x37e>
 8002000:	e014      	b.n	800202c <HAL_RCC_OscConfig+0x3cc>
 8002002:	f7ff fa99 	bl	8001538 <HAL_GetTick>
 8002006:	6138      	str	r0, [r7, #16]
 8002008:	e00a      	b.n	8002020 <HAL_RCC_OscConfig+0x3c0>
 800200a:	f7ff fa95 	bl	8001538 <HAL_GetTick>
 800200e:	4602      	mov	r2, r0
 8002010:	693b      	ldr	r3, [r7, #16]
 8002012:	1ad3      	subs	r3, r2, r3
 8002014:	f241 3288 	movw	r2, #5000	; 0x1388
 8002018:	4293      	cmp	r3, r2
 800201a:	d901      	bls.n	8002020 <HAL_RCC_OscConfig+0x3c0>
 800201c:	2303      	movs	r3, #3
 800201e:	e09b      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8002020:	4b40      	ldr	r3, [pc, #256]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8002022:	6a1b      	ldr	r3, [r3, #32]
 8002024:	f003 0302 	and.w	r3, r3, #2
 8002028:	2b00      	cmp	r3, #0
 800202a:	d1ee      	bne.n	800200a <HAL_RCC_OscConfig+0x3aa>
 800202c:	7dfb      	ldrb	r3, [r7, #23]
 800202e:	2b01      	cmp	r3, #1
 8002030:	d105      	bne.n	800203e <HAL_RCC_OscConfig+0x3de>
 8002032:	4b3c      	ldr	r3, [pc, #240]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8002034:	69db      	ldr	r3, [r3, #28]
 8002036:	4a3b      	ldr	r2, [pc, #236]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8002038:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800203c:	61d3      	str	r3, [r2, #28]
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	69db      	ldr	r3, [r3, #28]
 8002042:	2b00      	cmp	r3, #0
 8002044:	f000 8087 	beq.w	8002156 <HAL_RCC_OscConfig+0x4f6>
 8002048:	4b36      	ldr	r3, [pc, #216]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 800204a:	685b      	ldr	r3, [r3, #4]
 800204c:	f003 030c 	and.w	r3, r3, #12
 8002050:	2b08      	cmp	r3, #8
 8002052:	d061      	beq.n	8002118 <HAL_RCC_OscConfig+0x4b8>
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	69db      	ldr	r3, [r3, #28]
 8002058:	2b02      	cmp	r3, #2
 800205a:	d146      	bne.n	80020ea <HAL_RCC_OscConfig+0x48a>
 800205c:	4b33      	ldr	r3, [pc, #204]	; (800212c <HAL_RCC_OscConfig+0x4cc>)
 800205e:	2200      	movs	r2, #0
 8002060:	601a      	str	r2, [r3, #0]
 8002062:	f7ff fa69 	bl	8001538 <HAL_GetTick>
 8002066:	6138      	str	r0, [r7, #16]
 8002068:	e008      	b.n	800207c <HAL_RCC_OscConfig+0x41c>
 800206a:	f7ff fa65 	bl	8001538 <HAL_GetTick>
 800206e:	4602      	mov	r2, r0
 8002070:	693b      	ldr	r3, [r7, #16]
 8002072:	1ad3      	subs	r3, r2, r3
 8002074:	2b02      	cmp	r3, #2
 8002076:	d901      	bls.n	800207c <HAL_RCC_OscConfig+0x41c>
 8002078:	2303      	movs	r3, #3
 800207a:	e06d      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 800207c:	4b29      	ldr	r3, [pc, #164]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002084:	2b00      	cmp	r3, #0
 8002086:	d1f0      	bne.n	800206a <HAL_RCC_OscConfig+0x40a>
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	6a1b      	ldr	r3, [r3, #32]
 800208c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002090:	d108      	bne.n	80020a4 <HAL_RCC_OscConfig+0x444>
 8002092:	4b24      	ldr	r3, [pc, #144]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 8002094:	685b      	ldr	r3, [r3, #4]
 8002096:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	689b      	ldr	r3, [r3, #8]
 800209e:	4921      	ldr	r1, [pc, #132]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 80020a0:	4313      	orrs	r3, r2
 80020a2:	604b      	str	r3, [r1, #4]
 80020a4:	4b1f      	ldr	r3, [pc, #124]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 80020a6:	685b      	ldr	r3, [r3, #4]
 80020a8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	6a19      	ldr	r1, [r3, #32]
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020b4:	430b      	orrs	r3, r1
 80020b6:	491b      	ldr	r1, [pc, #108]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 80020b8:	4313      	orrs	r3, r2
 80020ba:	604b      	str	r3, [r1, #4]
 80020bc:	4b1b      	ldr	r3, [pc, #108]	; (800212c <HAL_RCC_OscConfig+0x4cc>)
 80020be:	2201      	movs	r2, #1
 80020c0:	601a      	str	r2, [r3, #0]
 80020c2:	f7ff fa39 	bl	8001538 <HAL_GetTick>
 80020c6:	6138      	str	r0, [r7, #16]
 80020c8:	e008      	b.n	80020dc <HAL_RCC_OscConfig+0x47c>
 80020ca:	f7ff fa35 	bl	8001538 <HAL_GetTick>
 80020ce:	4602      	mov	r2, r0
 80020d0:	693b      	ldr	r3, [r7, #16]
 80020d2:	1ad3      	subs	r3, r2, r3
 80020d4:	2b02      	cmp	r3, #2
 80020d6:	d901      	bls.n	80020dc <HAL_RCC_OscConfig+0x47c>
 80020d8:	2303      	movs	r3, #3
 80020da:	e03d      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 80020dc:	4b11      	ldr	r3, [pc, #68]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d0f0      	beq.n	80020ca <HAL_RCC_OscConfig+0x46a>
 80020e8:	e035      	b.n	8002156 <HAL_RCC_OscConfig+0x4f6>
 80020ea:	4b10      	ldr	r3, [pc, #64]	; (800212c <HAL_RCC_OscConfig+0x4cc>)
 80020ec:	2200      	movs	r2, #0
 80020ee:	601a      	str	r2, [r3, #0]
 80020f0:	f7ff fa22 	bl	8001538 <HAL_GetTick>
 80020f4:	6138      	str	r0, [r7, #16]
 80020f6:	e008      	b.n	800210a <HAL_RCC_OscConfig+0x4aa>
 80020f8:	f7ff fa1e 	bl	8001538 <HAL_GetTick>
 80020fc:	4602      	mov	r2, r0
 80020fe:	693b      	ldr	r3, [r7, #16]
 8002100:	1ad3      	subs	r3, r2, r3
 8002102:	2b02      	cmp	r3, #2
 8002104:	d901      	bls.n	800210a <HAL_RCC_OscConfig+0x4aa>
 8002106:	2303      	movs	r3, #3
 8002108:	e026      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 800210a:	4b06      	ldr	r3, [pc, #24]	; (8002124 <HAL_RCC_OscConfig+0x4c4>)
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002112:	2b00      	cmp	r3, #0
 8002114:	d1f0      	bne.n	80020f8 <HAL_RCC_OscConfig+0x498>
 8002116:	e01e      	b.n	8002156 <HAL_RCC_OscConfig+0x4f6>
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	69db      	ldr	r3, [r3, #28]
 800211c:	2b01      	cmp	r3, #1
 800211e:	d107      	bne.n	8002130 <HAL_RCC_OscConfig+0x4d0>
 8002120:	2301      	movs	r3, #1
 8002122:	e019      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8002124:	40021000 	.word	0x40021000
 8002128:	40007000 	.word	0x40007000
 800212c:	42420060 	.word	0x42420060
 8002130:	4b0b      	ldr	r3, [pc, #44]	; (8002160 <HAL_RCC_OscConfig+0x500>)
 8002132:	685b      	ldr	r3, [r3, #4]
 8002134:	60fb      	str	r3, [r7, #12]
 8002136:	68fb      	ldr	r3, [r7, #12]
 8002138:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	6a1b      	ldr	r3, [r3, #32]
 8002140:	429a      	cmp	r2, r3
 8002142:	d106      	bne.n	8002152 <HAL_RCC_OscConfig+0x4f2>
 8002144:	68fb      	ldr	r3, [r7, #12]
 8002146:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800214e:	429a      	cmp	r2, r3
 8002150:	d001      	beq.n	8002156 <HAL_RCC_OscConfig+0x4f6>
 8002152:	2301      	movs	r3, #1
 8002154:	e000      	b.n	8002158 <HAL_RCC_OscConfig+0x4f8>
 8002156:	2300      	movs	r3, #0
 8002158:	4618      	mov	r0, r3
 800215a:	3718      	adds	r7, #24
 800215c:	46bd      	mov	sp, r7
 800215e:	bd80      	pop	{r7, pc}
 8002160:	40021000 	.word	0x40021000

08002164 <HAL_RCC_ClockConfig>:
 8002164:	b580      	push	{r7, lr}
 8002166:	b084      	sub	sp, #16
 8002168:	af00      	add	r7, sp, #0
 800216a:	6078      	str	r0, [r7, #4]
 800216c:	6039      	str	r1, [r7, #0]
 800216e:	687b      	ldr	r3, [r7, #4]
 8002170:	2b00      	cmp	r3, #0
 8002172:	d101      	bne.n	8002178 <HAL_RCC_ClockConfig+0x14>
 8002174:	2301      	movs	r3, #1
 8002176:	e0d0      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 8002178:	4b6a      	ldr	r3, [pc, #424]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	f003 0307 	and.w	r3, r3, #7
 8002180:	683a      	ldr	r2, [r7, #0]
 8002182:	429a      	cmp	r2, r3
 8002184:	d910      	bls.n	80021a8 <HAL_RCC_ClockConfig+0x44>
 8002186:	4b67      	ldr	r3, [pc, #412]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	f023 0207 	bic.w	r2, r3, #7
 800218e:	4965      	ldr	r1, [pc, #404]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 8002190:	683b      	ldr	r3, [r7, #0]
 8002192:	4313      	orrs	r3, r2
 8002194:	600b      	str	r3, [r1, #0]
 8002196:	4b63      	ldr	r3, [pc, #396]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f003 0307 	and.w	r3, r3, #7
 800219e:	683a      	ldr	r2, [r7, #0]
 80021a0:	429a      	cmp	r2, r3
 80021a2:	d001      	beq.n	80021a8 <HAL_RCC_ClockConfig+0x44>
 80021a4:	2301      	movs	r3, #1
 80021a6:	e0b8      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	f003 0302 	and.w	r3, r3, #2
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	d020      	beq.n	80021f6 <HAL_RCC_ClockConfig+0x92>
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	681b      	ldr	r3, [r3, #0]
 80021b8:	f003 0304 	and.w	r3, r3, #4
 80021bc:	2b00      	cmp	r3, #0
 80021be:	d005      	beq.n	80021cc <HAL_RCC_ClockConfig+0x68>
 80021c0:	4b59      	ldr	r3, [pc, #356]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021c2:	685b      	ldr	r3, [r3, #4]
 80021c4:	4a58      	ldr	r2, [pc, #352]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021c6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80021ca:	6053      	str	r3, [r2, #4]
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	f003 0308 	and.w	r3, r3, #8
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	d005      	beq.n	80021e4 <HAL_RCC_ClockConfig+0x80>
 80021d8:	4b53      	ldr	r3, [pc, #332]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021da:	685b      	ldr	r3, [r3, #4]
 80021dc:	4a52      	ldr	r2, [pc, #328]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021de:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80021e2:	6053      	str	r3, [r2, #4]
 80021e4:	4b50      	ldr	r3, [pc, #320]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021e6:	685b      	ldr	r3, [r3, #4]
 80021e8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	689b      	ldr	r3, [r3, #8]
 80021f0:	494d      	ldr	r1, [pc, #308]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80021f2:	4313      	orrs	r3, r2
 80021f4:	604b      	str	r3, [r1, #4]
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	f003 0301 	and.w	r3, r3, #1
 80021fe:	2b00      	cmp	r3, #0
 8002200:	d040      	beq.n	8002284 <HAL_RCC_ClockConfig+0x120>
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	685b      	ldr	r3, [r3, #4]
 8002206:	2b01      	cmp	r3, #1
 8002208:	d107      	bne.n	800221a <HAL_RCC_ClockConfig+0xb6>
 800220a:	4b47      	ldr	r3, [pc, #284]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002212:	2b00      	cmp	r3, #0
 8002214:	d115      	bne.n	8002242 <HAL_RCC_ClockConfig+0xde>
 8002216:	2301      	movs	r3, #1
 8002218:	e07f      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	685b      	ldr	r3, [r3, #4]
 800221e:	2b02      	cmp	r3, #2
 8002220:	d107      	bne.n	8002232 <HAL_RCC_ClockConfig+0xce>
 8002222:	4b41      	ldr	r3, [pc, #260]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800222a:	2b00      	cmp	r3, #0
 800222c:	d109      	bne.n	8002242 <HAL_RCC_ClockConfig+0xde>
 800222e:	2301      	movs	r3, #1
 8002230:	e073      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 8002232:	4b3d      	ldr	r3, [pc, #244]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f003 0302 	and.w	r3, r3, #2
 800223a:	2b00      	cmp	r3, #0
 800223c:	d101      	bne.n	8002242 <HAL_RCC_ClockConfig+0xde>
 800223e:	2301      	movs	r3, #1
 8002240:	e06b      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 8002242:	4b39      	ldr	r3, [pc, #228]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 8002244:	685b      	ldr	r3, [r3, #4]
 8002246:	f023 0203 	bic.w	r2, r3, #3
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	685b      	ldr	r3, [r3, #4]
 800224e:	4936      	ldr	r1, [pc, #216]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 8002250:	4313      	orrs	r3, r2
 8002252:	604b      	str	r3, [r1, #4]
 8002254:	f7ff f970 	bl	8001538 <HAL_GetTick>
 8002258:	60f8      	str	r0, [r7, #12]
 800225a:	e00a      	b.n	8002272 <HAL_RCC_ClockConfig+0x10e>
 800225c:	f7ff f96c 	bl	8001538 <HAL_GetTick>
 8002260:	4602      	mov	r2, r0
 8002262:	68fb      	ldr	r3, [r7, #12]
 8002264:	1ad3      	subs	r3, r2, r3
 8002266:	f241 3288 	movw	r2, #5000	; 0x1388
 800226a:	4293      	cmp	r3, r2
 800226c:	d901      	bls.n	8002272 <HAL_RCC_ClockConfig+0x10e>
 800226e:	2303      	movs	r3, #3
 8002270:	e053      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 8002272:	4b2d      	ldr	r3, [pc, #180]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 8002274:	685b      	ldr	r3, [r3, #4]
 8002276:	f003 020c 	and.w	r2, r3, #12
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	685b      	ldr	r3, [r3, #4]
 800227e:	009b      	lsls	r3, r3, #2
 8002280:	429a      	cmp	r2, r3
 8002282:	d1eb      	bne.n	800225c <HAL_RCC_ClockConfig+0xf8>
 8002284:	4b27      	ldr	r3, [pc, #156]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f003 0307 	and.w	r3, r3, #7
 800228c:	683a      	ldr	r2, [r7, #0]
 800228e:	429a      	cmp	r2, r3
 8002290:	d210      	bcs.n	80022b4 <HAL_RCC_ClockConfig+0x150>
 8002292:	4b24      	ldr	r3, [pc, #144]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	f023 0207 	bic.w	r2, r3, #7
 800229a:	4922      	ldr	r1, [pc, #136]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 800229c:	683b      	ldr	r3, [r7, #0]
 800229e:	4313      	orrs	r3, r2
 80022a0:	600b      	str	r3, [r1, #0]
 80022a2:	4b20      	ldr	r3, [pc, #128]	; (8002324 <HAL_RCC_ClockConfig+0x1c0>)
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	f003 0307 	and.w	r3, r3, #7
 80022aa:	683a      	ldr	r2, [r7, #0]
 80022ac:	429a      	cmp	r2, r3
 80022ae:	d001      	beq.n	80022b4 <HAL_RCC_ClockConfig+0x150>
 80022b0:	2301      	movs	r3, #1
 80022b2:	e032      	b.n	800231a <HAL_RCC_ClockConfig+0x1b6>
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	681b      	ldr	r3, [r3, #0]
 80022b8:	f003 0304 	and.w	r3, r3, #4
 80022bc:	2b00      	cmp	r3, #0
 80022be:	d008      	beq.n	80022d2 <HAL_RCC_ClockConfig+0x16e>
 80022c0:	4b19      	ldr	r3, [pc, #100]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80022c2:	685b      	ldr	r3, [r3, #4]
 80022c4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	68db      	ldr	r3, [r3, #12]
 80022cc:	4916      	ldr	r1, [pc, #88]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80022ce:	4313      	orrs	r3, r2
 80022d0:	604b      	str	r3, [r1, #4]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	f003 0308 	and.w	r3, r3, #8
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d009      	beq.n	80022f2 <HAL_RCC_ClockConfig+0x18e>
 80022de:	4b12      	ldr	r3, [pc, #72]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80022e0:	685b      	ldr	r3, [r3, #4]
 80022e2:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	691b      	ldr	r3, [r3, #16]
 80022ea:	00db      	lsls	r3, r3, #3
 80022ec:	490e      	ldr	r1, [pc, #56]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80022ee:	4313      	orrs	r3, r2
 80022f0:	604b      	str	r3, [r1, #4]
 80022f2:	f000 f821 	bl	8002338 <HAL_RCC_GetSysClockFreq>
 80022f6:	4602      	mov	r2, r0
 80022f8:	4b0b      	ldr	r3, [pc, #44]	; (8002328 <HAL_RCC_ClockConfig+0x1c4>)
 80022fa:	685b      	ldr	r3, [r3, #4]
 80022fc:	091b      	lsrs	r3, r3, #4
 80022fe:	f003 030f 	and.w	r3, r3, #15
 8002302:	490a      	ldr	r1, [pc, #40]	; (800232c <HAL_RCC_ClockConfig+0x1c8>)
 8002304:	5ccb      	ldrb	r3, [r1, r3]
 8002306:	fa22 f303 	lsr.w	r3, r2, r3
 800230a:	4a09      	ldr	r2, [pc, #36]	; (8002330 <HAL_RCC_ClockConfig+0x1cc>)
 800230c:	6013      	str	r3, [r2, #0]
 800230e:	4b09      	ldr	r3, [pc, #36]	; (8002334 <HAL_RCC_ClockConfig+0x1d0>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4618      	mov	r0, r3
 8002314:	f7ff f8ce 	bl	80014b4 <HAL_InitTick>
 8002318:	2300      	movs	r3, #0
 800231a:	4618      	mov	r0, r3
 800231c:	3710      	adds	r7, #16
 800231e:	46bd      	mov	sp, r7
 8002320:	bd80      	pop	{r7, pc}
 8002322:	bf00      	nop
 8002324:	40022000 	.word	0x40022000
 8002328:	40021000 	.word	0x40021000
 800232c:	08004690 	.word	0x08004690
 8002330:	20000024 	.word	0x20000024
 8002334:	20000028 	.word	0x20000028

08002338 <HAL_RCC_GetSysClockFreq>:
 8002338:	b490      	push	{r4, r7}
 800233a:	b08a      	sub	sp, #40	; 0x28
 800233c:	af00      	add	r7, sp, #0
 800233e:	4b29      	ldr	r3, [pc, #164]	; (80023e4 <HAL_RCC_GetSysClockFreq+0xac>)
 8002340:	1d3c      	adds	r4, r7, #4
 8002342:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002344:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002348:	f240 2301 	movw	r3, #513	; 0x201
 800234c:	803b      	strh	r3, [r7, #0]
 800234e:	2300      	movs	r3, #0
 8002350:	61fb      	str	r3, [r7, #28]
 8002352:	2300      	movs	r3, #0
 8002354:	61bb      	str	r3, [r7, #24]
 8002356:	2300      	movs	r3, #0
 8002358:	627b      	str	r3, [r7, #36]	; 0x24
 800235a:	2300      	movs	r3, #0
 800235c:	617b      	str	r3, [r7, #20]
 800235e:	2300      	movs	r3, #0
 8002360:	623b      	str	r3, [r7, #32]
 8002362:	4b21      	ldr	r3, [pc, #132]	; (80023e8 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002364:	685b      	ldr	r3, [r3, #4]
 8002366:	61fb      	str	r3, [r7, #28]
 8002368:	69fb      	ldr	r3, [r7, #28]
 800236a:	f003 030c 	and.w	r3, r3, #12
 800236e:	2b04      	cmp	r3, #4
 8002370:	d002      	beq.n	8002378 <HAL_RCC_GetSysClockFreq+0x40>
 8002372:	2b08      	cmp	r3, #8
 8002374:	d003      	beq.n	800237e <HAL_RCC_GetSysClockFreq+0x46>
 8002376:	e02b      	b.n	80023d0 <HAL_RCC_GetSysClockFreq+0x98>
 8002378:	4b1c      	ldr	r3, [pc, #112]	; (80023ec <HAL_RCC_GetSysClockFreq+0xb4>)
 800237a:	623b      	str	r3, [r7, #32]
 800237c:	e02b      	b.n	80023d6 <HAL_RCC_GetSysClockFreq+0x9e>
 800237e:	69fb      	ldr	r3, [r7, #28]
 8002380:	0c9b      	lsrs	r3, r3, #18
 8002382:	f003 030f 	and.w	r3, r3, #15
 8002386:	3328      	adds	r3, #40	; 0x28
 8002388:	443b      	add	r3, r7
 800238a:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800238e:	617b      	str	r3, [r7, #20]
 8002390:	69fb      	ldr	r3, [r7, #28]
 8002392:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002396:	2b00      	cmp	r3, #0
 8002398:	d012      	beq.n	80023c0 <HAL_RCC_GetSysClockFreq+0x88>
 800239a:	4b13      	ldr	r3, [pc, #76]	; (80023e8 <HAL_RCC_GetSysClockFreq+0xb0>)
 800239c:	685b      	ldr	r3, [r3, #4]
 800239e:	0c5b      	lsrs	r3, r3, #17
 80023a0:	f003 0301 	and.w	r3, r3, #1
 80023a4:	3328      	adds	r3, #40	; 0x28
 80023a6:	443b      	add	r3, r7
 80023a8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80023ac:	61bb      	str	r3, [r7, #24]
 80023ae:	697b      	ldr	r3, [r7, #20]
 80023b0:	4a0e      	ldr	r2, [pc, #56]	; (80023ec <HAL_RCC_GetSysClockFreq+0xb4>)
 80023b2:	fb03 f202 	mul.w	r2, r3, r2
 80023b6:	69bb      	ldr	r3, [r7, #24]
 80023b8:	fbb2 f3f3 	udiv	r3, r2, r3
 80023bc:	627b      	str	r3, [r7, #36]	; 0x24
 80023be:	e004      	b.n	80023ca <HAL_RCC_GetSysClockFreq+0x92>
 80023c0:	697b      	ldr	r3, [r7, #20]
 80023c2:	4a0b      	ldr	r2, [pc, #44]	; (80023f0 <HAL_RCC_GetSysClockFreq+0xb8>)
 80023c4:	fb02 f303 	mul.w	r3, r2, r3
 80023c8:	627b      	str	r3, [r7, #36]	; 0x24
 80023ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80023cc:	623b      	str	r3, [r7, #32]
 80023ce:	e002      	b.n	80023d6 <HAL_RCC_GetSysClockFreq+0x9e>
 80023d0:	4b06      	ldr	r3, [pc, #24]	; (80023ec <HAL_RCC_GetSysClockFreq+0xb4>)
 80023d2:	623b      	str	r3, [r7, #32]
 80023d4:	bf00      	nop
 80023d6:	6a3b      	ldr	r3, [r7, #32]
 80023d8:	4618      	mov	r0, r3
 80023da:	3728      	adds	r7, #40	; 0x28
 80023dc:	46bd      	mov	sp, r7
 80023de:	bc90      	pop	{r4, r7}
 80023e0:	4770      	bx	lr
 80023e2:	bf00      	nop
 80023e4:	08004680 	.word	0x08004680
 80023e8:	40021000 	.word	0x40021000
 80023ec:	007a1200 	.word	0x007a1200
 80023f0:	003d0900 	.word	0x003d0900

080023f4 <HAL_RCC_GetHCLKFreq>:
 80023f4:	b480      	push	{r7}
 80023f6:	af00      	add	r7, sp, #0
 80023f8:	4b02      	ldr	r3, [pc, #8]	; (8002404 <HAL_RCC_GetHCLKFreq+0x10>)
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4618      	mov	r0, r3
 80023fe:	46bd      	mov	sp, r7
 8002400:	bc80      	pop	{r7}
 8002402:	4770      	bx	lr
 8002404:	20000024 	.word	0x20000024

08002408 <HAL_RCC_GetPCLK1Freq>:
 8002408:	b580      	push	{r7, lr}
 800240a:	af00      	add	r7, sp, #0
 800240c:	f7ff fff2 	bl	80023f4 <HAL_RCC_GetHCLKFreq>
 8002410:	4602      	mov	r2, r0
 8002412:	4b05      	ldr	r3, [pc, #20]	; (8002428 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002414:	685b      	ldr	r3, [r3, #4]
 8002416:	0a1b      	lsrs	r3, r3, #8
 8002418:	f003 0307 	and.w	r3, r3, #7
 800241c:	4903      	ldr	r1, [pc, #12]	; (800242c <HAL_RCC_GetPCLK1Freq+0x24>)
 800241e:	5ccb      	ldrb	r3, [r1, r3]
 8002420:	fa22 f303 	lsr.w	r3, r2, r3
 8002424:	4618      	mov	r0, r3
 8002426:	bd80      	pop	{r7, pc}
 8002428:	40021000 	.word	0x40021000
 800242c:	080046a0 	.word	0x080046a0

08002430 <HAL_RCC_GetPCLK2Freq>:
 8002430:	b580      	push	{r7, lr}
 8002432:	af00      	add	r7, sp, #0
 8002434:	f7ff ffde 	bl	80023f4 <HAL_RCC_GetHCLKFreq>
 8002438:	4602      	mov	r2, r0
 800243a:	4b05      	ldr	r3, [pc, #20]	; (8002450 <HAL_RCC_GetPCLK2Freq+0x20>)
 800243c:	685b      	ldr	r3, [r3, #4]
 800243e:	0adb      	lsrs	r3, r3, #11
 8002440:	f003 0307 	and.w	r3, r3, #7
 8002444:	4903      	ldr	r1, [pc, #12]	; (8002454 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002446:	5ccb      	ldrb	r3, [r1, r3]
 8002448:	fa22 f303 	lsr.w	r3, r2, r3
 800244c:	4618      	mov	r0, r3
 800244e:	bd80      	pop	{r7, pc}
 8002450:	40021000 	.word	0x40021000
 8002454:	080046a0 	.word	0x080046a0

08002458 <RCC_Delay>:
 8002458:	b480      	push	{r7}
 800245a:	b085      	sub	sp, #20
 800245c:	af00      	add	r7, sp, #0
 800245e:	6078      	str	r0, [r7, #4]
 8002460:	4b0a      	ldr	r3, [pc, #40]	; (800248c <RCC_Delay+0x34>)
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	4a0a      	ldr	r2, [pc, #40]	; (8002490 <RCC_Delay+0x38>)
 8002466:	fba2 2303 	umull	r2, r3, r2, r3
 800246a:	0a5b      	lsrs	r3, r3, #9
 800246c:	687a      	ldr	r2, [r7, #4]
 800246e:	fb02 f303 	mul.w	r3, r2, r3
 8002472:	60fb      	str	r3, [r7, #12]
 8002474:	bf00      	nop
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	1e5a      	subs	r2, r3, #1
 800247a:	60fa      	str	r2, [r7, #12]
 800247c:	2b00      	cmp	r3, #0
 800247e:	d1f9      	bne.n	8002474 <RCC_Delay+0x1c>
 8002480:	bf00      	nop
 8002482:	bf00      	nop
 8002484:	3714      	adds	r7, #20
 8002486:	46bd      	mov	sp, r7
 8002488:	bc80      	pop	{r7}
 800248a:	4770      	bx	lr
 800248c:	20000024 	.word	0x20000024
 8002490:	10624dd3 	.word	0x10624dd3

08002494 <HAL_TIM_Base_Init>:
 8002494:	b580      	push	{r7, lr}
 8002496:	b082      	sub	sp, #8
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d101      	bne.n	80024a6 <HAL_TIM_Base_Init+0x12>
 80024a2:	2301      	movs	r3, #1
 80024a4:	e041      	b.n	800252a <HAL_TIM_Base_Init+0x96>
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80024ac:	b2db      	uxtb	r3, r3
 80024ae:	2b00      	cmp	r3, #0
 80024b0:	d106      	bne.n	80024c0 <HAL_TIM_Base_Init+0x2c>
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	2200      	movs	r2, #0
 80024b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024ba:	6878      	ldr	r0, [r7, #4]
 80024bc:	f7fe fd64 	bl	8000f88 <HAL_TIM_Base_MspInit>
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	2202      	movs	r2, #2
 80024c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681a      	ldr	r2, [r3, #0]
 80024cc:	687b      	ldr	r3, [r7, #4]
 80024ce:	3304      	adds	r3, #4
 80024d0:	4619      	mov	r1, r3
 80024d2:	4610      	mov	r0, r2
 80024d4:	f000 fc28 	bl	8002d28 <TIM_Base_SetConfig>
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	2201      	movs	r2, #1
 80024dc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	2201      	movs	r2, #1
 80024e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2201      	movs	r2, #1
 80024ec:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	2201      	movs	r2, #1
 80024f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	2201      	movs	r2, #1
 80024fc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	2201      	movs	r2, #1
 8002504:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	2201      	movs	r2, #1
 800250c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	2201      	movs	r2, #1
 8002514:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	2201      	movs	r2, #1
 800251c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	2201      	movs	r2, #1
 8002524:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002528:	2300      	movs	r3, #0
 800252a:	4618      	mov	r0, r3
 800252c:	3708      	adds	r7, #8
 800252e:	46bd      	mov	sp, r7
 8002530:	bd80      	pop	{r7, pc}
	...

08002534 <HAL_TIM_Base_Start_IT>:
 8002534:	b480      	push	{r7}
 8002536:	b085      	sub	sp, #20
 8002538:	af00      	add	r7, sp, #0
 800253a:	6078      	str	r0, [r7, #4]
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002542:	b2db      	uxtb	r3, r3
 8002544:	2b01      	cmp	r3, #1
 8002546:	d001      	beq.n	800254c <HAL_TIM_Base_Start_IT+0x18>
 8002548:	2301      	movs	r3, #1
 800254a:	e03a      	b.n	80025c2 <HAL_TIM_Base_Start_IT+0x8e>
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2202      	movs	r2, #2
 8002550:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	68da      	ldr	r2, [r3, #12]
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	f042 0201 	orr.w	r2, r2, #1
 8002562:	60da      	str	r2, [r3, #12]
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	4a18      	ldr	r2, [pc, #96]	; (80025cc <HAL_TIM_Base_Start_IT+0x98>)
 800256a:	4293      	cmp	r3, r2
 800256c:	d00e      	beq.n	800258c <HAL_TIM_Base_Start_IT+0x58>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002576:	d009      	beq.n	800258c <HAL_TIM_Base_Start_IT+0x58>
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	4a14      	ldr	r2, [pc, #80]	; (80025d0 <HAL_TIM_Base_Start_IT+0x9c>)
 800257e:	4293      	cmp	r3, r2
 8002580:	d004      	beq.n	800258c <HAL_TIM_Base_Start_IT+0x58>
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	4a13      	ldr	r2, [pc, #76]	; (80025d4 <HAL_TIM_Base_Start_IT+0xa0>)
 8002588:	4293      	cmp	r3, r2
 800258a:	d111      	bne.n	80025b0 <HAL_TIM_Base_Start_IT+0x7c>
 800258c:	687b      	ldr	r3, [r7, #4]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	689b      	ldr	r3, [r3, #8]
 8002592:	f003 0307 	and.w	r3, r3, #7
 8002596:	60fb      	str	r3, [r7, #12]
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	2b06      	cmp	r3, #6
 800259c:	d010      	beq.n	80025c0 <HAL_TIM_Base_Start_IT+0x8c>
 800259e:	687b      	ldr	r3, [r7, #4]
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	681a      	ldr	r2, [r3, #0]
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	f042 0201 	orr.w	r2, r2, #1
 80025ac:	601a      	str	r2, [r3, #0]
 80025ae:	e007      	b.n	80025c0 <HAL_TIM_Base_Start_IT+0x8c>
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	681a      	ldr	r2, [r3, #0]
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f042 0201 	orr.w	r2, r2, #1
 80025be:	601a      	str	r2, [r3, #0]
 80025c0:	2300      	movs	r3, #0
 80025c2:	4618      	mov	r0, r3
 80025c4:	3714      	adds	r7, #20
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bc80      	pop	{r7}
 80025ca:	4770      	bx	lr
 80025cc:	40012c00 	.word	0x40012c00
 80025d0:	40000400 	.word	0x40000400
 80025d4:	40000800 	.word	0x40000800

080025d8 <HAL_TIM_PWM_Init>:
 80025d8:	b580      	push	{r7, lr}
 80025da:	b082      	sub	sp, #8
 80025dc:	af00      	add	r7, sp, #0
 80025de:	6078      	str	r0, [r7, #4]
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d101      	bne.n	80025ea <HAL_TIM_PWM_Init+0x12>
 80025e6:	2301      	movs	r3, #1
 80025e8:	e041      	b.n	800266e <HAL_TIM_PWM_Init+0x96>
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80025f0:	b2db      	uxtb	r3, r3
 80025f2:	2b00      	cmp	r3, #0
 80025f4:	d106      	bne.n	8002604 <HAL_TIM_PWM_Init+0x2c>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	2200      	movs	r2, #0
 80025fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80025fe:	6878      	ldr	r0, [r7, #4]
 8002600:	f000 f839 	bl	8002676 <HAL_TIM_PWM_MspInit>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	2202      	movs	r2, #2
 8002608:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681a      	ldr	r2, [r3, #0]
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	3304      	adds	r3, #4
 8002614:	4619      	mov	r1, r3
 8002616:	4610      	mov	r0, r2
 8002618:	f000 fb86 	bl	8002d28 <TIM_Base_SetConfig>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	2201      	movs	r2, #1
 8002620:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	2201      	movs	r2, #1
 8002628:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800262c:	687b      	ldr	r3, [r7, #4]
 800262e:	2201      	movs	r2, #1
 8002630:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	2201      	movs	r2, #1
 8002638:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	2201      	movs	r2, #1
 8002640:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	2201      	movs	r2, #1
 8002648:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	2201      	movs	r2, #1
 8002650:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	2201      	movs	r2, #1
 8002658:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	2201      	movs	r2, #1
 8002660:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	2201      	movs	r2, #1
 8002668:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800266c:	2300      	movs	r3, #0
 800266e:	4618      	mov	r0, r3
 8002670:	3708      	adds	r7, #8
 8002672:	46bd      	mov	sp, r7
 8002674:	bd80      	pop	{r7, pc}

08002676 <HAL_TIM_PWM_MspInit>:
 8002676:	b480      	push	{r7}
 8002678:	b083      	sub	sp, #12
 800267a:	af00      	add	r7, sp, #0
 800267c:	6078      	str	r0, [r7, #4]
 800267e:	bf00      	nop
 8002680:	370c      	adds	r7, #12
 8002682:	46bd      	mov	sp, r7
 8002684:	bc80      	pop	{r7}
 8002686:	4770      	bx	lr

08002688 <HAL_TIM_PWM_Start>:
 8002688:	b580      	push	{r7, lr}
 800268a:	b084      	sub	sp, #16
 800268c:	af00      	add	r7, sp, #0
 800268e:	6078      	str	r0, [r7, #4]
 8002690:	6039      	str	r1, [r7, #0]
 8002692:	683b      	ldr	r3, [r7, #0]
 8002694:	2b00      	cmp	r3, #0
 8002696:	d109      	bne.n	80026ac <HAL_TIM_PWM_Start+0x24>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800269e:	b2db      	uxtb	r3, r3
 80026a0:	2b01      	cmp	r3, #1
 80026a2:	bf14      	ite	ne
 80026a4:	2301      	movne	r3, #1
 80026a6:	2300      	moveq	r3, #0
 80026a8:	b2db      	uxtb	r3, r3
 80026aa:	e022      	b.n	80026f2 <HAL_TIM_PWM_Start+0x6a>
 80026ac:	683b      	ldr	r3, [r7, #0]
 80026ae:	2b04      	cmp	r3, #4
 80026b0:	d109      	bne.n	80026c6 <HAL_TIM_PWM_Start+0x3e>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80026b8:	b2db      	uxtb	r3, r3
 80026ba:	2b01      	cmp	r3, #1
 80026bc:	bf14      	ite	ne
 80026be:	2301      	movne	r3, #1
 80026c0:	2300      	moveq	r3, #0
 80026c2:	b2db      	uxtb	r3, r3
 80026c4:	e015      	b.n	80026f2 <HAL_TIM_PWM_Start+0x6a>
 80026c6:	683b      	ldr	r3, [r7, #0]
 80026c8:	2b08      	cmp	r3, #8
 80026ca:	d109      	bne.n	80026e0 <HAL_TIM_PWM_Start+0x58>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80026d2:	b2db      	uxtb	r3, r3
 80026d4:	2b01      	cmp	r3, #1
 80026d6:	bf14      	ite	ne
 80026d8:	2301      	movne	r3, #1
 80026da:	2300      	moveq	r3, #0
 80026dc:	b2db      	uxtb	r3, r3
 80026de:	e008      	b.n	80026f2 <HAL_TIM_PWM_Start+0x6a>
 80026e0:	687b      	ldr	r3, [r7, #4]
 80026e2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80026e6:	b2db      	uxtb	r3, r3
 80026e8:	2b01      	cmp	r3, #1
 80026ea:	bf14      	ite	ne
 80026ec:	2301      	movne	r3, #1
 80026ee:	2300      	moveq	r3, #0
 80026f0:	b2db      	uxtb	r3, r3
 80026f2:	2b00      	cmp	r3, #0
 80026f4:	d001      	beq.n	80026fa <HAL_TIM_PWM_Start+0x72>
 80026f6:	2301      	movs	r3, #1
 80026f8:	e05e      	b.n	80027b8 <HAL_TIM_PWM_Start+0x130>
 80026fa:	683b      	ldr	r3, [r7, #0]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	d104      	bne.n	800270a <HAL_TIM_PWM_Start+0x82>
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	2202      	movs	r2, #2
 8002704:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002708:	e013      	b.n	8002732 <HAL_TIM_PWM_Start+0xaa>
 800270a:	683b      	ldr	r3, [r7, #0]
 800270c:	2b04      	cmp	r3, #4
 800270e:	d104      	bne.n	800271a <HAL_TIM_PWM_Start+0x92>
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	2202      	movs	r2, #2
 8002714:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002718:	e00b      	b.n	8002732 <HAL_TIM_PWM_Start+0xaa>
 800271a:	683b      	ldr	r3, [r7, #0]
 800271c:	2b08      	cmp	r3, #8
 800271e:	d104      	bne.n	800272a <HAL_TIM_PWM_Start+0xa2>
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	2202      	movs	r2, #2
 8002724:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002728:	e003      	b.n	8002732 <HAL_TIM_PWM_Start+0xaa>
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	2202      	movs	r2, #2
 800272e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	2201      	movs	r2, #1
 8002738:	6839      	ldr	r1, [r7, #0]
 800273a:	4618      	mov	r0, r3
 800273c:	f000 fd74 	bl	8003228 <TIM_CCxChannelCmd>
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	4a1e      	ldr	r2, [pc, #120]	; (80027c0 <HAL_TIM_PWM_Start+0x138>)
 8002746:	4293      	cmp	r3, r2
 8002748:	d107      	bne.n	800275a <HAL_TIM_PWM_Start+0xd2>
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002758:	645a      	str	r2, [r3, #68]	; 0x44
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	4a18      	ldr	r2, [pc, #96]	; (80027c0 <HAL_TIM_PWM_Start+0x138>)
 8002760:	4293      	cmp	r3, r2
 8002762:	d00e      	beq.n	8002782 <HAL_TIM_PWM_Start+0xfa>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800276c:	d009      	beq.n	8002782 <HAL_TIM_PWM_Start+0xfa>
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	4a14      	ldr	r2, [pc, #80]	; (80027c4 <HAL_TIM_PWM_Start+0x13c>)
 8002774:	4293      	cmp	r3, r2
 8002776:	d004      	beq.n	8002782 <HAL_TIM_PWM_Start+0xfa>
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	4a12      	ldr	r2, [pc, #72]	; (80027c8 <HAL_TIM_PWM_Start+0x140>)
 800277e:	4293      	cmp	r3, r2
 8002780:	d111      	bne.n	80027a6 <HAL_TIM_PWM_Start+0x11e>
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	689b      	ldr	r3, [r3, #8]
 8002788:	f003 0307 	and.w	r3, r3, #7
 800278c:	60fb      	str	r3, [r7, #12]
 800278e:	68fb      	ldr	r3, [r7, #12]
 8002790:	2b06      	cmp	r3, #6
 8002792:	d010      	beq.n	80027b6 <HAL_TIM_PWM_Start+0x12e>
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	681a      	ldr	r2, [r3, #0]
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	f042 0201 	orr.w	r2, r2, #1
 80027a2:	601a      	str	r2, [r3, #0]
 80027a4:	e007      	b.n	80027b6 <HAL_TIM_PWM_Start+0x12e>
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	681a      	ldr	r2, [r3, #0]
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	f042 0201 	orr.w	r2, r2, #1
 80027b4:	601a      	str	r2, [r3, #0]
 80027b6:	2300      	movs	r3, #0
 80027b8:	4618      	mov	r0, r3
 80027ba:	3710      	adds	r7, #16
 80027bc:	46bd      	mov	sp, r7
 80027be:	bd80      	pop	{r7, pc}
 80027c0:	40012c00 	.word	0x40012c00
 80027c4:	40000400 	.word	0x40000400
 80027c8:	40000800 	.word	0x40000800

080027cc <HAL_TIM_IRQHandler>:
 80027cc:	b580      	push	{r7, lr}
 80027ce:	b082      	sub	sp, #8
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	6078      	str	r0, [r7, #4]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	691b      	ldr	r3, [r3, #16]
 80027da:	f003 0302 	and.w	r3, r3, #2
 80027de:	2b02      	cmp	r3, #2
 80027e0:	d122      	bne.n	8002828 <HAL_TIM_IRQHandler+0x5c>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	68db      	ldr	r3, [r3, #12]
 80027e8:	f003 0302 	and.w	r3, r3, #2
 80027ec:	2b02      	cmp	r3, #2
 80027ee:	d11b      	bne.n	8002828 <HAL_TIM_IRQHandler+0x5c>
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	f06f 0202 	mvn.w	r2, #2
 80027f8:	611a      	str	r2, [r3, #16]
 80027fa:	687b      	ldr	r3, [r7, #4]
 80027fc:	2201      	movs	r2, #1
 80027fe:	771a      	strb	r2, [r3, #28]
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	699b      	ldr	r3, [r3, #24]
 8002806:	f003 0303 	and.w	r3, r3, #3
 800280a:	2b00      	cmp	r3, #0
 800280c:	d003      	beq.n	8002816 <HAL_TIM_IRQHandler+0x4a>
 800280e:	6878      	ldr	r0, [r7, #4]
 8002810:	f000 fa6f 	bl	8002cf2 <HAL_TIM_IC_CaptureCallback>
 8002814:	e005      	b.n	8002822 <HAL_TIM_IRQHandler+0x56>
 8002816:	6878      	ldr	r0, [r7, #4]
 8002818:	f000 fa62 	bl	8002ce0 <HAL_TIM_OC_DelayElapsedCallback>
 800281c:	6878      	ldr	r0, [r7, #4]
 800281e:	f000 fa71 	bl	8002d04 <HAL_TIM_PWM_PulseFinishedCallback>
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	2200      	movs	r2, #0
 8002826:	771a      	strb	r2, [r3, #28]
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	691b      	ldr	r3, [r3, #16]
 800282e:	f003 0304 	and.w	r3, r3, #4
 8002832:	2b04      	cmp	r3, #4
 8002834:	d122      	bne.n	800287c <HAL_TIM_IRQHandler+0xb0>
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	68db      	ldr	r3, [r3, #12]
 800283c:	f003 0304 	and.w	r3, r3, #4
 8002840:	2b04      	cmp	r3, #4
 8002842:	d11b      	bne.n	800287c <HAL_TIM_IRQHandler+0xb0>
 8002844:	687b      	ldr	r3, [r7, #4]
 8002846:	681b      	ldr	r3, [r3, #0]
 8002848:	f06f 0204 	mvn.w	r2, #4
 800284c:	611a      	str	r2, [r3, #16]
 800284e:	687b      	ldr	r3, [r7, #4]
 8002850:	2202      	movs	r2, #2
 8002852:	771a      	strb	r2, [r3, #28]
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	699b      	ldr	r3, [r3, #24]
 800285a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800285e:	2b00      	cmp	r3, #0
 8002860:	d003      	beq.n	800286a <HAL_TIM_IRQHandler+0x9e>
 8002862:	6878      	ldr	r0, [r7, #4]
 8002864:	f000 fa45 	bl	8002cf2 <HAL_TIM_IC_CaptureCallback>
 8002868:	e005      	b.n	8002876 <HAL_TIM_IRQHandler+0xaa>
 800286a:	6878      	ldr	r0, [r7, #4]
 800286c:	f000 fa38 	bl	8002ce0 <HAL_TIM_OC_DelayElapsedCallback>
 8002870:	6878      	ldr	r0, [r7, #4]
 8002872:	f000 fa47 	bl	8002d04 <HAL_TIM_PWM_PulseFinishedCallback>
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	2200      	movs	r2, #0
 800287a:	771a      	strb	r2, [r3, #28]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	691b      	ldr	r3, [r3, #16]
 8002882:	f003 0308 	and.w	r3, r3, #8
 8002886:	2b08      	cmp	r3, #8
 8002888:	d122      	bne.n	80028d0 <HAL_TIM_IRQHandler+0x104>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	68db      	ldr	r3, [r3, #12]
 8002890:	f003 0308 	and.w	r3, r3, #8
 8002894:	2b08      	cmp	r3, #8
 8002896:	d11b      	bne.n	80028d0 <HAL_TIM_IRQHandler+0x104>
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	f06f 0208 	mvn.w	r2, #8
 80028a0:	611a      	str	r2, [r3, #16]
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	2204      	movs	r2, #4
 80028a6:	771a      	strb	r2, [r3, #28]
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	69db      	ldr	r3, [r3, #28]
 80028ae:	f003 0303 	and.w	r3, r3, #3
 80028b2:	2b00      	cmp	r3, #0
 80028b4:	d003      	beq.n	80028be <HAL_TIM_IRQHandler+0xf2>
 80028b6:	6878      	ldr	r0, [r7, #4]
 80028b8:	f000 fa1b 	bl	8002cf2 <HAL_TIM_IC_CaptureCallback>
 80028bc:	e005      	b.n	80028ca <HAL_TIM_IRQHandler+0xfe>
 80028be:	6878      	ldr	r0, [r7, #4]
 80028c0:	f000 fa0e 	bl	8002ce0 <HAL_TIM_OC_DelayElapsedCallback>
 80028c4:	6878      	ldr	r0, [r7, #4]
 80028c6:	f000 fa1d 	bl	8002d04 <HAL_TIM_PWM_PulseFinishedCallback>
 80028ca:	687b      	ldr	r3, [r7, #4]
 80028cc:	2200      	movs	r2, #0
 80028ce:	771a      	strb	r2, [r3, #28]
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	691b      	ldr	r3, [r3, #16]
 80028d6:	f003 0310 	and.w	r3, r3, #16
 80028da:	2b10      	cmp	r3, #16
 80028dc:	d122      	bne.n	8002924 <HAL_TIM_IRQHandler+0x158>
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	681b      	ldr	r3, [r3, #0]
 80028e2:	68db      	ldr	r3, [r3, #12]
 80028e4:	f003 0310 	and.w	r3, r3, #16
 80028e8:	2b10      	cmp	r3, #16
 80028ea:	d11b      	bne.n	8002924 <HAL_TIM_IRQHandler+0x158>
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	f06f 0210 	mvn.w	r2, #16
 80028f4:	611a      	str	r2, [r3, #16]
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	2208      	movs	r2, #8
 80028fa:	771a      	strb	r2, [r3, #28]
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	69db      	ldr	r3, [r3, #28]
 8002902:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002906:	2b00      	cmp	r3, #0
 8002908:	d003      	beq.n	8002912 <HAL_TIM_IRQHandler+0x146>
 800290a:	6878      	ldr	r0, [r7, #4]
 800290c:	f000 f9f1 	bl	8002cf2 <HAL_TIM_IC_CaptureCallback>
 8002910:	e005      	b.n	800291e <HAL_TIM_IRQHandler+0x152>
 8002912:	6878      	ldr	r0, [r7, #4]
 8002914:	f000 f9e4 	bl	8002ce0 <HAL_TIM_OC_DelayElapsedCallback>
 8002918:	6878      	ldr	r0, [r7, #4]
 800291a:	f000 f9f3 	bl	8002d04 <HAL_TIM_PWM_PulseFinishedCallback>
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	2200      	movs	r2, #0
 8002922:	771a      	strb	r2, [r3, #28]
 8002924:	687b      	ldr	r3, [r7, #4]
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	691b      	ldr	r3, [r3, #16]
 800292a:	f003 0301 	and.w	r3, r3, #1
 800292e:	2b01      	cmp	r3, #1
 8002930:	d10e      	bne.n	8002950 <HAL_TIM_IRQHandler+0x184>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	68db      	ldr	r3, [r3, #12]
 8002938:	f003 0301 	and.w	r3, r3, #1
 800293c:	2b01      	cmp	r3, #1
 800293e:	d107      	bne.n	8002950 <HAL_TIM_IRQHandler+0x184>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	f06f 0201 	mvn.w	r2, #1
 8002948:	611a      	str	r2, [r3, #16]
 800294a:	6878      	ldr	r0, [r7, #4]
 800294c:	f7fe fade 	bl	8000f0c <HAL_TIM_PeriodElapsedCallback>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	691b      	ldr	r3, [r3, #16]
 8002956:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800295a:	2b80      	cmp	r3, #128	; 0x80
 800295c:	d10e      	bne.n	800297c <HAL_TIM_IRQHandler+0x1b0>
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	68db      	ldr	r3, [r3, #12]
 8002964:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002968:	2b80      	cmp	r3, #128	; 0x80
 800296a:	d107      	bne.n	800297c <HAL_TIM_IRQHandler+0x1b0>
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002974:	611a      	str	r2, [r3, #16]
 8002976:	6878      	ldr	r0, [r7, #4]
 8002978:	f000 fce1 	bl	800333e <HAL_TIMEx_BreakCallback>
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	691b      	ldr	r3, [r3, #16]
 8002982:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002986:	2b40      	cmp	r3, #64	; 0x40
 8002988:	d10e      	bne.n	80029a8 <HAL_TIM_IRQHandler+0x1dc>
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	681b      	ldr	r3, [r3, #0]
 800298e:	68db      	ldr	r3, [r3, #12]
 8002990:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002994:	2b40      	cmp	r3, #64	; 0x40
 8002996:	d107      	bne.n	80029a8 <HAL_TIM_IRQHandler+0x1dc>
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80029a0:	611a      	str	r2, [r3, #16]
 80029a2:	6878      	ldr	r0, [r7, #4]
 80029a4:	f000 f9b7 	bl	8002d16 <HAL_TIM_TriggerCallback>
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	691b      	ldr	r3, [r3, #16]
 80029ae:	f003 0320 	and.w	r3, r3, #32
 80029b2:	2b20      	cmp	r3, #32
 80029b4:	d10e      	bne.n	80029d4 <HAL_TIM_IRQHandler+0x208>
 80029b6:	687b      	ldr	r3, [r7, #4]
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	68db      	ldr	r3, [r3, #12]
 80029bc:	f003 0320 	and.w	r3, r3, #32
 80029c0:	2b20      	cmp	r3, #32
 80029c2:	d107      	bne.n	80029d4 <HAL_TIM_IRQHandler+0x208>
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	681b      	ldr	r3, [r3, #0]
 80029c8:	f06f 0220 	mvn.w	r2, #32
 80029cc:	611a      	str	r2, [r3, #16]
 80029ce:	6878      	ldr	r0, [r7, #4]
 80029d0:	f000 fcac 	bl	800332c <HAL_TIMEx_CommutCallback>
 80029d4:	bf00      	nop
 80029d6:	3708      	adds	r7, #8
 80029d8:	46bd      	mov	sp, r7
 80029da:	bd80      	pop	{r7, pc}

080029dc <HAL_TIM_PWM_ConfigChannel>:
 80029dc:	b580      	push	{r7, lr}
 80029de:	b084      	sub	sp, #16
 80029e0:	af00      	add	r7, sp, #0
 80029e2:	60f8      	str	r0, [r7, #12]
 80029e4:	60b9      	str	r1, [r7, #8]
 80029e6:	607a      	str	r2, [r7, #4]
 80029e8:	68fb      	ldr	r3, [r7, #12]
 80029ea:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80029ee:	2b01      	cmp	r3, #1
 80029f0:	d101      	bne.n	80029f6 <HAL_TIM_PWM_ConfigChannel+0x1a>
 80029f2:	2302      	movs	r3, #2
 80029f4:	e0ac      	b.n	8002b50 <HAL_TIM_PWM_ConfigChannel+0x174>
 80029f6:	68fb      	ldr	r3, [r7, #12]
 80029f8:	2201      	movs	r2, #1
 80029fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	2b0c      	cmp	r3, #12
 8002a02:	f200 809f 	bhi.w	8002b44 <HAL_TIM_PWM_ConfigChannel+0x168>
 8002a06:	a201      	add	r2, pc, #4	; (adr r2, 8002a0c <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002a08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a0c:	08002a41 	.word	0x08002a41
 8002a10:	08002b45 	.word	0x08002b45
 8002a14:	08002b45 	.word	0x08002b45
 8002a18:	08002b45 	.word	0x08002b45
 8002a1c:	08002a81 	.word	0x08002a81
 8002a20:	08002b45 	.word	0x08002b45
 8002a24:	08002b45 	.word	0x08002b45
 8002a28:	08002b45 	.word	0x08002b45
 8002a2c:	08002ac3 	.word	0x08002ac3
 8002a30:	08002b45 	.word	0x08002b45
 8002a34:	08002b45 	.word	0x08002b45
 8002a38:	08002b45 	.word	0x08002b45
 8002a3c:	08002b03 	.word	0x08002b03
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	68b9      	ldr	r1, [r7, #8]
 8002a46:	4618      	mov	r0, r3
 8002a48:	f000 f9d0 	bl	8002dec <TIM_OC1_SetConfig>
 8002a4c:	68fb      	ldr	r3, [r7, #12]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	699a      	ldr	r2, [r3, #24]
 8002a52:	68fb      	ldr	r3, [r7, #12]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	f042 0208 	orr.w	r2, r2, #8
 8002a5a:	619a      	str	r2, [r3, #24]
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	699a      	ldr	r2, [r3, #24]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	f022 0204 	bic.w	r2, r2, #4
 8002a6a:	619a      	str	r2, [r3, #24]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	6999      	ldr	r1, [r3, #24]
 8002a72:	68bb      	ldr	r3, [r7, #8]
 8002a74:	691a      	ldr	r2, [r3, #16]
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	681b      	ldr	r3, [r3, #0]
 8002a7a:	430a      	orrs	r2, r1
 8002a7c:	619a      	str	r2, [r3, #24]
 8002a7e:	e062      	b.n	8002b46 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	681b      	ldr	r3, [r3, #0]
 8002a84:	68b9      	ldr	r1, [r7, #8]
 8002a86:	4618      	mov	r0, r3
 8002a88:	f000 fa16 	bl	8002eb8 <TIM_OC2_SetConfig>
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	699a      	ldr	r2, [r3, #24]
 8002a92:	68fb      	ldr	r3, [r7, #12]
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002a9a:	619a      	str	r2, [r3, #24]
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	681b      	ldr	r3, [r3, #0]
 8002aa0:	699a      	ldr	r2, [r3, #24]
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002aaa:	619a      	str	r2, [r3, #24]
 8002aac:	68fb      	ldr	r3, [r7, #12]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	6999      	ldr	r1, [r3, #24]
 8002ab2:	68bb      	ldr	r3, [r7, #8]
 8002ab4:	691b      	ldr	r3, [r3, #16]
 8002ab6:	021a      	lsls	r2, r3, #8
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	681b      	ldr	r3, [r3, #0]
 8002abc:	430a      	orrs	r2, r1
 8002abe:	619a      	str	r2, [r3, #24]
 8002ac0:	e041      	b.n	8002b46 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002ac2:	68fb      	ldr	r3, [r7, #12]
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	68b9      	ldr	r1, [r7, #8]
 8002ac8:	4618      	mov	r0, r3
 8002aca:	f000 fa5f 	bl	8002f8c <TIM_OC3_SetConfig>
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	69da      	ldr	r2, [r3, #28]
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f042 0208 	orr.w	r2, r2, #8
 8002adc:	61da      	str	r2, [r3, #28]
 8002ade:	68fb      	ldr	r3, [r7, #12]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	69da      	ldr	r2, [r3, #28]
 8002ae4:	68fb      	ldr	r3, [r7, #12]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	f022 0204 	bic.w	r2, r2, #4
 8002aec:	61da      	str	r2, [r3, #28]
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	69d9      	ldr	r1, [r3, #28]
 8002af4:	68bb      	ldr	r3, [r7, #8]
 8002af6:	691a      	ldr	r2, [r3, #16]
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	430a      	orrs	r2, r1
 8002afe:	61da      	str	r2, [r3, #28]
 8002b00:	e021      	b.n	8002b46 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002b02:	68fb      	ldr	r3, [r7, #12]
 8002b04:	681b      	ldr	r3, [r3, #0]
 8002b06:	68b9      	ldr	r1, [r7, #8]
 8002b08:	4618      	mov	r0, r3
 8002b0a:	f000 faa9 	bl	8003060 <TIM_OC4_SetConfig>
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	69da      	ldr	r2, [r3, #28]
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002b1c:	61da      	str	r2, [r3, #28]
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	69da      	ldr	r2, [r3, #28]
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002b2c:	61da      	str	r2, [r3, #28]
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	69d9      	ldr	r1, [r3, #28]
 8002b34:	68bb      	ldr	r3, [r7, #8]
 8002b36:	691b      	ldr	r3, [r3, #16]
 8002b38:	021a      	lsls	r2, r3, #8
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	430a      	orrs	r2, r1
 8002b40:	61da      	str	r2, [r3, #28]
 8002b42:	e000      	b.n	8002b46 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002b44:	bf00      	nop
 8002b46:	68fb      	ldr	r3, [r7, #12]
 8002b48:	2200      	movs	r2, #0
 8002b4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b4e:	2300      	movs	r3, #0
 8002b50:	4618      	mov	r0, r3
 8002b52:	3710      	adds	r7, #16
 8002b54:	46bd      	mov	sp, r7
 8002b56:	bd80      	pop	{r7, pc}

08002b58 <HAL_TIM_ConfigClockSource>:
 8002b58:	b580      	push	{r7, lr}
 8002b5a:	b084      	sub	sp, #16
 8002b5c:	af00      	add	r7, sp, #0
 8002b5e:	6078      	str	r0, [r7, #4]
 8002b60:	6039      	str	r1, [r7, #0]
 8002b62:	687b      	ldr	r3, [r7, #4]
 8002b64:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002b68:	2b01      	cmp	r3, #1
 8002b6a:	d101      	bne.n	8002b70 <HAL_TIM_ConfigClockSource+0x18>
 8002b6c:	2302      	movs	r3, #2
 8002b6e:	e0b3      	b.n	8002cd8 <HAL_TIM_ConfigClockSource+0x180>
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	2201      	movs	r2, #1
 8002b74:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	2202      	movs	r2, #2
 8002b7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	689b      	ldr	r3, [r3, #8]
 8002b86:	60fb      	str	r3, [r7, #12]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002b8e:	60fb      	str	r3, [r7, #12]
 8002b90:	68fb      	ldr	r3, [r7, #12]
 8002b92:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002b96:	60fb      	str	r3, [r7, #12]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	68fa      	ldr	r2, [r7, #12]
 8002b9e:	609a      	str	r2, [r3, #8]
 8002ba0:	683b      	ldr	r3, [r7, #0]
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002ba8:	d03e      	beq.n	8002c28 <HAL_TIM_ConfigClockSource+0xd0>
 8002baa:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002bae:	f200 8087 	bhi.w	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bb2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002bb6:	f000 8085 	beq.w	8002cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8002bba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002bbe:	d87f      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bc0:	2b70      	cmp	r3, #112	; 0x70
 8002bc2:	d01a      	beq.n	8002bfa <HAL_TIM_ConfigClockSource+0xa2>
 8002bc4:	2b70      	cmp	r3, #112	; 0x70
 8002bc6:	d87b      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bc8:	2b60      	cmp	r3, #96	; 0x60
 8002bca:	d050      	beq.n	8002c6e <HAL_TIM_ConfigClockSource+0x116>
 8002bcc:	2b60      	cmp	r3, #96	; 0x60
 8002bce:	d877      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bd0:	2b50      	cmp	r3, #80	; 0x50
 8002bd2:	d03c      	beq.n	8002c4e <HAL_TIM_ConfigClockSource+0xf6>
 8002bd4:	2b50      	cmp	r3, #80	; 0x50
 8002bd6:	d873      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bd8:	2b40      	cmp	r3, #64	; 0x40
 8002bda:	d058      	beq.n	8002c8e <HAL_TIM_ConfigClockSource+0x136>
 8002bdc:	2b40      	cmp	r3, #64	; 0x40
 8002bde:	d86f      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002be0:	2b30      	cmp	r3, #48	; 0x30
 8002be2:	d064      	beq.n	8002cae <HAL_TIM_ConfigClockSource+0x156>
 8002be4:	2b30      	cmp	r3, #48	; 0x30
 8002be6:	d86b      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002be8:	2b20      	cmp	r3, #32
 8002bea:	d060      	beq.n	8002cae <HAL_TIM_ConfigClockSource+0x156>
 8002bec:	2b20      	cmp	r3, #32
 8002bee:	d867      	bhi.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d05c      	beq.n	8002cae <HAL_TIM_ConfigClockSource+0x156>
 8002bf4:	2b10      	cmp	r3, #16
 8002bf6:	d05a      	beq.n	8002cae <HAL_TIM_ConfigClockSource+0x156>
 8002bf8:	e062      	b.n	8002cc0 <HAL_TIM_ConfigClockSource+0x168>
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	6818      	ldr	r0, [r3, #0]
 8002bfe:	683b      	ldr	r3, [r7, #0]
 8002c00:	6899      	ldr	r1, [r3, #8]
 8002c02:	683b      	ldr	r3, [r7, #0]
 8002c04:	685a      	ldr	r2, [r3, #4]
 8002c06:	683b      	ldr	r3, [r7, #0]
 8002c08:	68db      	ldr	r3, [r3, #12]
 8002c0a:	f000 faee 	bl	80031ea <TIM_ETR_SetConfig>
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	689b      	ldr	r3, [r3, #8]
 8002c14:	60fb      	str	r3, [r7, #12]
 8002c16:	68fb      	ldr	r3, [r7, #12]
 8002c18:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002c1c:	60fb      	str	r3, [r7, #12]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	681b      	ldr	r3, [r3, #0]
 8002c22:	68fa      	ldr	r2, [r7, #12]
 8002c24:	609a      	str	r2, [r3, #8]
 8002c26:	e04e      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	6818      	ldr	r0, [r3, #0]
 8002c2c:	683b      	ldr	r3, [r7, #0]
 8002c2e:	6899      	ldr	r1, [r3, #8]
 8002c30:	683b      	ldr	r3, [r7, #0]
 8002c32:	685a      	ldr	r2, [r3, #4]
 8002c34:	683b      	ldr	r3, [r7, #0]
 8002c36:	68db      	ldr	r3, [r3, #12]
 8002c38:	f000 fad7 	bl	80031ea <TIM_ETR_SetConfig>
 8002c3c:	687b      	ldr	r3, [r7, #4]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	689a      	ldr	r2, [r3, #8]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002c4a:	609a      	str	r2, [r3, #8]
 8002c4c:	e03b      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	6818      	ldr	r0, [r3, #0]
 8002c52:	683b      	ldr	r3, [r7, #0]
 8002c54:	6859      	ldr	r1, [r3, #4]
 8002c56:	683b      	ldr	r3, [r7, #0]
 8002c58:	68db      	ldr	r3, [r3, #12]
 8002c5a:	461a      	mov	r2, r3
 8002c5c:	f000 fa4e 	bl	80030fc <TIM_TI1_ConfigInputStage>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	2150      	movs	r1, #80	; 0x50
 8002c66:	4618      	mov	r0, r3
 8002c68:	f000 faa5 	bl	80031b6 <TIM_ITRx_SetConfig>
 8002c6c:	e02b      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	6818      	ldr	r0, [r3, #0]
 8002c72:	683b      	ldr	r3, [r7, #0]
 8002c74:	6859      	ldr	r1, [r3, #4]
 8002c76:	683b      	ldr	r3, [r7, #0]
 8002c78:	68db      	ldr	r3, [r3, #12]
 8002c7a:	461a      	mov	r2, r3
 8002c7c:	f000 fa6c 	bl	8003158 <TIM_TI2_ConfigInputStage>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	2160      	movs	r1, #96	; 0x60
 8002c86:	4618      	mov	r0, r3
 8002c88:	f000 fa95 	bl	80031b6 <TIM_ITRx_SetConfig>
 8002c8c:	e01b      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	6818      	ldr	r0, [r3, #0]
 8002c92:	683b      	ldr	r3, [r7, #0]
 8002c94:	6859      	ldr	r1, [r3, #4]
 8002c96:	683b      	ldr	r3, [r7, #0]
 8002c98:	68db      	ldr	r3, [r3, #12]
 8002c9a:	461a      	mov	r2, r3
 8002c9c:	f000 fa2e 	bl	80030fc <TIM_TI1_ConfigInputStage>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	2140      	movs	r1, #64	; 0x40
 8002ca6:	4618      	mov	r0, r3
 8002ca8:	f000 fa85 	bl	80031b6 <TIM_ITRx_SetConfig>
 8002cac:	e00b      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	681a      	ldr	r2, [r3, #0]
 8002cb2:	683b      	ldr	r3, [r7, #0]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	4619      	mov	r1, r3
 8002cb8:	4610      	mov	r0, r2
 8002cba:	f000 fa7c 	bl	80031b6 <TIM_ITRx_SetConfig>
 8002cbe:	e002      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002cc0:	bf00      	nop
 8002cc2:	e000      	b.n	8002cc6 <HAL_TIM_ConfigClockSource+0x16e>
 8002cc4:	bf00      	nop
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	2201      	movs	r2, #1
 8002cca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002cd6:	2300      	movs	r3, #0
 8002cd8:	4618      	mov	r0, r3
 8002cda:	3710      	adds	r7, #16
 8002cdc:	46bd      	mov	sp, r7
 8002cde:	bd80      	pop	{r7, pc}

08002ce0 <HAL_TIM_OC_DelayElapsedCallback>:
 8002ce0:	b480      	push	{r7}
 8002ce2:	b083      	sub	sp, #12
 8002ce4:	af00      	add	r7, sp, #0
 8002ce6:	6078      	str	r0, [r7, #4]
 8002ce8:	bf00      	nop
 8002cea:	370c      	adds	r7, #12
 8002cec:	46bd      	mov	sp, r7
 8002cee:	bc80      	pop	{r7}
 8002cf0:	4770      	bx	lr

08002cf2 <HAL_TIM_IC_CaptureCallback>:
 8002cf2:	b480      	push	{r7}
 8002cf4:	b083      	sub	sp, #12
 8002cf6:	af00      	add	r7, sp, #0
 8002cf8:	6078      	str	r0, [r7, #4]
 8002cfa:	bf00      	nop
 8002cfc:	370c      	adds	r7, #12
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	bc80      	pop	{r7}
 8002d02:	4770      	bx	lr

08002d04 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002d04:	b480      	push	{r7}
 8002d06:	b083      	sub	sp, #12
 8002d08:	af00      	add	r7, sp, #0
 8002d0a:	6078      	str	r0, [r7, #4]
 8002d0c:	bf00      	nop
 8002d0e:	370c      	adds	r7, #12
 8002d10:	46bd      	mov	sp, r7
 8002d12:	bc80      	pop	{r7}
 8002d14:	4770      	bx	lr

08002d16 <HAL_TIM_TriggerCallback>:
 8002d16:	b480      	push	{r7}
 8002d18:	b083      	sub	sp, #12
 8002d1a:	af00      	add	r7, sp, #0
 8002d1c:	6078      	str	r0, [r7, #4]
 8002d1e:	bf00      	nop
 8002d20:	370c      	adds	r7, #12
 8002d22:	46bd      	mov	sp, r7
 8002d24:	bc80      	pop	{r7}
 8002d26:	4770      	bx	lr

08002d28 <TIM_Base_SetConfig>:
 8002d28:	b480      	push	{r7}
 8002d2a:	b085      	sub	sp, #20
 8002d2c:	af00      	add	r7, sp, #0
 8002d2e:	6078      	str	r0, [r7, #4]
 8002d30:	6039      	str	r1, [r7, #0]
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	60fb      	str	r3, [r7, #12]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	4a29      	ldr	r2, [pc, #164]	; (8002de0 <TIM_Base_SetConfig+0xb8>)
 8002d3c:	4293      	cmp	r3, r2
 8002d3e:	d00b      	beq.n	8002d58 <TIM_Base_SetConfig+0x30>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002d46:	d007      	beq.n	8002d58 <TIM_Base_SetConfig+0x30>
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	4a26      	ldr	r2, [pc, #152]	; (8002de4 <TIM_Base_SetConfig+0xbc>)
 8002d4c:	4293      	cmp	r3, r2
 8002d4e:	d003      	beq.n	8002d58 <TIM_Base_SetConfig+0x30>
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	4a25      	ldr	r2, [pc, #148]	; (8002de8 <TIM_Base_SetConfig+0xc0>)
 8002d54:	4293      	cmp	r3, r2
 8002d56:	d108      	bne.n	8002d6a <TIM_Base_SetConfig+0x42>
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002d5e:	60fb      	str	r3, [r7, #12]
 8002d60:	683b      	ldr	r3, [r7, #0]
 8002d62:	685b      	ldr	r3, [r3, #4]
 8002d64:	68fa      	ldr	r2, [r7, #12]
 8002d66:	4313      	orrs	r3, r2
 8002d68:	60fb      	str	r3, [r7, #12]
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	4a1c      	ldr	r2, [pc, #112]	; (8002de0 <TIM_Base_SetConfig+0xb8>)
 8002d6e:	4293      	cmp	r3, r2
 8002d70:	d00b      	beq.n	8002d8a <TIM_Base_SetConfig+0x62>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002d78:	d007      	beq.n	8002d8a <TIM_Base_SetConfig+0x62>
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	4a19      	ldr	r2, [pc, #100]	; (8002de4 <TIM_Base_SetConfig+0xbc>)
 8002d7e:	4293      	cmp	r3, r2
 8002d80:	d003      	beq.n	8002d8a <TIM_Base_SetConfig+0x62>
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	4a18      	ldr	r2, [pc, #96]	; (8002de8 <TIM_Base_SetConfig+0xc0>)
 8002d86:	4293      	cmp	r3, r2
 8002d88:	d108      	bne.n	8002d9c <TIM_Base_SetConfig+0x74>
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002d90:	60fb      	str	r3, [r7, #12]
 8002d92:	683b      	ldr	r3, [r7, #0]
 8002d94:	68db      	ldr	r3, [r3, #12]
 8002d96:	68fa      	ldr	r2, [r7, #12]
 8002d98:	4313      	orrs	r3, r2
 8002d9a:	60fb      	str	r3, [r7, #12]
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002da2:	683b      	ldr	r3, [r7, #0]
 8002da4:	695b      	ldr	r3, [r3, #20]
 8002da6:	4313      	orrs	r3, r2
 8002da8:	60fb      	str	r3, [r7, #12]
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	68fa      	ldr	r2, [r7, #12]
 8002dae:	601a      	str	r2, [r3, #0]
 8002db0:	683b      	ldr	r3, [r7, #0]
 8002db2:	689a      	ldr	r2, [r3, #8]
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	62da      	str	r2, [r3, #44]	; 0x2c
 8002db8:	683b      	ldr	r3, [r7, #0]
 8002dba:	681a      	ldr	r2, [r3, #0]
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	629a      	str	r2, [r3, #40]	; 0x28
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	4a07      	ldr	r2, [pc, #28]	; (8002de0 <TIM_Base_SetConfig+0xb8>)
 8002dc4:	4293      	cmp	r3, r2
 8002dc6:	d103      	bne.n	8002dd0 <TIM_Base_SetConfig+0xa8>
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	691a      	ldr	r2, [r3, #16]
 8002dcc:	687b      	ldr	r3, [r7, #4]
 8002dce:	631a      	str	r2, [r3, #48]	; 0x30
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	2201      	movs	r2, #1
 8002dd4:	615a      	str	r2, [r3, #20]
 8002dd6:	bf00      	nop
 8002dd8:	3714      	adds	r7, #20
 8002dda:	46bd      	mov	sp, r7
 8002ddc:	bc80      	pop	{r7}
 8002dde:	4770      	bx	lr
 8002de0:	40012c00 	.word	0x40012c00
 8002de4:	40000400 	.word	0x40000400
 8002de8:	40000800 	.word	0x40000800

08002dec <TIM_OC1_SetConfig>:
 8002dec:	b480      	push	{r7}
 8002dee:	b087      	sub	sp, #28
 8002df0:	af00      	add	r7, sp, #0
 8002df2:	6078      	str	r0, [r7, #4]
 8002df4:	6039      	str	r1, [r7, #0]
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	6a1b      	ldr	r3, [r3, #32]
 8002dfa:	f023 0201 	bic.w	r2, r3, #1
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	621a      	str	r2, [r3, #32]
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	6a1b      	ldr	r3, [r3, #32]
 8002e06:	617b      	str	r3, [r7, #20]
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	685b      	ldr	r3, [r3, #4]
 8002e0c:	613b      	str	r3, [r7, #16]
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	699b      	ldr	r3, [r3, #24]
 8002e12:	60fb      	str	r3, [r7, #12]
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002e1a:	60fb      	str	r3, [r7, #12]
 8002e1c:	68fb      	ldr	r3, [r7, #12]
 8002e1e:	f023 0303 	bic.w	r3, r3, #3
 8002e22:	60fb      	str	r3, [r7, #12]
 8002e24:	683b      	ldr	r3, [r7, #0]
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	68fa      	ldr	r2, [r7, #12]
 8002e2a:	4313      	orrs	r3, r2
 8002e2c:	60fb      	str	r3, [r7, #12]
 8002e2e:	697b      	ldr	r3, [r7, #20]
 8002e30:	f023 0302 	bic.w	r3, r3, #2
 8002e34:	617b      	str	r3, [r7, #20]
 8002e36:	683b      	ldr	r3, [r7, #0]
 8002e38:	689b      	ldr	r3, [r3, #8]
 8002e3a:	697a      	ldr	r2, [r7, #20]
 8002e3c:	4313      	orrs	r3, r2
 8002e3e:	617b      	str	r3, [r7, #20]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	4a1c      	ldr	r2, [pc, #112]	; (8002eb4 <TIM_OC1_SetConfig+0xc8>)
 8002e44:	4293      	cmp	r3, r2
 8002e46:	d10c      	bne.n	8002e62 <TIM_OC1_SetConfig+0x76>
 8002e48:	697b      	ldr	r3, [r7, #20]
 8002e4a:	f023 0308 	bic.w	r3, r3, #8
 8002e4e:	617b      	str	r3, [r7, #20]
 8002e50:	683b      	ldr	r3, [r7, #0]
 8002e52:	68db      	ldr	r3, [r3, #12]
 8002e54:	697a      	ldr	r2, [r7, #20]
 8002e56:	4313      	orrs	r3, r2
 8002e58:	617b      	str	r3, [r7, #20]
 8002e5a:	697b      	ldr	r3, [r7, #20]
 8002e5c:	f023 0304 	bic.w	r3, r3, #4
 8002e60:	617b      	str	r3, [r7, #20]
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	4a13      	ldr	r2, [pc, #76]	; (8002eb4 <TIM_OC1_SetConfig+0xc8>)
 8002e66:	4293      	cmp	r3, r2
 8002e68:	d111      	bne.n	8002e8e <TIM_OC1_SetConfig+0xa2>
 8002e6a:	693b      	ldr	r3, [r7, #16]
 8002e6c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002e70:	613b      	str	r3, [r7, #16]
 8002e72:	693b      	ldr	r3, [r7, #16]
 8002e74:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002e78:	613b      	str	r3, [r7, #16]
 8002e7a:	683b      	ldr	r3, [r7, #0]
 8002e7c:	695b      	ldr	r3, [r3, #20]
 8002e7e:	693a      	ldr	r2, [r7, #16]
 8002e80:	4313      	orrs	r3, r2
 8002e82:	613b      	str	r3, [r7, #16]
 8002e84:	683b      	ldr	r3, [r7, #0]
 8002e86:	699b      	ldr	r3, [r3, #24]
 8002e88:	693a      	ldr	r2, [r7, #16]
 8002e8a:	4313      	orrs	r3, r2
 8002e8c:	613b      	str	r3, [r7, #16]
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	693a      	ldr	r2, [r7, #16]
 8002e92:	605a      	str	r2, [r3, #4]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	68fa      	ldr	r2, [r7, #12]
 8002e98:	619a      	str	r2, [r3, #24]
 8002e9a:	683b      	ldr	r3, [r7, #0]
 8002e9c:	685a      	ldr	r2, [r3, #4]
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	635a      	str	r2, [r3, #52]	; 0x34
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	697a      	ldr	r2, [r7, #20]
 8002ea6:	621a      	str	r2, [r3, #32]
 8002ea8:	bf00      	nop
 8002eaa:	371c      	adds	r7, #28
 8002eac:	46bd      	mov	sp, r7
 8002eae:	bc80      	pop	{r7}
 8002eb0:	4770      	bx	lr
 8002eb2:	bf00      	nop
 8002eb4:	40012c00 	.word	0x40012c00

08002eb8 <TIM_OC2_SetConfig>:
 8002eb8:	b480      	push	{r7}
 8002eba:	b087      	sub	sp, #28
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
 8002ec0:	6039      	str	r1, [r7, #0]
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	6a1b      	ldr	r3, [r3, #32]
 8002ec6:	f023 0210 	bic.w	r2, r3, #16
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	621a      	str	r2, [r3, #32]
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	6a1b      	ldr	r3, [r3, #32]
 8002ed2:	617b      	str	r3, [r7, #20]
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	685b      	ldr	r3, [r3, #4]
 8002ed8:	613b      	str	r3, [r7, #16]
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	699b      	ldr	r3, [r3, #24]
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002ee6:	60fb      	str	r3, [r7, #12]
 8002ee8:	68fb      	ldr	r3, [r7, #12]
 8002eea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002eee:	60fb      	str	r3, [r7, #12]
 8002ef0:	683b      	ldr	r3, [r7, #0]
 8002ef2:	681b      	ldr	r3, [r3, #0]
 8002ef4:	021b      	lsls	r3, r3, #8
 8002ef6:	68fa      	ldr	r2, [r7, #12]
 8002ef8:	4313      	orrs	r3, r2
 8002efa:	60fb      	str	r3, [r7, #12]
 8002efc:	697b      	ldr	r3, [r7, #20]
 8002efe:	f023 0320 	bic.w	r3, r3, #32
 8002f02:	617b      	str	r3, [r7, #20]
 8002f04:	683b      	ldr	r3, [r7, #0]
 8002f06:	689b      	ldr	r3, [r3, #8]
 8002f08:	011b      	lsls	r3, r3, #4
 8002f0a:	697a      	ldr	r2, [r7, #20]
 8002f0c:	4313      	orrs	r3, r2
 8002f0e:	617b      	str	r3, [r7, #20]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	4a1d      	ldr	r2, [pc, #116]	; (8002f88 <TIM_OC2_SetConfig+0xd0>)
 8002f14:	4293      	cmp	r3, r2
 8002f16:	d10d      	bne.n	8002f34 <TIM_OC2_SetConfig+0x7c>
 8002f18:	697b      	ldr	r3, [r7, #20]
 8002f1a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002f1e:	617b      	str	r3, [r7, #20]
 8002f20:	683b      	ldr	r3, [r7, #0]
 8002f22:	68db      	ldr	r3, [r3, #12]
 8002f24:	011b      	lsls	r3, r3, #4
 8002f26:	697a      	ldr	r2, [r7, #20]
 8002f28:	4313      	orrs	r3, r2
 8002f2a:	617b      	str	r3, [r7, #20]
 8002f2c:	697b      	ldr	r3, [r7, #20]
 8002f2e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002f32:	617b      	str	r3, [r7, #20]
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	4a14      	ldr	r2, [pc, #80]	; (8002f88 <TIM_OC2_SetConfig+0xd0>)
 8002f38:	4293      	cmp	r3, r2
 8002f3a:	d113      	bne.n	8002f64 <TIM_OC2_SetConfig+0xac>
 8002f3c:	693b      	ldr	r3, [r7, #16]
 8002f3e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8002f42:	613b      	str	r3, [r7, #16]
 8002f44:	693b      	ldr	r3, [r7, #16]
 8002f46:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002f4a:	613b      	str	r3, [r7, #16]
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	695b      	ldr	r3, [r3, #20]
 8002f50:	009b      	lsls	r3, r3, #2
 8002f52:	693a      	ldr	r2, [r7, #16]
 8002f54:	4313      	orrs	r3, r2
 8002f56:	613b      	str	r3, [r7, #16]
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	699b      	ldr	r3, [r3, #24]
 8002f5c:	009b      	lsls	r3, r3, #2
 8002f5e:	693a      	ldr	r2, [r7, #16]
 8002f60:	4313      	orrs	r3, r2
 8002f62:	613b      	str	r3, [r7, #16]
 8002f64:	687b      	ldr	r3, [r7, #4]
 8002f66:	693a      	ldr	r2, [r7, #16]
 8002f68:	605a      	str	r2, [r3, #4]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	68fa      	ldr	r2, [r7, #12]
 8002f6e:	619a      	str	r2, [r3, #24]
 8002f70:	683b      	ldr	r3, [r7, #0]
 8002f72:	685a      	ldr	r2, [r3, #4]
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	639a      	str	r2, [r3, #56]	; 0x38
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	697a      	ldr	r2, [r7, #20]
 8002f7c:	621a      	str	r2, [r3, #32]
 8002f7e:	bf00      	nop
 8002f80:	371c      	adds	r7, #28
 8002f82:	46bd      	mov	sp, r7
 8002f84:	bc80      	pop	{r7}
 8002f86:	4770      	bx	lr
 8002f88:	40012c00 	.word	0x40012c00

08002f8c <TIM_OC3_SetConfig>:
 8002f8c:	b480      	push	{r7}
 8002f8e:	b087      	sub	sp, #28
 8002f90:	af00      	add	r7, sp, #0
 8002f92:	6078      	str	r0, [r7, #4]
 8002f94:	6039      	str	r1, [r7, #0]
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	6a1b      	ldr	r3, [r3, #32]
 8002f9a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	621a      	str	r2, [r3, #32]
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	6a1b      	ldr	r3, [r3, #32]
 8002fa6:	617b      	str	r3, [r7, #20]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	685b      	ldr	r3, [r3, #4]
 8002fac:	613b      	str	r3, [r7, #16]
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	69db      	ldr	r3, [r3, #28]
 8002fb2:	60fb      	str	r3, [r7, #12]
 8002fb4:	68fb      	ldr	r3, [r7, #12]
 8002fb6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002fba:	60fb      	str	r3, [r7, #12]
 8002fbc:	68fb      	ldr	r3, [r7, #12]
 8002fbe:	f023 0303 	bic.w	r3, r3, #3
 8002fc2:	60fb      	str	r3, [r7, #12]
 8002fc4:	683b      	ldr	r3, [r7, #0]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	68fa      	ldr	r2, [r7, #12]
 8002fca:	4313      	orrs	r3, r2
 8002fcc:	60fb      	str	r3, [r7, #12]
 8002fce:	697b      	ldr	r3, [r7, #20]
 8002fd0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002fd4:	617b      	str	r3, [r7, #20]
 8002fd6:	683b      	ldr	r3, [r7, #0]
 8002fd8:	689b      	ldr	r3, [r3, #8]
 8002fda:	021b      	lsls	r3, r3, #8
 8002fdc:	697a      	ldr	r2, [r7, #20]
 8002fde:	4313      	orrs	r3, r2
 8002fe0:	617b      	str	r3, [r7, #20]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	4a1d      	ldr	r2, [pc, #116]	; (800305c <TIM_OC3_SetConfig+0xd0>)
 8002fe6:	4293      	cmp	r3, r2
 8002fe8:	d10d      	bne.n	8003006 <TIM_OC3_SetConfig+0x7a>
 8002fea:	697b      	ldr	r3, [r7, #20]
 8002fec:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002ff0:	617b      	str	r3, [r7, #20]
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	68db      	ldr	r3, [r3, #12]
 8002ff6:	021b      	lsls	r3, r3, #8
 8002ff8:	697a      	ldr	r2, [r7, #20]
 8002ffa:	4313      	orrs	r3, r2
 8002ffc:	617b      	str	r3, [r7, #20]
 8002ffe:	697b      	ldr	r3, [r7, #20]
 8003000:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003004:	617b      	str	r3, [r7, #20]
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	4a14      	ldr	r2, [pc, #80]	; (800305c <TIM_OC3_SetConfig+0xd0>)
 800300a:	4293      	cmp	r3, r2
 800300c:	d113      	bne.n	8003036 <TIM_OC3_SetConfig+0xaa>
 800300e:	693b      	ldr	r3, [r7, #16]
 8003010:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003014:	613b      	str	r3, [r7, #16]
 8003016:	693b      	ldr	r3, [r7, #16]
 8003018:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800301c:	613b      	str	r3, [r7, #16]
 800301e:	683b      	ldr	r3, [r7, #0]
 8003020:	695b      	ldr	r3, [r3, #20]
 8003022:	011b      	lsls	r3, r3, #4
 8003024:	693a      	ldr	r2, [r7, #16]
 8003026:	4313      	orrs	r3, r2
 8003028:	613b      	str	r3, [r7, #16]
 800302a:	683b      	ldr	r3, [r7, #0]
 800302c:	699b      	ldr	r3, [r3, #24]
 800302e:	011b      	lsls	r3, r3, #4
 8003030:	693a      	ldr	r2, [r7, #16]
 8003032:	4313      	orrs	r3, r2
 8003034:	613b      	str	r3, [r7, #16]
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	693a      	ldr	r2, [r7, #16]
 800303a:	605a      	str	r2, [r3, #4]
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	68fa      	ldr	r2, [r7, #12]
 8003040:	61da      	str	r2, [r3, #28]
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	685a      	ldr	r2, [r3, #4]
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	63da      	str	r2, [r3, #60]	; 0x3c
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	697a      	ldr	r2, [r7, #20]
 800304e:	621a      	str	r2, [r3, #32]
 8003050:	bf00      	nop
 8003052:	371c      	adds	r7, #28
 8003054:	46bd      	mov	sp, r7
 8003056:	bc80      	pop	{r7}
 8003058:	4770      	bx	lr
 800305a:	bf00      	nop
 800305c:	40012c00 	.word	0x40012c00

08003060 <TIM_OC4_SetConfig>:
 8003060:	b480      	push	{r7}
 8003062:	b087      	sub	sp, #28
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
 8003068:	6039      	str	r1, [r7, #0]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	6a1b      	ldr	r3, [r3, #32]
 800306e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	621a      	str	r2, [r3, #32]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	6a1b      	ldr	r3, [r3, #32]
 800307a:	613b      	str	r3, [r7, #16]
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	685b      	ldr	r3, [r3, #4]
 8003080:	617b      	str	r3, [r7, #20]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	69db      	ldr	r3, [r3, #28]
 8003086:	60fb      	str	r3, [r7, #12]
 8003088:	68fb      	ldr	r3, [r7, #12]
 800308a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800308e:	60fb      	str	r3, [r7, #12]
 8003090:	68fb      	ldr	r3, [r7, #12]
 8003092:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003096:	60fb      	str	r3, [r7, #12]
 8003098:	683b      	ldr	r3, [r7, #0]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	021b      	lsls	r3, r3, #8
 800309e:	68fa      	ldr	r2, [r7, #12]
 80030a0:	4313      	orrs	r3, r2
 80030a2:	60fb      	str	r3, [r7, #12]
 80030a4:	693b      	ldr	r3, [r7, #16]
 80030a6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80030aa:	613b      	str	r3, [r7, #16]
 80030ac:	683b      	ldr	r3, [r7, #0]
 80030ae:	689b      	ldr	r3, [r3, #8]
 80030b0:	031b      	lsls	r3, r3, #12
 80030b2:	693a      	ldr	r2, [r7, #16]
 80030b4:	4313      	orrs	r3, r2
 80030b6:	613b      	str	r3, [r7, #16]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	4a0f      	ldr	r2, [pc, #60]	; (80030f8 <TIM_OC4_SetConfig+0x98>)
 80030bc:	4293      	cmp	r3, r2
 80030be:	d109      	bne.n	80030d4 <TIM_OC4_SetConfig+0x74>
 80030c0:	697b      	ldr	r3, [r7, #20]
 80030c2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80030c6:	617b      	str	r3, [r7, #20]
 80030c8:	683b      	ldr	r3, [r7, #0]
 80030ca:	695b      	ldr	r3, [r3, #20]
 80030cc:	019b      	lsls	r3, r3, #6
 80030ce:	697a      	ldr	r2, [r7, #20]
 80030d0:	4313      	orrs	r3, r2
 80030d2:	617b      	str	r3, [r7, #20]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	697a      	ldr	r2, [r7, #20]
 80030d8:	605a      	str	r2, [r3, #4]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	68fa      	ldr	r2, [r7, #12]
 80030de:	61da      	str	r2, [r3, #28]
 80030e0:	683b      	ldr	r3, [r7, #0]
 80030e2:	685a      	ldr	r2, [r3, #4]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	641a      	str	r2, [r3, #64]	; 0x40
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	693a      	ldr	r2, [r7, #16]
 80030ec:	621a      	str	r2, [r3, #32]
 80030ee:	bf00      	nop
 80030f0:	371c      	adds	r7, #28
 80030f2:	46bd      	mov	sp, r7
 80030f4:	bc80      	pop	{r7}
 80030f6:	4770      	bx	lr
 80030f8:	40012c00 	.word	0x40012c00

080030fc <TIM_TI1_ConfigInputStage>:
 80030fc:	b480      	push	{r7}
 80030fe:	b087      	sub	sp, #28
 8003100:	af00      	add	r7, sp, #0
 8003102:	60f8      	str	r0, [r7, #12]
 8003104:	60b9      	str	r1, [r7, #8]
 8003106:	607a      	str	r2, [r7, #4]
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	6a1b      	ldr	r3, [r3, #32]
 800310c:	617b      	str	r3, [r7, #20]
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	6a1b      	ldr	r3, [r3, #32]
 8003112:	f023 0201 	bic.w	r2, r3, #1
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	621a      	str	r2, [r3, #32]
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	699b      	ldr	r3, [r3, #24]
 800311e:	613b      	str	r3, [r7, #16]
 8003120:	693b      	ldr	r3, [r7, #16]
 8003122:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003126:	613b      	str	r3, [r7, #16]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	011b      	lsls	r3, r3, #4
 800312c:	693a      	ldr	r2, [r7, #16]
 800312e:	4313      	orrs	r3, r2
 8003130:	613b      	str	r3, [r7, #16]
 8003132:	697b      	ldr	r3, [r7, #20]
 8003134:	f023 030a 	bic.w	r3, r3, #10
 8003138:	617b      	str	r3, [r7, #20]
 800313a:	697a      	ldr	r2, [r7, #20]
 800313c:	68bb      	ldr	r3, [r7, #8]
 800313e:	4313      	orrs	r3, r2
 8003140:	617b      	str	r3, [r7, #20]
 8003142:	68fb      	ldr	r3, [r7, #12]
 8003144:	693a      	ldr	r2, [r7, #16]
 8003146:	619a      	str	r2, [r3, #24]
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	697a      	ldr	r2, [r7, #20]
 800314c:	621a      	str	r2, [r3, #32]
 800314e:	bf00      	nop
 8003150:	371c      	adds	r7, #28
 8003152:	46bd      	mov	sp, r7
 8003154:	bc80      	pop	{r7}
 8003156:	4770      	bx	lr

08003158 <TIM_TI2_ConfigInputStage>:
 8003158:	b480      	push	{r7}
 800315a:	b087      	sub	sp, #28
 800315c:	af00      	add	r7, sp, #0
 800315e:	60f8      	str	r0, [r7, #12]
 8003160:	60b9      	str	r1, [r7, #8]
 8003162:	607a      	str	r2, [r7, #4]
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	6a1b      	ldr	r3, [r3, #32]
 8003168:	f023 0210 	bic.w	r2, r3, #16
 800316c:	68fb      	ldr	r3, [r7, #12]
 800316e:	621a      	str	r2, [r3, #32]
 8003170:	68fb      	ldr	r3, [r7, #12]
 8003172:	699b      	ldr	r3, [r3, #24]
 8003174:	617b      	str	r3, [r7, #20]
 8003176:	68fb      	ldr	r3, [r7, #12]
 8003178:	6a1b      	ldr	r3, [r3, #32]
 800317a:	613b      	str	r3, [r7, #16]
 800317c:	697b      	ldr	r3, [r7, #20]
 800317e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003182:	617b      	str	r3, [r7, #20]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	031b      	lsls	r3, r3, #12
 8003188:	697a      	ldr	r2, [r7, #20]
 800318a:	4313      	orrs	r3, r2
 800318c:	617b      	str	r3, [r7, #20]
 800318e:	693b      	ldr	r3, [r7, #16]
 8003190:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003194:	613b      	str	r3, [r7, #16]
 8003196:	68bb      	ldr	r3, [r7, #8]
 8003198:	011b      	lsls	r3, r3, #4
 800319a:	693a      	ldr	r2, [r7, #16]
 800319c:	4313      	orrs	r3, r2
 800319e:	613b      	str	r3, [r7, #16]
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	697a      	ldr	r2, [r7, #20]
 80031a4:	619a      	str	r2, [r3, #24]
 80031a6:	68fb      	ldr	r3, [r7, #12]
 80031a8:	693a      	ldr	r2, [r7, #16]
 80031aa:	621a      	str	r2, [r3, #32]
 80031ac:	bf00      	nop
 80031ae:	371c      	adds	r7, #28
 80031b0:	46bd      	mov	sp, r7
 80031b2:	bc80      	pop	{r7}
 80031b4:	4770      	bx	lr

080031b6 <TIM_ITRx_SetConfig>:
 80031b6:	b480      	push	{r7}
 80031b8:	b085      	sub	sp, #20
 80031ba:	af00      	add	r7, sp, #0
 80031bc:	6078      	str	r0, [r7, #4]
 80031be:	6039      	str	r1, [r7, #0]
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	689b      	ldr	r3, [r3, #8]
 80031c4:	60fb      	str	r3, [r7, #12]
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80031cc:	60fb      	str	r3, [r7, #12]
 80031ce:	683a      	ldr	r2, [r7, #0]
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	4313      	orrs	r3, r2
 80031d4:	f043 0307 	orr.w	r3, r3, #7
 80031d8:	60fb      	str	r3, [r7, #12]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	68fa      	ldr	r2, [r7, #12]
 80031de:	609a      	str	r2, [r3, #8]
 80031e0:	bf00      	nop
 80031e2:	3714      	adds	r7, #20
 80031e4:	46bd      	mov	sp, r7
 80031e6:	bc80      	pop	{r7}
 80031e8:	4770      	bx	lr

080031ea <TIM_ETR_SetConfig>:
 80031ea:	b480      	push	{r7}
 80031ec:	b087      	sub	sp, #28
 80031ee:	af00      	add	r7, sp, #0
 80031f0:	60f8      	str	r0, [r7, #12]
 80031f2:	60b9      	str	r1, [r7, #8]
 80031f4:	607a      	str	r2, [r7, #4]
 80031f6:	603b      	str	r3, [r7, #0]
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	689b      	ldr	r3, [r3, #8]
 80031fc:	617b      	str	r3, [r7, #20]
 80031fe:	697b      	ldr	r3, [r7, #20]
 8003200:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003204:	617b      	str	r3, [r7, #20]
 8003206:	683b      	ldr	r3, [r7, #0]
 8003208:	021a      	lsls	r2, r3, #8
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	431a      	orrs	r2, r3
 800320e:	68bb      	ldr	r3, [r7, #8]
 8003210:	4313      	orrs	r3, r2
 8003212:	697a      	ldr	r2, [r7, #20]
 8003214:	4313      	orrs	r3, r2
 8003216:	617b      	str	r3, [r7, #20]
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	697a      	ldr	r2, [r7, #20]
 800321c:	609a      	str	r2, [r3, #8]
 800321e:	bf00      	nop
 8003220:	371c      	adds	r7, #28
 8003222:	46bd      	mov	sp, r7
 8003224:	bc80      	pop	{r7}
 8003226:	4770      	bx	lr

08003228 <TIM_CCxChannelCmd>:
 8003228:	b480      	push	{r7}
 800322a:	b087      	sub	sp, #28
 800322c:	af00      	add	r7, sp, #0
 800322e:	60f8      	str	r0, [r7, #12]
 8003230:	60b9      	str	r1, [r7, #8]
 8003232:	607a      	str	r2, [r7, #4]
 8003234:	68bb      	ldr	r3, [r7, #8]
 8003236:	f003 031f 	and.w	r3, r3, #31
 800323a:	2201      	movs	r2, #1
 800323c:	fa02 f303 	lsl.w	r3, r2, r3
 8003240:	617b      	str	r3, [r7, #20]
 8003242:	68fb      	ldr	r3, [r7, #12]
 8003244:	6a1a      	ldr	r2, [r3, #32]
 8003246:	697b      	ldr	r3, [r7, #20]
 8003248:	43db      	mvns	r3, r3
 800324a:	401a      	ands	r2, r3
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	621a      	str	r2, [r3, #32]
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	6a1a      	ldr	r2, [r3, #32]
 8003254:	68bb      	ldr	r3, [r7, #8]
 8003256:	f003 031f 	and.w	r3, r3, #31
 800325a:	6879      	ldr	r1, [r7, #4]
 800325c:	fa01 f303 	lsl.w	r3, r1, r3
 8003260:	431a      	orrs	r2, r3
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	621a      	str	r2, [r3, #32]
 8003266:	bf00      	nop
 8003268:	371c      	adds	r7, #28
 800326a:	46bd      	mov	sp, r7
 800326c:	bc80      	pop	{r7}
 800326e:	4770      	bx	lr

08003270 <HAL_TIMEx_MasterConfigSynchronization>:
 8003270:	b480      	push	{r7}
 8003272:	b085      	sub	sp, #20
 8003274:	af00      	add	r7, sp, #0
 8003276:	6078      	str	r0, [r7, #4]
 8003278:	6039      	str	r1, [r7, #0]
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003280:	2b01      	cmp	r3, #1
 8003282:	d101      	bne.n	8003288 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003284:	2302      	movs	r3, #2
 8003286:	e046      	b.n	8003316 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	2201      	movs	r2, #1
 800328c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	2202      	movs	r2, #2
 8003294:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	685b      	ldr	r3, [r3, #4]
 800329e:	60fb      	str	r3, [r7, #12]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	689b      	ldr	r3, [r3, #8]
 80032a6:	60bb      	str	r3, [r7, #8]
 80032a8:	68fb      	ldr	r3, [r7, #12]
 80032aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032ae:	60fb      	str	r3, [r7, #12]
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	68fa      	ldr	r2, [r7, #12]
 80032b6:	4313      	orrs	r3, r2
 80032b8:	60fb      	str	r3, [r7, #12]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	68fa      	ldr	r2, [r7, #12]
 80032c0:	605a      	str	r2, [r3, #4]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	4a16      	ldr	r2, [pc, #88]	; (8003320 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80032c8:	4293      	cmp	r3, r2
 80032ca:	d00e      	beq.n	80032ea <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032d4:	d009      	beq.n	80032ea <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	4a12      	ldr	r2, [pc, #72]	; (8003324 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80032dc:	4293      	cmp	r3, r2
 80032de:	d004      	beq.n	80032ea <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	681b      	ldr	r3, [r3, #0]
 80032e4:	4a10      	ldr	r2, [pc, #64]	; (8003328 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80032e6:	4293      	cmp	r3, r2
 80032e8:	d10c      	bne.n	8003304 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80032ea:	68bb      	ldr	r3, [r7, #8]
 80032ec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80032f0:	60bb      	str	r3, [r7, #8]
 80032f2:	683b      	ldr	r3, [r7, #0]
 80032f4:	685b      	ldr	r3, [r3, #4]
 80032f6:	68ba      	ldr	r2, [r7, #8]
 80032f8:	4313      	orrs	r3, r2
 80032fa:	60bb      	str	r3, [r7, #8]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	68ba      	ldr	r2, [r7, #8]
 8003302:	609a      	str	r2, [r3, #8]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	2201      	movs	r2, #1
 8003308:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	2200      	movs	r2, #0
 8003310:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003314:	2300      	movs	r3, #0
 8003316:	4618      	mov	r0, r3
 8003318:	3714      	adds	r7, #20
 800331a:	46bd      	mov	sp, r7
 800331c:	bc80      	pop	{r7}
 800331e:	4770      	bx	lr
 8003320:	40012c00 	.word	0x40012c00
 8003324:	40000400 	.word	0x40000400
 8003328:	40000800 	.word	0x40000800

0800332c <HAL_TIMEx_CommutCallback>:
 800332c:	b480      	push	{r7}
 800332e:	b083      	sub	sp, #12
 8003330:	af00      	add	r7, sp, #0
 8003332:	6078      	str	r0, [r7, #4]
 8003334:	bf00      	nop
 8003336:	370c      	adds	r7, #12
 8003338:	46bd      	mov	sp, r7
 800333a:	bc80      	pop	{r7}
 800333c:	4770      	bx	lr

0800333e <HAL_TIMEx_BreakCallback>:
 800333e:	b480      	push	{r7}
 8003340:	b083      	sub	sp, #12
 8003342:	af00      	add	r7, sp, #0
 8003344:	6078      	str	r0, [r7, #4]
 8003346:	bf00      	nop
 8003348:	370c      	adds	r7, #12
 800334a:	46bd      	mov	sp, r7
 800334c:	bc80      	pop	{r7}
 800334e:	4770      	bx	lr

08003350 <HAL_UART_Init>:
 8003350:	b580      	push	{r7, lr}
 8003352:	b082      	sub	sp, #8
 8003354:	af00      	add	r7, sp, #0
 8003356:	6078      	str	r0, [r7, #4]
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	2b00      	cmp	r3, #0
 800335c:	d101      	bne.n	8003362 <HAL_UART_Init+0x12>
 800335e:	2301      	movs	r3, #1
 8003360:	e03f      	b.n	80033e2 <HAL_UART_Init+0x92>
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003368:	b2db      	uxtb	r3, r3
 800336a:	2b00      	cmp	r3, #0
 800336c:	d106      	bne.n	800337c <HAL_UART_Init+0x2c>
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	2200      	movs	r2, #0
 8003372:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003376:	6878      	ldr	r0, [r7, #4]
 8003378:	f7fd fe78 	bl	800106c <HAL_UART_MspInit>
 800337c:	687b      	ldr	r3, [r7, #4]
 800337e:	2224      	movs	r2, #36	; 0x24
 8003380:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	68da      	ldr	r2, [r3, #12]
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003392:	60da      	str	r2, [r3, #12]
 8003394:	6878      	ldr	r0, [r7, #4]
 8003396:	f000 fc25 	bl	8003be4 <UART_SetConfig>
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	691a      	ldr	r2, [r3, #16]
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80033a8:	611a      	str	r2, [r3, #16]
 80033aa:	687b      	ldr	r3, [r7, #4]
 80033ac:	681b      	ldr	r3, [r3, #0]
 80033ae:	695a      	ldr	r2, [r3, #20]
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80033b8:	615a      	str	r2, [r3, #20]
 80033ba:	687b      	ldr	r3, [r7, #4]
 80033bc:	681b      	ldr	r3, [r3, #0]
 80033be:	68da      	ldr	r2, [r3, #12]
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80033c8:	60da      	str	r2, [r3, #12]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	2200      	movs	r2, #0
 80033ce:	641a      	str	r2, [r3, #64]	; 0x40
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	2220      	movs	r2, #32
 80033d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	2220      	movs	r2, #32
 80033dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80033e0:	2300      	movs	r3, #0
 80033e2:	4618      	mov	r0, r3
 80033e4:	3708      	adds	r7, #8
 80033e6:	46bd      	mov	sp, r7
 80033e8:	bd80      	pop	{r7, pc}

080033ea <HAL_UART_Transmit>:
 80033ea:	b580      	push	{r7, lr}
 80033ec:	b08a      	sub	sp, #40	; 0x28
 80033ee:	af02      	add	r7, sp, #8
 80033f0:	60f8      	str	r0, [r7, #12]
 80033f2:	60b9      	str	r1, [r7, #8]
 80033f4:	603b      	str	r3, [r7, #0]
 80033f6:	4613      	mov	r3, r2
 80033f8:	80fb      	strh	r3, [r7, #6]
 80033fa:	2300      	movs	r3, #0
 80033fc:	617b      	str	r3, [r7, #20]
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003404:	b2db      	uxtb	r3, r3
 8003406:	2b20      	cmp	r3, #32
 8003408:	d17c      	bne.n	8003504 <HAL_UART_Transmit+0x11a>
 800340a:	68bb      	ldr	r3, [r7, #8]
 800340c:	2b00      	cmp	r3, #0
 800340e:	d002      	beq.n	8003416 <HAL_UART_Transmit+0x2c>
 8003410:	88fb      	ldrh	r3, [r7, #6]
 8003412:	2b00      	cmp	r3, #0
 8003414:	d101      	bne.n	800341a <HAL_UART_Transmit+0x30>
 8003416:	2301      	movs	r3, #1
 8003418:	e075      	b.n	8003506 <HAL_UART_Transmit+0x11c>
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003420:	2b01      	cmp	r3, #1
 8003422:	d101      	bne.n	8003428 <HAL_UART_Transmit+0x3e>
 8003424:	2302      	movs	r3, #2
 8003426:	e06e      	b.n	8003506 <HAL_UART_Transmit+0x11c>
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	2201      	movs	r2, #1
 800342c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	2200      	movs	r2, #0
 8003434:	641a      	str	r2, [r3, #64]	; 0x40
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	2221      	movs	r2, #33	; 0x21
 800343a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800343e:	f7fe f87b 	bl	8001538 <HAL_GetTick>
 8003442:	6178      	str	r0, [r7, #20]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	88fa      	ldrh	r2, [r7, #6]
 8003448:	849a      	strh	r2, [r3, #36]	; 0x24
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	88fa      	ldrh	r2, [r7, #6]
 800344e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	689b      	ldr	r3, [r3, #8]
 8003454:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003458:	d108      	bne.n	800346c <HAL_UART_Transmit+0x82>
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	691b      	ldr	r3, [r3, #16]
 800345e:	2b00      	cmp	r3, #0
 8003460:	d104      	bne.n	800346c <HAL_UART_Transmit+0x82>
 8003462:	2300      	movs	r3, #0
 8003464:	61fb      	str	r3, [r7, #28]
 8003466:	68bb      	ldr	r3, [r7, #8]
 8003468:	61bb      	str	r3, [r7, #24]
 800346a:	e003      	b.n	8003474 <HAL_UART_Transmit+0x8a>
 800346c:	68bb      	ldr	r3, [r7, #8]
 800346e:	61fb      	str	r3, [r7, #28]
 8003470:	2300      	movs	r3, #0
 8003472:	61bb      	str	r3, [r7, #24]
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	2200      	movs	r2, #0
 8003478:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800347c:	e02a      	b.n	80034d4 <HAL_UART_Transmit+0xea>
 800347e:	683b      	ldr	r3, [r7, #0]
 8003480:	9300      	str	r3, [sp, #0]
 8003482:	697b      	ldr	r3, [r7, #20]
 8003484:	2200      	movs	r2, #0
 8003486:	2180      	movs	r1, #128	; 0x80
 8003488:	68f8      	ldr	r0, [r7, #12]
 800348a:	f000 fa11 	bl	80038b0 <UART_WaitOnFlagUntilTimeout>
 800348e:	4603      	mov	r3, r0
 8003490:	2b00      	cmp	r3, #0
 8003492:	d001      	beq.n	8003498 <HAL_UART_Transmit+0xae>
 8003494:	2303      	movs	r3, #3
 8003496:	e036      	b.n	8003506 <HAL_UART_Transmit+0x11c>
 8003498:	69fb      	ldr	r3, [r7, #28]
 800349a:	2b00      	cmp	r3, #0
 800349c:	d10b      	bne.n	80034b6 <HAL_UART_Transmit+0xcc>
 800349e:	69bb      	ldr	r3, [r7, #24]
 80034a0:	881b      	ldrh	r3, [r3, #0]
 80034a2:	461a      	mov	r2, r3
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	681b      	ldr	r3, [r3, #0]
 80034a8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80034ac:	605a      	str	r2, [r3, #4]
 80034ae:	69bb      	ldr	r3, [r7, #24]
 80034b0:	3302      	adds	r3, #2
 80034b2:	61bb      	str	r3, [r7, #24]
 80034b4:	e007      	b.n	80034c6 <HAL_UART_Transmit+0xdc>
 80034b6:	69fb      	ldr	r3, [r7, #28]
 80034b8:	781a      	ldrb	r2, [r3, #0]
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	605a      	str	r2, [r3, #4]
 80034c0:	69fb      	ldr	r3, [r7, #28]
 80034c2:	3301      	adds	r3, #1
 80034c4:	61fb      	str	r3, [r7, #28]
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80034ca:	b29b      	uxth	r3, r3
 80034cc:	3b01      	subs	r3, #1
 80034ce:	b29a      	uxth	r2, r3
 80034d0:	68fb      	ldr	r3, [r7, #12]
 80034d2:	84da      	strh	r2, [r3, #38]	; 0x26
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80034d8:	b29b      	uxth	r3, r3
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d1cf      	bne.n	800347e <HAL_UART_Transmit+0x94>
 80034de:	683b      	ldr	r3, [r7, #0]
 80034e0:	9300      	str	r3, [sp, #0]
 80034e2:	697b      	ldr	r3, [r7, #20]
 80034e4:	2200      	movs	r2, #0
 80034e6:	2140      	movs	r1, #64	; 0x40
 80034e8:	68f8      	ldr	r0, [r7, #12]
 80034ea:	f000 f9e1 	bl	80038b0 <UART_WaitOnFlagUntilTimeout>
 80034ee:	4603      	mov	r3, r0
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	d001      	beq.n	80034f8 <HAL_UART_Transmit+0x10e>
 80034f4:	2303      	movs	r3, #3
 80034f6:	e006      	b.n	8003506 <HAL_UART_Transmit+0x11c>
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	2220      	movs	r2, #32
 80034fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003500:	2300      	movs	r3, #0
 8003502:	e000      	b.n	8003506 <HAL_UART_Transmit+0x11c>
 8003504:	2302      	movs	r3, #2
 8003506:	4618      	mov	r0, r3
 8003508:	3720      	adds	r7, #32
 800350a:	46bd      	mov	sp, r7
 800350c:	bd80      	pop	{r7, pc}
	...

08003510 <HAL_UART_IRQHandler>:
 8003510:	b580      	push	{r7, lr}
 8003512:	b08a      	sub	sp, #40	; 0x28
 8003514:	af00      	add	r7, sp, #0
 8003516:	6078      	str	r0, [r7, #4]
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	627b      	str	r3, [r7, #36]	; 0x24
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	68db      	ldr	r3, [r3, #12]
 8003526:	623b      	str	r3, [r7, #32]
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	695b      	ldr	r3, [r3, #20]
 800352e:	61fb      	str	r3, [r7, #28]
 8003530:	2300      	movs	r3, #0
 8003532:	61bb      	str	r3, [r7, #24]
 8003534:	2300      	movs	r3, #0
 8003536:	617b      	str	r3, [r7, #20]
 8003538:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800353a:	f003 030f 	and.w	r3, r3, #15
 800353e:	61bb      	str	r3, [r7, #24]
 8003540:	69bb      	ldr	r3, [r7, #24]
 8003542:	2b00      	cmp	r3, #0
 8003544:	d10d      	bne.n	8003562 <HAL_UART_IRQHandler+0x52>
 8003546:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003548:	f003 0320 	and.w	r3, r3, #32
 800354c:	2b00      	cmp	r3, #0
 800354e:	d008      	beq.n	8003562 <HAL_UART_IRQHandler+0x52>
 8003550:	6a3b      	ldr	r3, [r7, #32]
 8003552:	f003 0320 	and.w	r3, r3, #32
 8003556:	2b00      	cmp	r3, #0
 8003558:	d003      	beq.n	8003562 <HAL_UART_IRQHandler+0x52>
 800355a:	6878      	ldr	r0, [r7, #4]
 800355c:	f000 fa99 	bl	8003a92 <UART_Receive_IT>
 8003560:	e17b      	b.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003562:	69bb      	ldr	r3, [r7, #24]
 8003564:	2b00      	cmp	r3, #0
 8003566:	f000 80b1 	beq.w	80036cc <HAL_UART_IRQHandler+0x1bc>
 800356a:	69fb      	ldr	r3, [r7, #28]
 800356c:	f003 0301 	and.w	r3, r3, #1
 8003570:	2b00      	cmp	r3, #0
 8003572:	d105      	bne.n	8003580 <HAL_UART_IRQHandler+0x70>
 8003574:	6a3b      	ldr	r3, [r7, #32]
 8003576:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800357a:	2b00      	cmp	r3, #0
 800357c:	f000 80a6 	beq.w	80036cc <HAL_UART_IRQHandler+0x1bc>
 8003580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003582:	f003 0301 	and.w	r3, r3, #1
 8003586:	2b00      	cmp	r3, #0
 8003588:	d00a      	beq.n	80035a0 <HAL_UART_IRQHandler+0x90>
 800358a:	6a3b      	ldr	r3, [r7, #32]
 800358c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003590:	2b00      	cmp	r3, #0
 8003592:	d005      	beq.n	80035a0 <HAL_UART_IRQHandler+0x90>
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003598:	f043 0201 	orr.w	r2, r3, #1
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	641a      	str	r2, [r3, #64]	; 0x40
 80035a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035a2:	f003 0304 	and.w	r3, r3, #4
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	d00a      	beq.n	80035c0 <HAL_UART_IRQHandler+0xb0>
 80035aa:	69fb      	ldr	r3, [r7, #28]
 80035ac:	f003 0301 	and.w	r3, r3, #1
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d005      	beq.n	80035c0 <HAL_UART_IRQHandler+0xb0>
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035b8:	f043 0202 	orr.w	r2, r3, #2
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	641a      	str	r2, [r3, #64]	; 0x40
 80035c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035c2:	f003 0302 	and.w	r3, r3, #2
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d00a      	beq.n	80035e0 <HAL_UART_IRQHandler+0xd0>
 80035ca:	69fb      	ldr	r3, [r7, #28]
 80035cc:	f003 0301 	and.w	r3, r3, #1
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d005      	beq.n	80035e0 <HAL_UART_IRQHandler+0xd0>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035d8:	f043 0204 	orr.w	r2, r3, #4
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	641a      	str	r2, [r3, #64]	; 0x40
 80035e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80035e2:	f003 0308 	and.w	r3, r3, #8
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d00f      	beq.n	800360a <HAL_UART_IRQHandler+0xfa>
 80035ea:	6a3b      	ldr	r3, [r7, #32]
 80035ec:	f003 0320 	and.w	r3, r3, #32
 80035f0:	2b00      	cmp	r3, #0
 80035f2:	d104      	bne.n	80035fe <HAL_UART_IRQHandler+0xee>
 80035f4:	69fb      	ldr	r3, [r7, #28]
 80035f6:	f003 0301 	and.w	r3, r3, #1
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d005      	beq.n	800360a <HAL_UART_IRQHandler+0xfa>
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003602:	f043 0208 	orr.w	r2, r3, #8
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	641a      	str	r2, [r3, #64]	; 0x40
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800360e:	2b00      	cmp	r3, #0
 8003610:	f000 811e 	beq.w	8003850 <HAL_UART_IRQHandler+0x340>
 8003614:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003616:	f003 0320 	and.w	r3, r3, #32
 800361a:	2b00      	cmp	r3, #0
 800361c:	d007      	beq.n	800362e <HAL_UART_IRQHandler+0x11e>
 800361e:	6a3b      	ldr	r3, [r7, #32]
 8003620:	f003 0320 	and.w	r3, r3, #32
 8003624:	2b00      	cmp	r3, #0
 8003626:	d002      	beq.n	800362e <HAL_UART_IRQHandler+0x11e>
 8003628:	6878      	ldr	r0, [r7, #4]
 800362a:	f000 fa32 	bl	8003a92 <UART_Receive_IT>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	695b      	ldr	r3, [r3, #20]
 8003634:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003638:	2b00      	cmp	r3, #0
 800363a:	bf14      	ite	ne
 800363c:	2301      	movne	r3, #1
 800363e:	2300      	moveq	r3, #0
 8003640:	b2db      	uxtb	r3, r3
 8003642:	617b      	str	r3, [r7, #20]
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003648:	f003 0308 	and.w	r3, r3, #8
 800364c:	2b00      	cmp	r3, #0
 800364e:	d102      	bne.n	8003656 <HAL_UART_IRQHandler+0x146>
 8003650:	697b      	ldr	r3, [r7, #20]
 8003652:	2b00      	cmp	r3, #0
 8003654:	d031      	beq.n	80036ba <HAL_UART_IRQHandler+0x1aa>
 8003656:	6878      	ldr	r0, [r7, #4]
 8003658:	f000 f974 	bl	8003944 <UART_EndRxTransfer>
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	681b      	ldr	r3, [r3, #0]
 8003660:	695b      	ldr	r3, [r3, #20]
 8003662:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003666:	2b00      	cmp	r3, #0
 8003668:	d023      	beq.n	80036b2 <HAL_UART_IRQHandler+0x1a2>
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	695a      	ldr	r2, [r3, #20]
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	681b      	ldr	r3, [r3, #0]
 8003674:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003678:	615a      	str	r2, [r3, #20]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800367e:	2b00      	cmp	r3, #0
 8003680:	d013      	beq.n	80036aa <HAL_UART_IRQHandler+0x19a>
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003686:	4a76      	ldr	r2, [pc, #472]	; (8003860 <HAL_UART_IRQHandler+0x350>)
 8003688:	635a      	str	r2, [r3, #52]	; 0x34
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800368e:	4618      	mov	r0, r3
 8003690:	f7fe f8a4 	bl	80017dc <HAL_DMA_Abort_IT>
 8003694:	4603      	mov	r3, r0
 8003696:	2b00      	cmp	r3, #0
 8003698:	d016      	beq.n	80036c8 <HAL_UART_IRQHandler+0x1b8>
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800369e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80036a0:	687a      	ldr	r2, [r7, #4]
 80036a2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80036a4:	4610      	mov	r0, r2
 80036a6:	4798      	blx	r3
 80036a8:	e00e      	b.n	80036c8 <HAL_UART_IRQHandler+0x1b8>
 80036aa:	6878      	ldr	r0, [r7, #4]
 80036ac:	f000 f8ec 	bl	8003888 <HAL_UART_ErrorCallback>
 80036b0:	e00a      	b.n	80036c8 <HAL_UART_IRQHandler+0x1b8>
 80036b2:	6878      	ldr	r0, [r7, #4]
 80036b4:	f000 f8e8 	bl	8003888 <HAL_UART_ErrorCallback>
 80036b8:	e006      	b.n	80036c8 <HAL_UART_IRQHandler+0x1b8>
 80036ba:	6878      	ldr	r0, [r7, #4]
 80036bc:	f000 f8e4 	bl	8003888 <HAL_UART_ErrorCallback>
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	2200      	movs	r2, #0
 80036c4:	641a      	str	r2, [r3, #64]	; 0x40
 80036c6:	e0c3      	b.n	8003850 <HAL_UART_IRQHandler+0x340>
 80036c8:	bf00      	nop
 80036ca:	e0c1      	b.n	8003850 <HAL_UART_IRQHandler+0x340>
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036d0:	2b01      	cmp	r3, #1
 80036d2:	f040 80a1 	bne.w	8003818 <HAL_UART_IRQHandler+0x308>
 80036d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80036d8:	f003 0310 	and.w	r3, r3, #16
 80036dc:	2b00      	cmp	r3, #0
 80036de:	f000 809b 	beq.w	8003818 <HAL_UART_IRQHandler+0x308>
 80036e2:	6a3b      	ldr	r3, [r7, #32]
 80036e4:	f003 0310 	and.w	r3, r3, #16
 80036e8:	2b00      	cmp	r3, #0
 80036ea:	f000 8095 	beq.w	8003818 <HAL_UART_IRQHandler+0x308>
 80036ee:	2300      	movs	r3, #0
 80036f0:	60fb      	str	r3, [r7, #12]
 80036f2:	687b      	ldr	r3, [r7, #4]
 80036f4:	681b      	ldr	r3, [r3, #0]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	60fb      	str	r3, [r7, #12]
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	685b      	ldr	r3, [r3, #4]
 8003700:	60fb      	str	r3, [r7, #12]
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	695b      	ldr	r3, [r3, #20]
 800370a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800370e:	2b00      	cmp	r3, #0
 8003710:	d04e      	beq.n	80037b0 <HAL_UART_IRQHandler+0x2a0>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	685b      	ldr	r3, [r3, #4]
 800371a:	823b      	strh	r3, [r7, #16]
 800371c:	8a3b      	ldrh	r3, [r7, #16]
 800371e:	2b00      	cmp	r3, #0
 8003720:	f000 8098 	beq.w	8003854 <HAL_UART_IRQHandler+0x344>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003728:	8a3a      	ldrh	r2, [r7, #16]
 800372a:	429a      	cmp	r2, r3
 800372c:	f080 8092 	bcs.w	8003854 <HAL_UART_IRQHandler+0x344>
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	8a3a      	ldrh	r2, [r7, #16]
 8003734:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800373a:	699b      	ldr	r3, [r3, #24]
 800373c:	2b20      	cmp	r3, #32
 800373e:	d02b      	beq.n	8003798 <HAL_UART_IRQHandler+0x288>
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	68da      	ldr	r2, [r3, #12]
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800374e:	60da      	str	r2, [r3, #12]
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	695a      	ldr	r2, [r3, #20]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	f022 0201 	bic.w	r2, r2, #1
 800375e:	615a      	str	r2, [r3, #20]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	681b      	ldr	r3, [r3, #0]
 8003764:	695a      	ldr	r2, [r3, #20]
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800376e:	615a      	str	r2, [r3, #20]
 8003770:	687b      	ldr	r3, [r7, #4]
 8003772:	2220      	movs	r2, #32
 8003774:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	2200      	movs	r2, #0
 800377c:	631a      	str	r2, [r3, #48]	; 0x30
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	68da      	ldr	r2, [r3, #12]
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	f022 0210 	bic.w	r2, r2, #16
 800378c:	60da      	str	r2, [r3, #12]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003792:	4618      	mov	r0, r3
 8003794:	f7fd ffe7 	bl	8001766 <HAL_DMA_Abort>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80037a0:	b29b      	uxth	r3, r3
 80037a2:	1ad3      	subs	r3, r2, r3
 80037a4:	b29b      	uxth	r3, r3
 80037a6:	4619      	mov	r1, r3
 80037a8:	6878      	ldr	r0, [r7, #4]
 80037aa:	f000 f876 	bl	800389a <HAL_UARTEx_RxEventCallback>
 80037ae:	e051      	b.n	8003854 <HAL_UART_IRQHandler+0x344>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80037b8:	b29b      	uxth	r3, r3
 80037ba:	1ad3      	subs	r3, r2, r3
 80037bc:	827b      	strh	r3, [r7, #18]
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80037c2:	b29b      	uxth	r3, r3
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d047      	beq.n	8003858 <HAL_UART_IRQHandler+0x348>
 80037c8:	8a7b      	ldrh	r3, [r7, #18]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	d044      	beq.n	8003858 <HAL_UART_IRQHandler+0x348>
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	68da      	ldr	r2, [r3, #12]
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80037dc:	60da      	str	r2, [r3, #12]
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	695a      	ldr	r2, [r3, #20]
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f022 0201 	bic.w	r2, r2, #1
 80037ec:	615a      	str	r2, [r3, #20]
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	2220      	movs	r2, #32
 80037f2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	2200      	movs	r2, #0
 80037fa:	631a      	str	r2, [r3, #48]	; 0x30
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	68da      	ldr	r2, [r3, #12]
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	f022 0210 	bic.w	r2, r2, #16
 800380a:	60da      	str	r2, [r3, #12]
 800380c:	8a7b      	ldrh	r3, [r7, #18]
 800380e:	4619      	mov	r1, r3
 8003810:	6878      	ldr	r0, [r7, #4]
 8003812:	f000 f842 	bl	800389a <HAL_UARTEx_RxEventCallback>
 8003816:	e01f      	b.n	8003858 <HAL_UART_IRQHandler+0x348>
 8003818:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800381a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800381e:	2b00      	cmp	r3, #0
 8003820:	d008      	beq.n	8003834 <HAL_UART_IRQHandler+0x324>
 8003822:	6a3b      	ldr	r3, [r7, #32]
 8003824:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003828:	2b00      	cmp	r3, #0
 800382a:	d003      	beq.n	8003834 <HAL_UART_IRQHandler+0x324>
 800382c:	6878      	ldr	r0, [r7, #4]
 800382e:	f000 f8c9 	bl	80039c4 <UART_Transmit_IT>
 8003832:	e012      	b.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003834:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003836:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800383a:	2b00      	cmp	r3, #0
 800383c:	d00d      	beq.n	800385a <HAL_UART_IRQHandler+0x34a>
 800383e:	6a3b      	ldr	r3, [r7, #32]
 8003840:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003844:	2b00      	cmp	r3, #0
 8003846:	d008      	beq.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003848:	6878      	ldr	r0, [r7, #4]
 800384a:	f000 f90a 	bl	8003a62 <UART_EndTransmit_IT>
 800384e:	e004      	b.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003850:	bf00      	nop
 8003852:	e002      	b.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003854:	bf00      	nop
 8003856:	e000      	b.n	800385a <HAL_UART_IRQHandler+0x34a>
 8003858:	bf00      	nop
 800385a:	3728      	adds	r7, #40	; 0x28
 800385c:	46bd      	mov	sp, r7
 800385e:	bd80      	pop	{r7, pc}
 8003860:	0800399d 	.word	0x0800399d

08003864 <HAL_UART_TxCpltCallback>:
 8003864:	b480      	push	{r7}
 8003866:	b083      	sub	sp, #12
 8003868:	af00      	add	r7, sp, #0
 800386a:	6078      	str	r0, [r7, #4]
 800386c:	bf00      	nop
 800386e:	370c      	adds	r7, #12
 8003870:	46bd      	mov	sp, r7
 8003872:	bc80      	pop	{r7}
 8003874:	4770      	bx	lr

08003876 <HAL_UART_RxCpltCallback>:
 8003876:	b480      	push	{r7}
 8003878:	b083      	sub	sp, #12
 800387a:	af00      	add	r7, sp, #0
 800387c:	6078      	str	r0, [r7, #4]
 800387e:	bf00      	nop
 8003880:	370c      	adds	r7, #12
 8003882:	46bd      	mov	sp, r7
 8003884:	bc80      	pop	{r7}
 8003886:	4770      	bx	lr

08003888 <HAL_UART_ErrorCallback>:
 8003888:	b480      	push	{r7}
 800388a:	b083      	sub	sp, #12
 800388c:	af00      	add	r7, sp, #0
 800388e:	6078      	str	r0, [r7, #4]
 8003890:	bf00      	nop
 8003892:	370c      	adds	r7, #12
 8003894:	46bd      	mov	sp, r7
 8003896:	bc80      	pop	{r7}
 8003898:	4770      	bx	lr

0800389a <HAL_UARTEx_RxEventCallback>:
 800389a:	b480      	push	{r7}
 800389c:	b083      	sub	sp, #12
 800389e:	af00      	add	r7, sp, #0
 80038a0:	6078      	str	r0, [r7, #4]
 80038a2:	460b      	mov	r3, r1
 80038a4:	807b      	strh	r3, [r7, #2]
 80038a6:	bf00      	nop
 80038a8:	370c      	adds	r7, #12
 80038aa:	46bd      	mov	sp, r7
 80038ac:	bc80      	pop	{r7}
 80038ae:	4770      	bx	lr

080038b0 <UART_WaitOnFlagUntilTimeout>:
 80038b0:	b580      	push	{r7, lr}
 80038b2:	b084      	sub	sp, #16
 80038b4:	af00      	add	r7, sp, #0
 80038b6:	60f8      	str	r0, [r7, #12]
 80038b8:	60b9      	str	r1, [r7, #8]
 80038ba:	603b      	str	r3, [r7, #0]
 80038bc:	4613      	mov	r3, r2
 80038be:	71fb      	strb	r3, [r7, #7]
 80038c0:	e02c      	b.n	800391c <UART_WaitOnFlagUntilTimeout+0x6c>
 80038c2:	69bb      	ldr	r3, [r7, #24]
 80038c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038c8:	d028      	beq.n	800391c <UART_WaitOnFlagUntilTimeout+0x6c>
 80038ca:	69bb      	ldr	r3, [r7, #24]
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d007      	beq.n	80038e0 <UART_WaitOnFlagUntilTimeout+0x30>
 80038d0:	f7fd fe32 	bl	8001538 <HAL_GetTick>
 80038d4:	4602      	mov	r2, r0
 80038d6:	683b      	ldr	r3, [r7, #0]
 80038d8:	1ad3      	subs	r3, r2, r3
 80038da:	69ba      	ldr	r2, [r7, #24]
 80038dc:	429a      	cmp	r2, r3
 80038de:	d21d      	bcs.n	800391c <UART_WaitOnFlagUntilTimeout+0x6c>
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	68da      	ldr	r2, [r3, #12]
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80038ee:	60da      	str	r2, [r3, #12]
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	695a      	ldr	r2, [r3, #20]
 80038f6:	68fb      	ldr	r3, [r7, #12]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	f022 0201 	bic.w	r2, r2, #1
 80038fe:	615a      	str	r2, [r3, #20]
 8003900:	68fb      	ldr	r3, [r7, #12]
 8003902:	2220      	movs	r2, #32
 8003904:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003908:	68fb      	ldr	r3, [r7, #12]
 800390a:	2220      	movs	r2, #32
 800390c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003910:	68fb      	ldr	r3, [r7, #12]
 8003912:	2200      	movs	r2, #0
 8003914:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003918:	2303      	movs	r3, #3
 800391a:	e00f      	b.n	800393c <UART_WaitOnFlagUntilTimeout+0x8c>
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	681a      	ldr	r2, [r3, #0]
 8003922:	68bb      	ldr	r3, [r7, #8]
 8003924:	4013      	ands	r3, r2
 8003926:	68ba      	ldr	r2, [r7, #8]
 8003928:	429a      	cmp	r2, r3
 800392a:	bf0c      	ite	eq
 800392c:	2301      	moveq	r3, #1
 800392e:	2300      	movne	r3, #0
 8003930:	b2db      	uxtb	r3, r3
 8003932:	461a      	mov	r2, r3
 8003934:	79fb      	ldrb	r3, [r7, #7]
 8003936:	429a      	cmp	r2, r3
 8003938:	d0c3      	beq.n	80038c2 <UART_WaitOnFlagUntilTimeout+0x12>
 800393a:	2300      	movs	r3, #0
 800393c:	4618      	mov	r0, r3
 800393e:	3710      	adds	r7, #16
 8003940:	46bd      	mov	sp, r7
 8003942:	bd80      	pop	{r7, pc}

08003944 <UART_EndRxTransfer>:
 8003944:	b480      	push	{r7}
 8003946:	b083      	sub	sp, #12
 8003948:	af00      	add	r7, sp, #0
 800394a:	6078      	str	r0, [r7, #4]
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	68da      	ldr	r2, [r3, #12]
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800395a:	60da      	str	r2, [r3, #12]
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	695a      	ldr	r2, [r3, #20]
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	f022 0201 	bic.w	r2, r2, #1
 800396a:	615a      	str	r2, [r3, #20]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003970:	2b01      	cmp	r3, #1
 8003972:	d107      	bne.n	8003984 <UART_EndRxTransfer+0x40>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	68da      	ldr	r2, [r3, #12]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f022 0210 	bic.w	r2, r2, #16
 8003982:	60da      	str	r2, [r3, #12]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	2220      	movs	r2, #32
 8003988:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	2200      	movs	r2, #0
 8003990:	631a      	str	r2, [r3, #48]	; 0x30
 8003992:	bf00      	nop
 8003994:	370c      	adds	r7, #12
 8003996:	46bd      	mov	sp, r7
 8003998:	bc80      	pop	{r7}
 800399a:	4770      	bx	lr

0800399c <UART_DMAAbortOnError>:
 800399c:	b580      	push	{r7, lr}
 800399e:	b084      	sub	sp, #16
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039a8:	60fb      	str	r3, [r7, #12]
 80039aa:	68fb      	ldr	r3, [r7, #12]
 80039ac:	2200      	movs	r2, #0
 80039ae:	85da      	strh	r2, [r3, #46]	; 0x2e
 80039b0:	68fb      	ldr	r3, [r7, #12]
 80039b2:	2200      	movs	r2, #0
 80039b4:	84da      	strh	r2, [r3, #38]	; 0x26
 80039b6:	68f8      	ldr	r0, [r7, #12]
 80039b8:	f7ff ff66 	bl	8003888 <HAL_UART_ErrorCallback>
 80039bc:	bf00      	nop
 80039be:	3710      	adds	r7, #16
 80039c0:	46bd      	mov	sp, r7
 80039c2:	bd80      	pop	{r7, pc}

080039c4 <UART_Transmit_IT>:
 80039c4:	b480      	push	{r7}
 80039c6:	b085      	sub	sp, #20
 80039c8:	af00      	add	r7, sp, #0
 80039ca:	6078      	str	r0, [r7, #4]
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80039d2:	b2db      	uxtb	r3, r3
 80039d4:	2b21      	cmp	r3, #33	; 0x21
 80039d6:	d13e      	bne.n	8003a56 <UART_Transmit_IT+0x92>
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	689b      	ldr	r3, [r3, #8]
 80039dc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80039e0:	d114      	bne.n	8003a0c <UART_Transmit_IT+0x48>
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	691b      	ldr	r3, [r3, #16]
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d110      	bne.n	8003a0c <UART_Transmit_IT+0x48>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	6a1b      	ldr	r3, [r3, #32]
 80039ee:	60fb      	str	r3, [r7, #12]
 80039f0:	68fb      	ldr	r3, [r7, #12]
 80039f2:	881b      	ldrh	r3, [r3, #0]
 80039f4:	461a      	mov	r2, r3
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	681b      	ldr	r3, [r3, #0]
 80039fa:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80039fe:	605a      	str	r2, [r3, #4]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	6a1b      	ldr	r3, [r3, #32]
 8003a04:	1c9a      	adds	r2, r3, #2
 8003a06:	687b      	ldr	r3, [r7, #4]
 8003a08:	621a      	str	r2, [r3, #32]
 8003a0a:	e008      	b.n	8003a1e <UART_Transmit_IT+0x5a>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	6a1b      	ldr	r3, [r3, #32]
 8003a10:	1c59      	adds	r1, r3, #1
 8003a12:	687a      	ldr	r2, [r7, #4]
 8003a14:	6211      	str	r1, [r2, #32]
 8003a16:	781a      	ldrb	r2, [r3, #0]
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	605a      	str	r2, [r3, #4]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003a22:	b29b      	uxth	r3, r3
 8003a24:	3b01      	subs	r3, #1
 8003a26:	b29b      	uxth	r3, r3
 8003a28:	687a      	ldr	r2, [r7, #4]
 8003a2a:	4619      	mov	r1, r3
 8003a2c:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003a2e:	2b00      	cmp	r3, #0
 8003a30:	d10f      	bne.n	8003a52 <UART_Transmit_IT+0x8e>
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	68da      	ldr	r2, [r3, #12]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003a40:	60da      	str	r2, [r3, #12]
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	681b      	ldr	r3, [r3, #0]
 8003a46:	68da      	ldr	r2, [r3, #12]
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003a50:	60da      	str	r2, [r3, #12]
 8003a52:	2300      	movs	r3, #0
 8003a54:	e000      	b.n	8003a58 <UART_Transmit_IT+0x94>
 8003a56:	2302      	movs	r3, #2
 8003a58:	4618      	mov	r0, r3
 8003a5a:	3714      	adds	r7, #20
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bc80      	pop	{r7}
 8003a60:	4770      	bx	lr

08003a62 <UART_EndTransmit_IT>:
 8003a62:	b580      	push	{r7, lr}
 8003a64:	b082      	sub	sp, #8
 8003a66:	af00      	add	r7, sp, #0
 8003a68:	6078      	str	r0, [r7, #4]
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	68da      	ldr	r2, [r3, #12]
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003a78:	60da      	str	r2, [r3, #12]
 8003a7a:	687b      	ldr	r3, [r7, #4]
 8003a7c:	2220      	movs	r2, #32
 8003a7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a82:	6878      	ldr	r0, [r7, #4]
 8003a84:	f7ff feee 	bl	8003864 <HAL_UART_TxCpltCallback>
 8003a88:	2300      	movs	r3, #0
 8003a8a:	4618      	mov	r0, r3
 8003a8c:	3708      	adds	r7, #8
 8003a8e:	46bd      	mov	sp, r7
 8003a90:	bd80      	pop	{r7, pc}

08003a92 <UART_Receive_IT>:
 8003a92:	b580      	push	{r7, lr}
 8003a94:	b086      	sub	sp, #24
 8003a96:	af00      	add	r7, sp, #0
 8003a98:	6078      	str	r0, [r7, #4]
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003aa0:	b2db      	uxtb	r3, r3
 8003aa2:	2b22      	cmp	r3, #34	; 0x22
 8003aa4:	f040 8099 	bne.w	8003bda <UART_Receive_IT+0x148>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	689b      	ldr	r3, [r3, #8]
 8003aac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003ab0:	d117      	bne.n	8003ae2 <UART_Receive_IT+0x50>
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	691b      	ldr	r3, [r3, #16]
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d113      	bne.n	8003ae2 <UART_Receive_IT+0x50>
 8003aba:	2300      	movs	r3, #0
 8003abc:	617b      	str	r3, [r7, #20]
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ac2:	613b      	str	r3, [r7, #16]
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	685b      	ldr	r3, [r3, #4]
 8003aca:	b29b      	uxth	r3, r3
 8003acc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003ad0:	b29a      	uxth	r2, r3
 8003ad2:	693b      	ldr	r3, [r7, #16]
 8003ad4:	801a      	strh	r2, [r3, #0]
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ada:	1c9a      	adds	r2, r3, #2
 8003adc:	687b      	ldr	r3, [r7, #4]
 8003ade:	629a      	str	r2, [r3, #40]	; 0x28
 8003ae0:	e026      	b.n	8003b30 <UART_Receive_IT+0x9e>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ae6:	617b      	str	r3, [r7, #20]
 8003ae8:	2300      	movs	r3, #0
 8003aea:	613b      	str	r3, [r7, #16]
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	689b      	ldr	r3, [r3, #8]
 8003af0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003af4:	d007      	beq.n	8003b06 <UART_Receive_IT+0x74>
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	689b      	ldr	r3, [r3, #8]
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d10a      	bne.n	8003b14 <UART_Receive_IT+0x82>
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	691b      	ldr	r3, [r3, #16]
 8003b02:	2b00      	cmp	r3, #0
 8003b04:	d106      	bne.n	8003b14 <UART_Receive_IT+0x82>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	685b      	ldr	r3, [r3, #4]
 8003b0c:	b2da      	uxtb	r2, r3
 8003b0e:	697b      	ldr	r3, [r7, #20]
 8003b10:	701a      	strb	r2, [r3, #0]
 8003b12:	e008      	b.n	8003b26 <UART_Receive_IT+0x94>
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	685b      	ldr	r3, [r3, #4]
 8003b1a:	b2db      	uxtb	r3, r3
 8003b1c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003b20:	b2da      	uxtb	r2, r3
 8003b22:	697b      	ldr	r3, [r7, #20]
 8003b24:	701a      	strb	r2, [r3, #0]
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b2a:	1c5a      	adds	r2, r3, #1
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	629a      	str	r2, [r3, #40]	; 0x28
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003b34:	b29b      	uxth	r3, r3
 8003b36:	3b01      	subs	r3, #1
 8003b38:	b29b      	uxth	r3, r3
 8003b3a:	687a      	ldr	r2, [r7, #4]
 8003b3c:	4619      	mov	r1, r3
 8003b3e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d148      	bne.n	8003bd6 <UART_Receive_IT+0x144>
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	68da      	ldr	r2, [r3, #12]
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	f022 0220 	bic.w	r2, r2, #32
 8003b52:	60da      	str	r2, [r3, #12]
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	68da      	ldr	r2, [r3, #12]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003b62:	60da      	str	r2, [r3, #12]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	695a      	ldr	r2, [r3, #20]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	f022 0201 	bic.w	r2, r2, #1
 8003b72:	615a      	str	r2, [r3, #20]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2220      	movs	r2, #32
 8003b78:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b80:	2b01      	cmp	r3, #1
 8003b82:	d123      	bne.n	8003bcc <UART_Receive_IT+0x13a>
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	2200      	movs	r2, #0
 8003b88:	631a      	str	r2, [r3, #48]	; 0x30
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	68da      	ldr	r2, [r3, #12]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	681b      	ldr	r3, [r3, #0]
 8003b94:	f022 0210 	bic.w	r2, r2, #16
 8003b98:	60da      	str	r2, [r3, #12]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	f003 0310 	and.w	r3, r3, #16
 8003ba4:	2b10      	cmp	r3, #16
 8003ba6:	d10a      	bne.n	8003bbe <UART_Receive_IT+0x12c>
 8003ba8:	2300      	movs	r3, #0
 8003baa:	60fb      	str	r3, [r7, #12]
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	60fb      	str	r3, [r7, #12]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	685b      	ldr	r3, [r3, #4]
 8003bba:	60fb      	str	r3, [r7, #12]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003bc2:	4619      	mov	r1, r3
 8003bc4:	6878      	ldr	r0, [r7, #4]
 8003bc6:	f7ff fe68 	bl	800389a <HAL_UARTEx_RxEventCallback>
 8003bca:	e002      	b.n	8003bd2 <UART_Receive_IT+0x140>
 8003bcc:	6878      	ldr	r0, [r7, #4]
 8003bce:	f7ff fe52 	bl	8003876 <HAL_UART_RxCpltCallback>
 8003bd2:	2300      	movs	r3, #0
 8003bd4:	e002      	b.n	8003bdc <UART_Receive_IT+0x14a>
 8003bd6:	2300      	movs	r3, #0
 8003bd8:	e000      	b.n	8003bdc <UART_Receive_IT+0x14a>
 8003bda:	2302      	movs	r3, #2
 8003bdc:	4618      	mov	r0, r3
 8003bde:	3718      	adds	r7, #24
 8003be0:	46bd      	mov	sp, r7
 8003be2:	bd80      	pop	{r7, pc}

08003be4 <UART_SetConfig>:
 8003be4:	b580      	push	{r7, lr}
 8003be6:	b084      	sub	sp, #16
 8003be8:	af00      	add	r7, sp, #0
 8003bea:	6078      	str	r0, [r7, #4]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	691b      	ldr	r3, [r3, #16]
 8003bf2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	68da      	ldr	r2, [r3, #12]
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	681b      	ldr	r3, [r3, #0]
 8003bfe:	430a      	orrs	r2, r1
 8003c00:	611a      	str	r2, [r3, #16]
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	689a      	ldr	r2, [r3, #8]
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	691b      	ldr	r3, [r3, #16]
 8003c0a:	431a      	orrs	r2, r3
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	695b      	ldr	r3, [r3, #20]
 8003c10:	4313      	orrs	r3, r2
 8003c12:	60bb      	str	r3, [r7, #8]
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	68db      	ldr	r3, [r3, #12]
 8003c1a:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003c1e:	f023 030c 	bic.w	r3, r3, #12
 8003c22:	687a      	ldr	r2, [r7, #4]
 8003c24:	6812      	ldr	r2, [r2, #0]
 8003c26:	68b9      	ldr	r1, [r7, #8]
 8003c28:	430b      	orrs	r3, r1
 8003c2a:	60d3      	str	r3, [r2, #12]
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	695b      	ldr	r3, [r3, #20]
 8003c32:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	699a      	ldr	r2, [r3, #24]
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	430a      	orrs	r2, r1
 8003c40:	615a      	str	r2, [r3, #20]
 8003c42:	687b      	ldr	r3, [r7, #4]
 8003c44:	681b      	ldr	r3, [r3, #0]
 8003c46:	4a2c      	ldr	r2, [pc, #176]	; (8003cf8 <UART_SetConfig+0x114>)
 8003c48:	4293      	cmp	r3, r2
 8003c4a:	d103      	bne.n	8003c54 <UART_SetConfig+0x70>
 8003c4c:	f7fe fbf0 	bl	8002430 <HAL_RCC_GetPCLK2Freq>
 8003c50:	60f8      	str	r0, [r7, #12]
 8003c52:	e002      	b.n	8003c5a <UART_SetConfig+0x76>
 8003c54:	f7fe fbd8 	bl	8002408 <HAL_RCC_GetPCLK1Freq>
 8003c58:	60f8      	str	r0, [r7, #12]
 8003c5a:	68fa      	ldr	r2, [r7, #12]
 8003c5c:	4613      	mov	r3, r2
 8003c5e:	009b      	lsls	r3, r3, #2
 8003c60:	4413      	add	r3, r2
 8003c62:	009a      	lsls	r2, r3, #2
 8003c64:	441a      	add	r2, r3
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	685b      	ldr	r3, [r3, #4]
 8003c6a:	009b      	lsls	r3, r3, #2
 8003c6c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c70:	4a22      	ldr	r2, [pc, #136]	; (8003cfc <UART_SetConfig+0x118>)
 8003c72:	fba2 2303 	umull	r2, r3, r2, r3
 8003c76:	095b      	lsrs	r3, r3, #5
 8003c78:	0119      	lsls	r1, r3, #4
 8003c7a:	68fa      	ldr	r2, [r7, #12]
 8003c7c:	4613      	mov	r3, r2
 8003c7e:	009b      	lsls	r3, r3, #2
 8003c80:	4413      	add	r3, r2
 8003c82:	009a      	lsls	r2, r3, #2
 8003c84:	441a      	add	r2, r3
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	685b      	ldr	r3, [r3, #4]
 8003c8a:	009b      	lsls	r3, r3, #2
 8003c8c:	fbb2 f2f3 	udiv	r2, r2, r3
 8003c90:	4b1a      	ldr	r3, [pc, #104]	; (8003cfc <UART_SetConfig+0x118>)
 8003c92:	fba3 0302 	umull	r0, r3, r3, r2
 8003c96:	095b      	lsrs	r3, r3, #5
 8003c98:	2064      	movs	r0, #100	; 0x64
 8003c9a:	fb00 f303 	mul.w	r3, r0, r3
 8003c9e:	1ad3      	subs	r3, r2, r3
 8003ca0:	011b      	lsls	r3, r3, #4
 8003ca2:	3332      	adds	r3, #50	; 0x32
 8003ca4:	4a15      	ldr	r2, [pc, #84]	; (8003cfc <UART_SetConfig+0x118>)
 8003ca6:	fba2 2303 	umull	r2, r3, r2, r3
 8003caa:	095b      	lsrs	r3, r3, #5
 8003cac:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003cb0:	4419      	add	r1, r3
 8003cb2:	68fa      	ldr	r2, [r7, #12]
 8003cb4:	4613      	mov	r3, r2
 8003cb6:	009b      	lsls	r3, r3, #2
 8003cb8:	4413      	add	r3, r2
 8003cba:	009a      	lsls	r2, r3, #2
 8003cbc:	441a      	add	r2, r3
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	685b      	ldr	r3, [r3, #4]
 8003cc2:	009b      	lsls	r3, r3, #2
 8003cc4:	fbb2 f2f3 	udiv	r2, r2, r3
 8003cc8:	4b0c      	ldr	r3, [pc, #48]	; (8003cfc <UART_SetConfig+0x118>)
 8003cca:	fba3 0302 	umull	r0, r3, r3, r2
 8003cce:	095b      	lsrs	r3, r3, #5
 8003cd0:	2064      	movs	r0, #100	; 0x64
 8003cd2:	fb00 f303 	mul.w	r3, r0, r3
 8003cd6:	1ad3      	subs	r3, r2, r3
 8003cd8:	011b      	lsls	r3, r3, #4
 8003cda:	3332      	adds	r3, #50	; 0x32
 8003cdc:	4a07      	ldr	r2, [pc, #28]	; (8003cfc <UART_SetConfig+0x118>)
 8003cde:	fba2 2303 	umull	r2, r3, r2, r3
 8003ce2:	095b      	lsrs	r3, r3, #5
 8003ce4:	f003 020f 	and.w	r2, r3, #15
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	440a      	add	r2, r1
 8003cee:	609a      	str	r2, [r3, #8]
 8003cf0:	bf00      	nop
 8003cf2:	3710      	adds	r7, #16
 8003cf4:	46bd      	mov	sp, r7
 8003cf6:	bd80      	pop	{r7, pc}
 8003cf8:	40013800 	.word	0x40013800
 8003cfc:	51eb851f 	.word	0x51eb851f

08003d00 <__errno>:
 8003d00:	4b01      	ldr	r3, [pc, #4]	; (8003d08 <__errno+0x8>)
 8003d02:	6818      	ldr	r0, [r3, #0]
 8003d04:	4770      	bx	lr
 8003d06:	bf00      	nop
 8003d08:	20000030 	.word	0x20000030

08003d0c <__libc_init_array>:
 8003d0c:	b570      	push	{r4, r5, r6, lr}
 8003d0e:	2600      	movs	r6, #0
 8003d10:	4d0c      	ldr	r5, [pc, #48]	; (8003d44 <__libc_init_array+0x38>)
 8003d12:	4c0d      	ldr	r4, [pc, #52]	; (8003d48 <__libc_init_array+0x3c>)
 8003d14:	1b64      	subs	r4, r4, r5
 8003d16:	10a4      	asrs	r4, r4, #2
 8003d18:	42a6      	cmp	r6, r4
 8003d1a:	d109      	bne.n	8003d30 <__libc_init_array+0x24>
 8003d1c:	f000 fc9c 	bl	8004658 <_init>
 8003d20:	2600      	movs	r6, #0
 8003d22:	4d0a      	ldr	r5, [pc, #40]	; (8003d4c <__libc_init_array+0x40>)
 8003d24:	4c0a      	ldr	r4, [pc, #40]	; (8003d50 <__libc_init_array+0x44>)
 8003d26:	1b64      	subs	r4, r4, r5
 8003d28:	10a4      	asrs	r4, r4, #2
 8003d2a:	42a6      	cmp	r6, r4
 8003d2c:	d105      	bne.n	8003d3a <__libc_init_array+0x2e>
 8003d2e:	bd70      	pop	{r4, r5, r6, pc}
 8003d30:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d34:	4798      	blx	r3
 8003d36:	3601      	adds	r6, #1
 8003d38:	e7ee      	b.n	8003d18 <__libc_init_array+0xc>
 8003d3a:	f855 3b04 	ldr.w	r3, [r5], #4
 8003d3e:	4798      	blx	r3
 8003d40:	3601      	adds	r6, #1
 8003d42:	e7f2      	b.n	8003d2a <__libc_init_array+0x1e>
 8003d44:	080046dc 	.word	0x080046dc
 8003d48:	080046dc 	.word	0x080046dc
 8003d4c:	080046dc 	.word	0x080046dc
 8003d50:	080046e0 	.word	0x080046e0

08003d54 <memset>:
 8003d54:	4603      	mov	r3, r0
 8003d56:	4402      	add	r2, r0
 8003d58:	4293      	cmp	r3, r2
 8003d5a:	d100      	bne.n	8003d5e <memset+0xa>
 8003d5c:	4770      	bx	lr
 8003d5e:	f803 1b01 	strb.w	r1, [r3], #1
 8003d62:	e7f9      	b.n	8003d58 <memset+0x4>

08003d64 <siprintf>:
 8003d64:	b40e      	push	{r1, r2, r3}
 8003d66:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003d6a:	b500      	push	{lr}
 8003d6c:	b09c      	sub	sp, #112	; 0x70
 8003d6e:	ab1d      	add	r3, sp, #116	; 0x74
 8003d70:	9002      	str	r0, [sp, #8]
 8003d72:	9006      	str	r0, [sp, #24]
 8003d74:	9107      	str	r1, [sp, #28]
 8003d76:	9104      	str	r1, [sp, #16]
 8003d78:	4808      	ldr	r0, [pc, #32]	; (8003d9c <siprintf+0x38>)
 8003d7a:	4909      	ldr	r1, [pc, #36]	; (8003da0 <siprintf+0x3c>)
 8003d7c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d80:	9105      	str	r1, [sp, #20]
 8003d82:	6800      	ldr	r0, [r0, #0]
 8003d84:	a902      	add	r1, sp, #8
 8003d86:	9301      	str	r3, [sp, #4]
 8003d88:	f000 f868 	bl	8003e5c <_svfiprintf_r>
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	9b02      	ldr	r3, [sp, #8]
 8003d90:	701a      	strb	r2, [r3, #0]
 8003d92:	b01c      	add	sp, #112	; 0x70
 8003d94:	f85d eb04 	ldr.w	lr, [sp], #4
 8003d98:	b003      	add	sp, #12
 8003d9a:	4770      	bx	lr
 8003d9c:	20000030 	.word	0x20000030
 8003da0:	ffff0208 	.word	0xffff0208

08003da4 <__ssputs_r>:
 8003da4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003da8:	688e      	ldr	r6, [r1, #8]
 8003daa:	4682      	mov	sl, r0
 8003dac:	429e      	cmp	r6, r3
 8003dae:	460c      	mov	r4, r1
 8003db0:	4690      	mov	r8, r2
 8003db2:	461f      	mov	r7, r3
 8003db4:	d838      	bhi.n	8003e28 <__ssputs_r+0x84>
 8003db6:	898a      	ldrh	r2, [r1, #12]
 8003db8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003dbc:	d032      	beq.n	8003e24 <__ssputs_r+0x80>
 8003dbe:	6825      	ldr	r5, [r4, #0]
 8003dc0:	6909      	ldr	r1, [r1, #16]
 8003dc2:	3301      	adds	r3, #1
 8003dc4:	eba5 0901 	sub.w	r9, r5, r1
 8003dc8:	6965      	ldr	r5, [r4, #20]
 8003dca:	444b      	add	r3, r9
 8003dcc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003dd0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003dd4:	106d      	asrs	r5, r5, #1
 8003dd6:	429d      	cmp	r5, r3
 8003dd8:	bf38      	it	cc
 8003dda:	461d      	movcc	r5, r3
 8003ddc:	0553      	lsls	r3, r2, #21
 8003dde:	d531      	bpl.n	8003e44 <__ssputs_r+0xa0>
 8003de0:	4629      	mov	r1, r5
 8003de2:	f000 fb6f 	bl	80044c4 <_malloc_r>
 8003de6:	4606      	mov	r6, r0
 8003de8:	b950      	cbnz	r0, 8003e00 <__ssputs_r+0x5c>
 8003dea:	230c      	movs	r3, #12
 8003dec:	f04f 30ff 	mov.w	r0, #4294967295
 8003df0:	f8ca 3000 	str.w	r3, [sl]
 8003df4:	89a3      	ldrh	r3, [r4, #12]
 8003df6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003dfa:	81a3      	strh	r3, [r4, #12]
 8003dfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003e00:	464a      	mov	r2, r9
 8003e02:	6921      	ldr	r1, [r4, #16]
 8003e04:	f000 face 	bl	80043a4 <memcpy>
 8003e08:	89a3      	ldrh	r3, [r4, #12]
 8003e0a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003e0e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e12:	81a3      	strh	r3, [r4, #12]
 8003e14:	6126      	str	r6, [r4, #16]
 8003e16:	444e      	add	r6, r9
 8003e18:	6026      	str	r6, [r4, #0]
 8003e1a:	463e      	mov	r6, r7
 8003e1c:	6165      	str	r5, [r4, #20]
 8003e1e:	eba5 0509 	sub.w	r5, r5, r9
 8003e22:	60a5      	str	r5, [r4, #8]
 8003e24:	42be      	cmp	r6, r7
 8003e26:	d900      	bls.n	8003e2a <__ssputs_r+0x86>
 8003e28:	463e      	mov	r6, r7
 8003e2a:	4632      	mov	r2, r6
 8003e2c:	4641      	mov	r1, r8
 8003e2e:	6820      	ldr	r0, [r4, #0]
 8003e30:	f000 fac6 	bl	80043c0 <memmove>
 8003e34:	68a3      	ldr	r3, [r4, #8]
 8003e36:	2000      	movs	r0, #0
 8003e38:	1b9b      	subs	r3, r3, r6
 8003e3a:	60a3      	str	r3, [r4, #8]
 8003e3c:	6823      	ldr	r3, [r4, #0]
 8003e3e:	4433      	add	r3, r6
 8003e40:	6023      	str	r3, [r4, #0]
 8003e42:	e7db      	b.n	8003dfc <__ssputs_r+0x58>
 8003e44:	462a      	mov	r2, r5
 8003e46:	f000 fbb1 	bl	80045ac <_realloc_r>
 8003e4a:	4606      	mov	r6, r0
 8003e4c:	2800      	cmp	r0, #0
 8003e4e:	d1e1      	bne.n	8003e14 <__ssputs_r+0x70>
 8003e50:	4650      	mov	r0, sl
 8003e52:	6921      	ldr	r1, [r4, #16]
 8003e54:	f000 face 	bl	80043f4 <_free_r>
 8003e58:	e7c7      	b.n	8003dea <__ssputs_r+0x46>
	...

08003e5c <_svfiprintf_r>:
 8003e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e60:	4698      	mov	r8, r3
 8003e62:	898b      	ldrh	r3, [r1, #12]
 8003e64:	4607      	mov	r7, r0
 8003e66:	061b      	lsls	r3, r3, #24
 8003e68:	460d      	mov	r5, r1
 8003e6a:	4614      	mov	r4, r2
 8003e6c:	b09d      	sub	sp, #116	; 0x74
 8003e6e:	d50e      	bpl.n	8003e8e <_svfiprintf_r+0x32>
 8003e70:	690b      	ldr	r3, [r1, #16]
 8003e72:	b963      	cbnz	r3, 8003e8e <_svfiprintf_r+0x32>
 8003e74:	2140      	movs	r1, #64	; 0x40
 8003e76:	f000 fb25 	bl	80044c4 <_malloc_r>
 8003e7a:	6028      	str	r0, [r5, #0]
 8003e7c:	6128      	str	r0, [r5, #16]
 8003e7e:	b920      	cbnz	r0, 8003e8a <_svfiprintf_r+0x2e>
 8003e80:	230c      	movs	r3, #12
 8003e82:	603b      	str	r3, [r7, #0]
 8003e84:	f04f 30ff 	mov.w	r0, #4294967295
 8003e88:	e0d1      	b.n	800402e <_svfiprintf_r+0x1d2>
 8003e8a:	2340      	movs	r3, #64	; 0x40
 8003e8c:	616b      	str	r3, [r5, #20]
 8003e8e:	2300      	movs	r3, #0
 8003e90:	9309      	str	r3, [sp, #36]	; 0x24
 8003e92:	2320      	movs	r3, #32
 8003e94:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003e98:	2330      	movs	r3, #48	; 0x30
 8003e9a:	f04f 0901 	mov.w	r9, #1
 8003e9e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ea2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004048 <_svfiprintf_r+0x1ec>
 8003ea6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003eaa:	4623      	mov	r3, r4
 8003eac:	469a      	mov	sl, r3
 8003eae:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003eb2:	b10a      	cbz	r2, 8003eb8 <_svfiprintf_r+0x5c>
 8003eb4:	2a25      	cmp	r2, #37	; 0x25
 8003eb6:	d1f9      	bne.n	8003eac <_svfiprintf_r+0x50>
 8003eb8:	ebba 0b04 	subs.w	fp, sl, r4
 8003ebc:	d00b      	beq.n	8003ed6 <_svfiprintf_r+0x7a>
 8003ebe:	465b      	mov	r3, fp
 8003ec0:	4622      	mov	r2, r4
 8003ec2:	4629      	mov	r1, r5
 8003ec4:	4638      	mov	r0, r7
 8003ec6:	f7ff ff6d 	bl	8003da4 <__ssputs_r>
 8003eca:	3001      	adds	r0, #1
 8003ecc:	f000 80aa 	beq.w	8004024 <_svfiprintf_r+0x1c8>
 8003ed0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ed2:	445a      	add	r2, fp
 8003ed4:	9209      	str	r2, [sp, #36]	; 0x24
 8003ed6:	f89a 3000 	ldrb.w	r3, [sl]
 8003eda:	2b00      	cmp	r3, #0
 8003edc:	f000 80a2 	beq.w	8004024 <_svfiprintf_r+0x1c8>
 8003ee0:	2300      	movs	r3, #0
 8003ee2:	f04f 32ff 	mov.w	r2, #4294967295
 8003ee6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003eea:	f10a 0a01 	add.w	sl, sl, #1
 8003eee:	9304      	str	r3, [sp, #16]
 8003ef0:	9307      	str	r3, [sp, #28]
 8003ef2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003ef6:	931a      	str	r3, [sp, #104]	; 0x68
 8003ef8:	4654      	mov	r4, sl
 8003efa:	2205      	movs	r2, #5
 8003efc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f00:	4851      	ldr	r0, [pc, #324]	; (8004048 <_svfiprintf_r+0x1ec>)
 8003f02:	f000 fa41 	bl	8004388 <memchr>
 8003f06:	9a04      	ldr	r2, [sp, #16]
 8003f08:	b9d8      	cbnz	r0, 8003f42 <_svfiprintf_r+0xe6>
 8003f0a:	06d0      	lsls	r0, r2, #27
 8003f0c:	bf44      	itt	mi
 8003f0e:	2320      	movmi	r3, #32
 8003f10:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f14:	0711      	lsls	r1, r2, #28
 8003f16:	bf44      	itt	mi
 8003f18:	232b      	movmi	r3, #43	; 0x2b
 8003f1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003f1e:	f89a 3000 	ldrb.w	r3, [sl]
 8003f22:	2b2a      	cmp	r3, #42	; 0x2a
 8003f24:	d015      	beq.n	8003f52 <_svfiprintf_r+0xf6>
 8003f26:	4654      	mov	r4, sl
 8003f28:	2000      	movs	r0, #0
 8003f2a:	f04f 0c0a 	mov.w	ip, #10
 8003f2e:	9a07      	ldr	r2, [sp, #28]
 8003f30:	4621      	mov	r1, r4
 8003f32:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f36:	3b30      	subs	r3, #48	; 0x30
 8003f38:	2b09      	cmp	r3, #9
 8003f3a:	d94e      	bls.n	8003fda <_svfiprintf_r+0x17e>
 8003f3c:	b1b0      	cbz	r0, 8003f6c <_svfiprintf_r+0x110>
 8003f3e:	9207      	str	r2, [sp, #28]
 8003f40:	e014      	b.n	8003f6c <_svfiprintf_r+0x110>
 8003f42:	eba0 0308 	sub.w	r3, r0, r8
 8003f46:	fa09 f303 	lsl.w	r3, r9, r3
 8003f4a:	4313      	orrs	r3, r2
 8003f4c:	46a2      	mov	sl, r4
 8003f4e:	9304      	str	r3, [sp, #16]
 8003f50:	e7d2      	b.n	8003ef8 <_svfiprintf_r+0x9c>
 8003f52:	9b03      	ldr	r3, [sp, #12]
 8003f54:	1d19      	adds	r1, r3, #4
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	9103      	str	r1, [sp, #12]
 8003f5a:	2b00      	cmp	r3, #0
 8003f5c:	bfbb      	ittet	lt
 8003f5e:	425b      	neglt	r3, r3
 8003f60:	f042 0202 	orrlt.w	r2, r2, #2
 8003f64:	9307      	strge	r3, [sp, #28]
 8003f66:	9307      	strlt	r3, [sp, #28]
 8003f68:	bfb8      	it	lt
 8003f6a:	9204      	strlt	r2, [sp, #16]
 8003f6c:	7823      	ldrb	r3, [r4, #0]
 8003f6e:	2b2e      	cmp	r3, #46	; 0x2e
 8003f70:	d10c      	bne.n	8003f8c <_svfiprintf_r+0x130>
 8003f72:	7863      	ldrb	r3, [r4, #1]
 8003f74:	2b2a      	cmp	r3, #42	; 0x2a
 8003f76:	d135      	bne.n	8003fe4 <_svfiprintf_r+0x188>
 8003f78:	9b03      	ldr	r3, [sp, #12]
 8003f7a:	3402      	adds	r4, #2
 8003f7c:	1d1a      	adds	r2, r3, #4
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	9203      	str	r2, [sp, #12]
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	bfb8      	it	lt
 8003f86:	f04f 33ff 	movlt.w	r3, #4294967295
 8003f8a:	9305      	str	r3, [sp, #20]
 8003f8c:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 800404c <_svfiprintf_r+0x1f0>
 8003f90:	2203      	movs	r2, #3
 8003f92:	4650      	mov	r0, sl
 8003f94:	7821      	ldrb	r1, [r4, #0]
 8003f96:	f000 f9f7 	bl	8004388 <memchr>
 8003f9a:	b140      	cbz	r0, 8003fae <_svfiprintf_r+0x152>
 8003f9c:	2340      	movs	r3, #64	; 0x40
 8003f9e:	eba0 000a 	sub.w	r0, r0, sl
 8003fa2:	fa03 f000 	lsl.w	r0, r3, r0
 8003fa6:	9b04      	ldr	r3, [sp, #16]
 8003fa8:	3401      	adds	r4, #1
 8003faa:	4303      	orrs	r3, r0
 8003fac:	9304      	str	r3, [sp, #16]
 8003fae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fb2:	2206      	movs	r2, #6
 8003fb4:	4826      	ldr	r0, [pc, #152]	; (8004050 <_svfiprintf_r+0x1f4>)
 8003fb6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003fba:	f000 f9e5 	bl	8004388 <memchr>
 8003fbe:	2800      	cmp	r0, #0
 8003fc0:	d038      	beq.n	8004034 <_svfiprintf_r+0x1d8>
 8003fc2:	4b24      	ldr	r3, [pc, #144]	; (8004054 <_svfiprintf_r+0x1f8>)
 8003fc4:	bb1b      	cbnz	r3, 800400e <_svfiprintf_r+0x1b2>
 8003fc6:	9b03      	ldr	r3, [sp, #12]
 8003fc8:	3307      	adds	r3, #7
 8003fca:	f023 0307 	bic.w	r3, r3, #7
 8003fce:	3308      	adds	r3, #8
 8003fd0:	9303      	str	r3, [sp, #12]
 8003fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fd4:	4433      	add	r3, r6
 8003fd6:	9309      	str	r3, [sp, #36]	; 0x24
 8003fd8:	e767      	b.n	8003eaa <_svfiprintf_r+0x4e>
 8003fda:	460c      	mov	r4, r1
 8003fdc:	2001      	movs	r0, #1
 8003fde:	fb0c 3202 	mla	r2, ip, r2, r3
 8003fe2:	e7a5      	b.n	8003f30 <_svfiprintf_r+0xd4>
 8003fe4:	2300      	movs	r3, #0
 8003fe6:	f04f 0c0a 	mov.w	ip, #10
 8003fea:	4619      	mov	r1, r3
 8003fec:	3401      	adds	r4, #1
 8003fee:	9305      	str	r3, [sp, #20]
 8003ff0:	4620      	mov	r0, r4
 8003ff2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ff6:	3a30      	subs	r2, #48	; 0x30
 8003ff8:	2a09      	cmp	r2, #9
 8003ffa:	d903      	bls.n	8004004 <_svfiprintf_r+0x1a8>
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d0c5      	beq.n	8003f8c <_svfiprintf_r+0x130>
 8004000:	9105      	str	r1, [sp, #20]
 8004002:	e7c3      	b.n	8003f8c <_svfiprintf_r+0x130>
 8004004:	4604      	mov	r4, r0
 8004006:	2301      	movs	r3, #1
 8004008:	fb0c 2101 	mla	r1, ip, r1, r2
 800400c:	e7f0      	b.n	8003ff0 <_svfiprintf_r+0x194>
 800400e:	ab03      	add	r3, sp, #12
 8004010:	9300      	str	r3, [sp, #0]
 8004012:	462a      	mov	r2, r5
 8004014:	4638      	mov	r0, r7
 8004016:	4b10      	ldr	r3, [pc, #64]	; (8004058 <_svfiprintf_r+0x1fc>)
 8004018:	a904      	add	r1, sp, #16
 800401a:	f3af 8000 	nop.w
 800401e:	1c42      	adds	r2, r0, #1
 8004020:	4606      	mov	r6, r0
 8004022:	d1d6      	bne.n	8003fd2 <_svfiprintf_r+0x176>
 8004024:	89ab      	ldrh	r3, [r5, #12]
 8004026:	065b      	lsls	r3, r3, #25
 8004028:	f53f af2c 	bmi.w	8003e84 <_svfiprintf_r+0x28>
 800402c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800402e:	b01d      	add	sp, #116	; 0x74
 8004030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004034:	ab03      	add	r3, sp, #12
 8004036:	9300      	str	r3, [sp, #0]
 8004038:	462a      	mov	r2, r5
 800403a:	4638      	mov	r0, r7
 800403c:	4b06      	ldr	r3, [pc, #24]	; (8004058 <_svfiprintf_r+0x1fc>)
 800403e:	a904      	add	r1, sp, #16
 8004040:	f000 f87c 	bl	800413c <_printf_i>
 8004044:	e7eb      	b.n	800401e <_svfiprintf_r+0x1c2>
 8004046:	bf00      	nop
 8004048:	080046a8 	.word	0x080046a8
 800404c:	080046ae 	.word	0x080046ae
 8004050:	080046b2 	.word	0x080046b2
 8004054:	00000000 	.word	0x00000000
 8004058:	08003da5 	.word	0x08003da5

0800405c <_printf_common>:
 800405c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004060:	4616      	mov	r6, r2
 8004062:	4699      	mov	r9, r3
 8004064:	688a      	ldr	r2, [r1, #8]
 8004066:	690b      	ldr	r3, [r1, #16]
 8004068:	4607      	mov	r7, r0
 800406a:	4293      	cmp	r3, r2
 800406c:	bfb8      	it	lt
 800406e:	4613      	movlt	r3, r2
 8004070:	6033      	str	r3, [r6, #0]
 8004072:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004076:	460c      	mov	r4, r1
 8004078:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800407c:	b10a      	cbz	r2, 8004082 <_printf_common+0x26>
 800407e:	3301      	adds	r3, #1
 8004080:	6033      	str	r3, [r6, #0]
 8004082:	6823      	ldr	r3, [r4, #0]
 8004084:	0699      	lsls	r1, r3, #26
 8004086:	bf42      	ittt	mi
 8004088:	6833      	ldrmi	r3, [r6, #0]
 800408a:	3302      	addmi	r3, #2
 800408c:	6033      	strmi	r3, [r6, #0]
 800408e:	6825      	ldr	r5, [r4, #0]
 8004090:	f015 0506 	ands.w	r5, r5, #6
 8004094:	d106      	bne.n	80040a4 <_printf_common+0x48>
 8004096:	f104 0a19 	add.w	sl, r4, #25
 800409a:	68e3      	ldr	r3, [r4, #12]
 800409c:	6832      	ldr	r2, [r6, #0]
 800409e:	1a9b      	subs	r3, r3, r2
 80040a0:	42ab      	cmp	r3, r5
 80040a2:	dc28      	bgt.n	80040f6 <_printf_common+0x9a>
 80040a4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80040a8:	1e13      	subs	r3, r2, #0
 80040aa:	6822      	ldr	r2, [r4, #0]
 80040ac:	bf18      	it	ne
 80040ae:	2301      	movne	r3, #1
 80040b0:	0692      	lsls	r2, r2, #26
 80040b2:	d42d      	bmi.n	8004110 <_printf_common+0xb4>
 80040b4:	4649      	mov	r1, r9
 80040b6:	4638      	mov	r0, r7
 80040b8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80040bc:	47c0      	blx	r8
 80040be:	3001      	adds	r0, #1
 80040c0:	d020      	beq.n	8004104 <_printf_common+0xa8>
 80040c2:	6823      	ldr	r3, [r4, #0]
 80040c4:	68e5      	ldr	r5, [r4, #12]
 80040c6:	f003 0306 	and.w	r3, r3, #6
 80040ca:	2b04      	cmp	r3, #4
 80040cc:	bf18      	it	ne
 80040ce:	2500      	movne	r5, #0
 80040d0:	6832      	ldr	r2, [r6, #0]
 80040d2:	f04f 0600 	mov.w	r6, #0
 80040d6:	68a3      	ldr	r3, [r4, #8]
 80040d8:	bf08      	it	eq
 80040da:	1aad      	subeq	r5, r5, r2
 80040dc:	6922      	ldr	r2, [r4, #16]
 80040de:	bf08      	it	eq
 80040e0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80040e4:	4293      	cmp	r3, r2
 80040e6:	bfc4      	itt	gt
 80040e8:	1a9b      	subgt	r3, r3, r2
 80040ea:	18ed      	addgt	r5, r5, r3
 80040ec:	341a      	adds	r4, #26
 80040ee:	42b5      	cmp	r5, r6
 80040f0:	d11a      	bne.n	8004128 <_printf_common+0xcc>
 80040f2:	2000      	movs	r0, #0
 80040f4:	e008      	b.n	8004108 <_printf_common+0xac>
 80040f6:	2301      	movs	r3, #1
 80040f8:	4652      	mov	r2, sl
 80040fa:	4649      	mov	r1, r9
 80040fc:	4638      	mov	r0, r7
 80040fe:	47c0      	blx	r8
 8004100:	3001      	adds	r0, #1
 8004102:	d103      	bne.n	800410c <_printf_common+0xb0>
 8004104:	f04f 30ff 	mov.w	r0, #4294967295
 8004108:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800410c:	3501      	adds	r5, #1
 800410e:	e7c4      	b.n	800409a <_printf_common+0x3e>
 8004110:	2030      	movs	r0, #48	; 0x30
 8004112:	18e1      	adds	r1, r4, r3
 8004114:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004118:	1c5a      	adds	r2, r3, #1
 800411a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800411e:	4422      	add	r2, r4
 8004120:	3302      	adds	r3, #2
 8004122:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004126:	e7c5      	b.n	80040b4 <_printf_common+0x58>
 8004128:	2301      	movs	r3, #1
 800412a:	4622      	mov	r2, r4
 800412c:	4649      	mov	r1, r9
 800412e:	4638      	mov	r0, r7
 8004130:	47c0      	blx	r8
 8004132:	3001      	adds	r0, #1
 8004134:	d0e6      	beq.n	8004104 <_printf_common+0xa8>
 8004136:	3601      	adds	r6, #1
 8004138:	e7d9      	b.n	80040ee <_printf_common+0x92>
	...

0800413c <_printf_i>:
 800413c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004140:	7e0f      	ldrb	r7, [r1, #24]
 8004142:	4691      	mov	r9, r2
 8004144:	2f78      	cmp	r7, #120	; 0x78
 8004146:	4680      	mov	r8, r0
 8004148:	460c      	mov	r4, r1
 800414a:	469a      	mov	sl, r3
 800414c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800414e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004152:	d807      	bhi.n	8004164 <_printf_i+0x28>
 8004154:	2f62      	cmp	r7, #98	; 0x62
 8004156:	d80a      	bhi.n	800416e <_printf_i+0x32>
 8004158:	2f00      	cmp	r7, #0
 800415a:	f000 80d9 	beq.w	8004310 <_printf_i+0x1d4>
 800415e:	2f58      	cmp	r7, #88	; 0x58
 8004160:	f000 80a4 	beq.w	80042ac <_printf_i+0x170>
 8004164:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004168:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800416c:	e03a      	b.n	80041e4 <_printf_i+0xa8>
 800416e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004172:	2b15      	cmp	r3, #21
 8004174:	d8f6      	bhi.n	8004164 <_printf_i+0x28>
 8004176:	a101      	add	r1, pc, #4	; (adr r1, 800417c <_printf_i+0x40>)
 8004178:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800417c:	080041d5 	.word	0x080041d5
 8004180:	080041e9 	.word	0x080041e9
 8004184:	08004165 	.word	0x08004165
 8004188:	08004165 	.word	0x08004165
 800418c:	08004165 	.word	0x08004165
 8004190:	08004165 	.word	0x08004165
 8004194:	080041e9 	.word	0x080041e9
 8004198:	08004165 	.word	0x08004165
 800419c:	08004165 	.word	0x08004165
 80041a0:	08004165 	.word	0x08004165
 80041a4:	08004165 	.word	0x08004165
 80041a8:	080042f7 	.word	0x080042f7
 80041ac:	08004219 	.word	0x08004219
 80041b0:	080042d9 	.word	0x080042d9
 80041b4:	08004165 	.word	0x08004165
 80041b8:	08004165 	.word	0x08004165
 80041bc:	08004319 	.word	0x08004319
 80041c0:	08004165 	.word	0x08004165
 80041c4:	08004219 	.word	0x08004219
 80041c8:	08004165 	.word	0x08004165
 80041cc:	08004165 	.word	0x08004165
 80041d0:	080042e1 	.word	0x080042e1
 80041d4:	682b      	ldr	r3, [r5, #0]
 80041d6:	1d1a      	adds	r2, r3, #4
 80041d8:	681b      	ldr	r3, [r3, #0]
 80041da:	602a      	str	r2, [r5, #0]
 80041dc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80041e0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80041e4:	2301      	movs	r3, #1
 80041e6:	e0a4      	b.n	8004332 <_printf_i+0x1f6>
 80041e8:	6820      	ldr	r0, [r4, #0]
 80041ea:	6829      	ldr	r1, [r5, #0]
 80041ec:	0606      	lsls	r6, r0, #24
 80041ee:	f101 0304 	add.w	r3, r1, #4
 80041f2:	d50a      	bpl.n	800420a <_printf_i+0xce>
 80041f4:	680e      	ldr	r6, [r1, #0]
 80041f6:	602b      	str	r3, [r5, #0]
 80041f8:	2e00      	cmp	r6, #0
 80041fa:	da03      	bge.n	8004204 <_printf_i+0xc8>
 80041fc:	232d      	movs	r3, #45	; 0x2d
 80041fe:	4276      	negs	r6, r6
 8004200:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004204:	230a      	movs	r3, #10
 8004206:	485e      	ldr	r0, [pc, #376]	; (8004380 <_printf_i+0x244>)
 8004208:	e019      	b.n	800423e <_printf_i+0x102>
 800420a:	680e      	ldr	r6, [r1, #0]
 800420c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004210:	602b      	str	r3, [r5, #0]
 8004212:	bf18      	it	ne
 8004214:	b236      	sxthne	r6, r6
 8004216:	e7ef      	b.n	80041f8 <_printf_i+0xbc>
 8004218:	682b      	ldr	r3, [r5, #0]
 800421a:	6820      	ldr	r0, [r4, #0]
 800421c:	1d19      	adds	r1, r3, #4
 800421e:	6029      	str	r1, [r5, #0]
 8004220:	0601      	lsls	r1, r0, #24
 8004222:	d501      	bpl.n	8004228 <_printf_i+0xec>
 8004224:	681e      	ldr	r6, [r3, #0]
 8004226:	e002      	b.n	800422e <_printf_i+0xf2>
 8004228:	0646      	lsls	r6, r0, #25
 800422a:	d5fb      	bpl.n	8004224 <_printf_i+0xe8>
 800422c:	881e      	ldrh	r6, [r3, #0]
 800422e:	2f6f      	cmp	r7, #111	; 0x6f
 8004230:	bf0c      	ite	eq
 8004232:	2308      	moveq	r3, #8
 8004234:	230a      	movne	r3, #10
 8004236:	4852      	ldr	r0, [pc, #328]	; (8004380 <_printf_i+0x244>)
 8004238:	2100      	movs	r1, #0
 800423a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800423e:	6865      	ldr	r5, [r4, #4]
 8004240:	2d00      	cmp	r5, #0
 8004242:	bfa8      	it	ge
 8004244:	6821      	ldrge	r1, [r4, #0]
 8004246:	60a5      	str	r5, [r4, #8]
 8004248:	bfa4      	itt	ge
 800424a:	f021 0104 	bicge.w	r1, r1, #4
 800424e:	6021      	strge	r1, [r4, #0]
 8004250:	b90e      	cbnz	r6, 8004256 <_printf_i+0x11a>
 8004252:	2d00      	cmp	r5, #0
 8004254:	d04d      	beq.n	80042f2 <_printf_i+0x1b6>
 8004256:	4615      	mov	r5, r2
 8004258:	fbb6 f1f3 	udiv	r1, r6, r3
 800425c:	fb03 6711 	mls	r7, r3, r1, r6
 8004260:	5dc7      	ldrb	r7, [r0, r7]
 8004262:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004266:	4637      	mov	r7, r6
 8004268:	42bb      	cmp	r3, r7
 800426a:	460e      	mov	r6, r1
 800426c:	d9f4      	bls.n	8004258 <_printf_i+0x11c>
 800426e:	2b08      	cmp	r3, #8
 8004270:	d10b      	bne.n	800428a <_printf_i+0x14e>
 8004272:	6823      	ldr	r3, [r4, #0]
 8004274:	07de      	lsls	r6, r3, #31
 8004276:	d508      	bpl.n	800428a <_printf_i+0x14e>
 8004278:	6923      	ldr	r3, [r4, #16]
 800427a:	6861      	ldr	r1, [r4, #4]
 800427c:	4299      	cmp	r1, r3
 800427e:	bfde      	ittt	le
 8004280:	2330      	movle	r3, #48	; 0x30
 8004282:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004286:	f105 35ff 	addle.w	r5, r5, #4294967295
 800428a:	1b52      	subs	r2, r2, r5
 800428c:	6122      	str	r2, [r4, #16]
 800428e:	464b      	mov	r3, r9
 8004290:	4621      	mov	r1, r4
 8004292:	4640      	mov	r0, r8
 8004294:	f8cd a000 	str.w	sl, [sp]
 8004298:	aa03      	add	r2, sp, #12
 800429a:	f7ff fedf 	bl	800405c <_printf_common>
 800429e:	3001      	adds	r0, #1
 80042a0:	d14c      	bne.n	800433c <_printf_i+0x200>
 80042a2:	f04f 30ff 	mov.w	r0, #4294967295
 80042a6:	b004      	add	sp, #16
 80042a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80042ac:	4834      	ldr	r0, [pc, #208]	; (8004380 <_printf_i+0x244>)
 80042ae:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80042b2:	6829      	ldr	r1, [r5, #0]
 80042b4:	6823      	ldr	r3, [r4, #0]
 80042b6:	f851 6b04 	ldr.w	r6, [r1], #4
 80042ba:	6029      	str	r1, [r5, #0]
 80042bc:	061d      	lsls	r5, r3, #24
 80042be:	d514      	bpl.n	80042ea <_printf_i+0x1ae>
 80042c0:	07df      	lsls	r7, r3, #31
 80042c2:	bf44      	itt	mi
 80042c4:	f043 0320 	orrmi.w	r3, r3, #32
 80042c8:	6023      	strmi	r3, [r4, #0]
 80042ca:	b91e      	cbnz	r6, 80042d4 <_printf_i+0x198>
 80042cc:	6823      	ldr	r3, [r4, #0]
 80042ce:	f023 0320 	bic.w	r3, r3, #32
 80042d2:	6023      	str	r3, [r4, #0]
 80042d4:	2310      	movs	r3, #16
 80042d6:	e7af      	b.n	8004238 <_printf_i+0xfc>
 80042d8:	6823      	ldr	r3, [r4, #0]
 80042da:	f043 0320 	orr.w	r3, r3, #32
 80042de:	6023      	str	r3, [r4, #0]
 80042e0:	2378      	movs	r3, #120	; 0x78
 80042e2:	4828      	ldr	r0, [pc, #160]	; (8004384 <_printf_i+0x248>)
 80042e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80042e8:	e7e3      	b.n	80042b2 <_printf_i+0x176>
 80042ea:	0659      	lsls	r1, r3, #25
 80042ec:	bf48      	it	mi
 80042ee:	b2b6      	uxthmi	r6, r6
 80042f0:	e7e6      	b.n	80042c0 <_printf_i+0x184>
 80042f2:	4615      	mov	r5, r2
 80042f4:	e7bb      	b.n	800426e <_printf_i+0x132>
 80042f6:	682b      	ldr	r3, [r5, #0]
 80042f8:	6826      	ldr	r6, [r4, #0]
 80042fa:	1d18      	adds	r0, r3, #4
 80042fc:	6961      	ldr	r1, [r4, #20]
 80042fe:	6028      	str	r0, [r5, #0]
 8004300:	0635      	lsls	r5, r6, #24
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	d501      	bpl.n	800430a <_printf_i+0x1ce>
 8004306:	6019      	str	r1, [r3, #0]
 8004308:	e002      	b.n	8004310 <_printf_i+0x1d4>
 800430a:	0670      	lsls	r0, r6, #25
 800430c:	d5fb      	bpl.n	8004306 <_printf_i+0x1ca>
 800430e:	8019      	strh	r1, [r3, #0]
 8004310:	2300      	movs	r3, #0
 8004312:	4615      	mov	r5, r2
 8004314:	6123      	str	r3, [r4, #16]
 8004316:	e7ba      	b.n	800428e <_printf_i+0x152>
 8004318:	682b      	ldr	r3, [r5, #0]
 800431a:	2100      	movs	r1, #0
 800431c:	1d1a      	adds	r2, r3, #4
 800431e:	602a      	str	r2, [r5, #0]
 8004320:	681d      	ldr	r5, [r3, #0]
 8004322:	6862      	ldr	r2, [r4, #4]
 8004324:	4628      	mov	r0, r5
 8004326:	f000 f82f 	bl	8004388 <memchr>
 800432a:	b108      	cbz	r0, 8004330 <_printf_i+0x1f4>
 800432c:	1b40      	subs	r0, r0, r5
 800432e:	6060      	str	r0, [r4, #4]
 8004330:	6863      	ldr	r3, [r4, #4]
 8004332:	6123      	str	r3, [r4, #16]
 8004334:	2300      	movs	r3, #0
 8004336:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800433a:	e7a8      	b.n	800428e <_printf_i+0x152>
 800433c:	462a      	mov	r2, r5
 800433e:	4649      	mov	r1, r9
 8004340:	4640      	mov	r0, r8
 8004342:	6923      	ldr	r3, [r4, #16]
 8004344:	47d0      	blx	sl
 8004346:	3001      	adds	r0, #1
 8004348:	d0ab      	beq.n	80042a2 <_printf_i+0x166>
 800434a:	6823      	ldr	r3, [r4, #0]
 800434c:	079b      	lsls	r3, r3, #30
 800434e:	d413      	bmi.n	8004378 <_printf_i+0x23c>
 8004350:	68e0      	ldr	r0, [r4, #12]
 8004352:	9b03      	ldr	r3, [sp, #12]
 8004354:	4298      	cmp	r0, r3
 8004356:	bfb8      	it	lt
 8004358:	4618      	movlt	r0, r3
 800435a:	e7a4      	b.n	80042a6 <_printf_i+0x16a>
 800435c:	2301      	movs	r3, #1
 800435e:	4632      	mov	r2, r6
 8004360:	4649      	mov	r1, r9
 8004362:	4640      	mov	r0, r8
 8004364:	47d0      	blx	sl
 8004366:	3001      	adds	r0, #1
 8004368:	d09b      	beq.n	80042a2 <_printf_i+0x166>
 800436a:	3501      	adds	r5, #1
 800436c:	68e3      	ldr	r3, [r4, #12]
 800436e:	9903      	ldr	r1, [sp, #12]
 8004370:	1a5b      	subs	r3, r3, r1
 8004372:	42ab      	cmp	r3, r5
 8004374:	dcf2      	bgt.n	800435c <_printf_i+0x220>
 8004376:	e7eb      	b.n	8004350 <_printf_i+0x214>
 8004378:	2500      	movs	r5, #0
 800437a:	f104 0619 	add.w	r6, r4, #25
 800437e:	e7f5      	b.n	800436c <_printf_i+0x230>
 8004380:	080046b9 	.word	0x080046b9
 8004384:	080046ca 	.word	0x080046ca

08004388 <memchr>:
 8004388:	4603      	mov	r3, r0
 800438a:	b510      	push	{r4, lr}
 800438c:	b2c9      	uxtb	r1, r1
 800438e:	4402      	add	r2, r0
 8004390:	4293      	cmp	r3, r2
 8004392:	4618      	mov	r0, r3
 8004394:	d101      	bne.n	800439a <memchr+0x12>
 8004396:	2000      	movs	r0, #0
 8004398:	e003      	b.n	80043a2 <memchr+0x1a>
 800439a:	7804      	ldrb	r4, [r0, #0]
 800439c:	3301      	adds	r3, #1
 800439e:	428c      	cmp	r4, r1
 80043a0:	d1f6      	bne.n	8004390 <memchr+0x8>
 80043a2:	bd10      	pop	{r4, pc}

080043a4 <memcpy>:
 80043a4:	440a      	add	r2, r1
 80043a6:	4291      	cmp	r1, r2
 80043a8:	f100 33ff 	add.w	r3, r0, #4294967295
 80043ac:	d100      	bne.n	80043b0 <memcpy+0xc>
 80043ae:	4770      	bx	lr
 80043b0:	b510      	push	{r4, lr}
 80043b2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80043b6:	4291      	cmp	r1, r2
 80043b8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80043bc:	d1f9      	bne.n	80043b2 <memcpy+0xe>
 80043be:	bd10      	pop	{r4, pc}

080043c0 <memmove>:
 80043c0:	4288      	cmp	r0, r1
 80043c2:	b510      	push	{r4, lr}
 80043c4:	eb01 0402 	add.w	r4, r1, r2
 80043c8:	d902      	bls.n	80043d0 <memmove+0x10>
 80043ca:	4284      	cmp	r4, r0
 80043cc:	4623      	mov	r3, r4
 80043ce:	d807      	bhi.n	80043e0 <memmove+0x20>
 80043d0:	1e43      	subs	r3, r0, #1
 80043d2:	42a1      	cmp	r1, r4
 80043d4:	d008      	beq.n	80043e8 <memmove+0x28>
 80043d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80043da:	f803 2f01 	strb.w	r2, [r3, #1]!
 80043de:	e7f8      	b.n	80043d2 <memmove+0x12>
 80043e0:	4601      	mov	r1, r0
 80043e2:	4402      	add	r2, r0
 80043e4:	428a      	cmp	r2, r1
 80043e6:	d100      	bne.n	80043ea <memmove+0x2a>
 80043e8:	bd10      	pop	{r4, pc}
 80043ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80043ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80043f2:	e7f7      	b.n	80043e4 <memmove+0x24>

080043f4 <_free_r>:
 80043f4:	b538      	push	{r3, r4, r5, lr}
 80043f6:	4605      	mov	r5, r0
 80043f8:	2900      	cmp	r1, #0
 80043fa:	d040      	beq.n	800447e <_free_r+0x8a>
 80043fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004400:	1f0c      	subs	r4, r1, #4
 8004402:	2b00      	cmp	r3, #0
 8004404:	bfb8      	it	lt
 8004406:	18e4      	addlt	r4, r4, r3
 8004408:	f000 f910 	bl	800462c <__malloc_lock>
 800440c:	4a1c      	ldr	r2, [pc, #112]	; (8004480 <_free_r+0x8c>)
 800440e:	6813      	ldr	r3, [r2, #0]
 8004410:	b933      	cbnz	r3, 8004420 <_free_r+0x2c>
 8004412:	6063      	str	r3, [r4, #4]
 8004414:	6014      	str	r4, [r2, #0]
 8004416:	4628      	mov	r0, r5
 8004418:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800441c:	f000 b90c 	b.w	8004638 <__malloc_unlock>
 8004420:	42a3      	cmp	r3, r4
 8004422:	d908      	bls.n	8004436 <_free_r+0x42>
 8004424:	6820      	ldr	r0, [r4, #0]
 8004426:	1821      	adds	r1, r4, r0
 8004428:	428b      	cmp	r3, r1
 800442a:	bf01      	itttt	eq
 800442c:	6819      	ldreq	r1, [r3, #0]
 800442e:	685b      	ldreq	r3, [r3, #4]
 8004430:	1809      	addeq	r1, r1, r0
 8004432:	6021      	streq	r1, [r4, #0]
 8004434:	e7ed      	b.n	8004412 <_free_r+0x1e>
 8004436:	461a      	mov	r2, r3
 8004438:	685b      	ldr	r3, [r3, #4]
 800443a:	b10b      	cbz	r3, 8004440 <_free_r+0x4c>
 800443c:	42a3      	cmp	r3, r4
 800443e:	d9fa      	bls.n	8004436 <_free_r+0x42>
 8004440:	6811      	ldr	r1, [r2, #0]
 8004442:	1850      	adds	r0, r2, r1
 8004444:	42a0      	cmp	r0, r4
 8004446:	d10b      	bne.n	8004460 <_free_r+0x6c>
 8004448:	6820      	ldr	r0, [r4, #0]
 800444a:	4401      	add	r1, r0
 800444c:	1850      	adds	r0, r2, r1
 800444e:	4283      	cmp	r3, r0
 8004450:	6011      	str	r1, [r2, #0]
 8004452:	d1e0      	bne.n	8004416 <_free_r+0x22>
 8004454:	6818      	ldr	r0, [r3, #0]
 8004456:	685b      	ldr	r3, [r3, #4]
 8004458:	4401      	add	r1, r0
 800445a:	6011      	str	r1, [r2, #0]
 800445c:	6053      	str	r3, [r2, #4]
 800445e:	e7da      	b.n	8004416 <_free_r+0x22>
 8004460:	d902      	bls.n	8004468 <_free_r+0x74>
 8004462:	230c      	movs	r3, #12
 8004464:	602b      	str	r3, [r5, #0]
 8004466:	e7d6      	b.n	8004416 <_free_r+0x22>
 8004468:	6820      	ldr	r0, [r4, #0]
 800446a:	1821      	adds	r1, r4, r0
 800446c:	428b      	cmp	r3, r1
 800446e:	bf01      	itttt	eq
 8004470:	6819      	ldreq	r1, [r3, #0]
 8004472:	685b      	ldreq	r3, [r3, #4]
 8004474:	1809      	addeq	r1, r1, r0
 8004476:	6021      	streq	r1, [r4, #0]
 8004478:	6063      	str	r3, [r4, #4]
 800447a:	6054      	str	r4, [r2, #4]
 800447c:	e7cb      	b.n	8004416 <_free_r+0x22>
 800447e:	bd38      	pop	{r3, r4, r5, pc}
 8004480:	200001f4 	.word	0x200001f4

08004484 <sbrk_aligned>:
 8004484:	b570      	push	{r4, r5, r6, lr}
 8004486:	4e0e      	ldr	r6, [pc, #56]	; (80044c0 <sbrk_aligned+0x3c>)
 8004488:	460c      	mov	r4, r1
 800448a:	6831      	ldr	r1, [r6, #0]
 800448c:	4605      	mov	r5, r0
 800448e:	b911      	cbnz	r1, 8004496 <sbrk_aligned+0x12>
 8004490:	f000 f8bc 	bl	800460c <_sbrk_r>
 8004494:	6030      	str	r0, [r6, #0]
 8004496:	4621      	mov	r1, r4
 8004498:	4628      	mov	r0, r5
 800449a:	f000 f8b7 	bl	800460c <_sbrk_r>
 800449e:	1c43      	adds	r3, r0, #1
 80044a0:	d00a      	beq.n	80044b8 <sbrk_aligned+0x34>
 80044a2:	1cc4      	adds	r4, r0, #3
 80044a4:	f024 0403 	bic.w	r4, r4, #3
 80044a8:	42a0      	cmp	r0, r4
 80044aa:	d007      	beq.n	80044bc <sbrk_aligned+0x38>
 80044ac:	1a21      	subs	r1, r4, r0
 80044ae:	4628      	mov	r0, r5
 80044b0:	f000 f8ac 	bl	800460c <_sbrk_r>
 80044b4:	3001      	adds	r0, #1
 80044b6:	d101      	bne.n	80044bc <sbrk_aligned+0x38>
 80044b8:	f04f 34ff 	mov.w	r4, #4294967295
 80044bc:	4620      	mov	r0, r4
 80044be:	bd70      	pop	{r4, r5, r6, pc}
 80044c0:	200001f8 	.word	0x200001f8

080044c4 <_malloc_r>:
 80044c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044c8:	1ccd      	adds	r5, r1, #3
 80044ca:	f025 0503 	bic.w	r5, r5, #3
 80044ce:	3508      	adds	r5, #8
 80044d0:	2d0c      	cmp	r5, #12
 80044d2:	bf38      	it	cc
 80044d4:	250c      	movcc	r5, #12
 80044d6:	2d00      	cmp	r5, #0
 80044d8:	4607      	mov	r7, r0
 80044da:	db01      	blt.n	80044e0 <_malloc_r+0x1c>
 80044dc:	42a9      	cmp	r1, r5
 80044de:	d905      	bls.n	80044ec <_malloc_r+0x28>
 80044e0:	230c      	movs	r3, #12
 80044e2:	2600      	movs	r6, #0
 80044e4:	603b      	str	r3, [r7, #0]
 80044e6:	4630      	mov	r0, r6
 80044e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044ec:	4e2e      	ldr	r6, [pc, #184]	; (80045a8 <_malloc_r+0xe4>)
 80044ee:	f000 f89d 	bl	800462c <__malloc_lock>
 80044f2:	6833      	ldr	r3, [r6, #0]
 80044f4:	461c      	mov	r4, r3
 80044f6:	bb34      	cbnz	r4, 8004546 <_malloc_r+0x82>
 80044f8:	4629      	mov	r1, r5
 80044fa:	4638      	mov	r0, r7
 80044fc:	f7ff ffc2 	bl	8004484 <sbrk_aligned>
 8004500:	1c43      	adds	r3, r0, #1
 8004502:	4604      	mov	r4, r0
 8004504:	d14d      	bne.n	80045a2 <_malloc_r+0xde>
 8004506:	6834      	ldr	r4, [r6, #0]
 8004508:	4626      	mov	r6, r4
 800450a:	2e00      	cmp	r6, #0
 800450c:	d140      	bne.n	8004590 <_malloc_r+0xcc>
 800450e:	6823      	ldr	r3, [r4, #0]
 8004510:	4631      	mov	r1, r6
 8004512:	4638      	mov	r0, r7
 8004514:	eb04 0803 	add.w	r8, r4, r3
 8004518:	f000 f878 	bl	800460c <_sbrk_r>
 800451c:	4580      	cmp	r8, r0
 800451e:	d13a      	bne.n	8004596 <_malloc_r+0xd2>
 8004520:	6821      	ldr	r1, [r4, #0]
 8004522:	3503      	adds	r5, #3
 8004524:	1a6d      	subs	r5, r5, r1
 8004526:	f025 0503 	bic.w	r5, r5, #3
 800452a:	3508      	adds	r5, #8
 800452c:	2d0c      	cmp	r5, #12
 800452e:	bf38      	it	cc
 8004530:	250c      	movcc	r5, #12
 8004532:	4638      	mov	r0, r7
 8004534:	4629      	mov	r1, r5
 8004536:	f7ff ffa5 	bl	8004484 <sbrk_aligned>
 800453a:	3001      	adds	r0, #1
 800453c:	d02b      	beq.n	8004596 <_malloc_r+0xd2>
 800453e:	6823      	ldr	r3, [r4, #0]
 8004540:	442b      	add	r3, r5
 8004542:	6023      	str	r3, [r4, #0]
 8004544:	e00e      	b.n	8004564 <_malloc_r+0xa0>
 8004546:	6822      	ldr	r2, [r4, #0]
 8004548:	1b52      	subs	r2, r2, r5
 800454a:	d41e      	bmi.n	800458a <_malloc_r+0xc6>
 800454c:	2a0b      	cmp	r2, #11
 800454e:	d916      	bls.n	800457e <_malloc_r+0xba>
 8004550:	1961      	adds	r1, r4, r5
 8004552:	42a3      	cmp	r3, r4
 8004554:	6025      	str	r5, [r4, #0]
 8004556:	bf18      	it	ne
 8004558:	6059      	strne	r1, [r3, #4]
 800455a:	6863      	ldr	r3, [r4, #4]
 800455c:	bf08      	it	eq
 800455e:	6031      	streq	r1, [r6, #0]
 8004560:	5162      	str	r2, [r4, r5]
 8004562:	604b      	str	r3, [r1, #4]
 8004564:	4638      	mov	r0, r7
 8004566:	f104 060b 	add.w	r6, r4, #11
 800456a:	f000 f865 	bl	8004638 <__malloc_unlock>
 800456e:	f026 0607 	bic.w	r6, r6, #7
 8004572:	1d23      	adds	r3, r4, #4
 8004574:	1af2      	subs	r2, r6, r3
 8004576:	d0b6      	beq.n	80044e6 <_malloc_r+0x22>
 8004578:	1b9b      	subs	r3, r3, r6
 800457a:	50a3      	str	r3, [r4, r2]
 800457c:	e7b3      	b.n	80044e6 <_malloc_r+0x22>
 800457e:	6862      	ldr	r2, [r4, #4]
 8004580:	42a3      	cmp	r3, r4
 8004582:	bf0c      	ite	eq
 8004584:	6032      	streq	r2, [r6, #0]
 8004586:	605a      	strne	r2, [r3, #4]
 8004588:	e7ec      	b.n	8004564 <_malloc_r+0xa0>
 800458a:	4623      	mov	r3, r4
 800458c:	6864      	ldr	r4, [r4, #4]
 800458e:	e7b2      	b.n	80044f6 <_malloc_r+0x32>
 8004590:	4634      	mov	r4, r6
 8004592:	6876      	ldr	r6, [r6, #4]
 8004594:	e7b9      	b.n	800450a <_malloc_r+0x46>
 8004596:	230c      	movs	r3, #12
 8004598:	4638      	mov	r0, r7
 800459a:	603b      	str	r3, [r7, #0]
 800459c:	f000 f84c 	bl	8004638 <__malloc_unlock>
 80045a0:	e7a1      	b.n	80044e6 <_malloc_r+0x22>
 80045a2:	6025      	str	r5, [r4, #0]
 80045a4:	e7de      	b.n	8004564 <_malloc_r+0xa0>
 80045a6:	bf00      	nop
 80045a8:	200001f4 	.word	0x200001f4

080045ac <_realloc_r>:
 80045ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80045b0:	4680      	mov	r8, r0
 80045b2:	4614      	mov	r4, r2
 80045b4:	460e      	mov	r6, r1
 80045b6:	b921      	cbnz	r1, 80045c2 <_realloc_r+0x16>
 80045b8:	4611      	mov	r1, r2
 80045ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80045be:	f7ff bf81 	b.w	80044c4 <_malloc_r>
 80045c2:	b92a      	cbnz	r2, 80045d0 <_realloc_r+0x24>
 80045c4:	f7ff ff16 	bl	80043f4 <_free_r>
 80045c8:	4625      	mov	r5, r4
 80045ca:	4628      	mov	r0, r5
 80045cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80045d0:	f000 f838 	bl	8004644 <_malloc_usable_size_r>
 80045d4:	4284      	cmp	r4, r0
 80045d6:	4607      	mov	r7, r0
 80045d8:	d802      	bhi.n	80045e0 <_realloc_r+0x34>
 80045da:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80045de:	d812      	bhi.n	8004606 <_realloc_r+0x5a>
 80045e0:	4621      	mov	r1, r4
 80045e2:	4640      	mov	r0, r8
 80045e4:	f7ff ff6e 	bl	80044c4 <_malloc_r>
 80045e8:	4605      	mov	r5, r0
 80045ea:	2800      	cmp	r0, #0
 80045ec:	d0ed      	beq.n	80045ca <_realloc_r+0x1e>
 80045ee:	42bc      	cmp	r4, r7
 80045f0:	4622      	mov	r2, r4
 80045f2:	4631      	mov	r1, r6
 80045f4:	bf28      	it	cs
 80045f6:	463a      	movcs	r2, r7
 80045f8:	f7ff fed4 	bl	80043a4 <memcpy>
 80045fc:	4631      	mov	r1, r6
 80045fe:	4640      	mov	r0, r8
 8004600:	f7ff fef8 	bl	80043f4 <_free_r>
 8004604:	e7e1      	b.n	80045ca <_realloc_r+0x1e>
 8004606:	4635      	mov	r5, r6
 8004608:	e7df      	b.n	80045ca <_realloc_r+0x1e>
	...

0800460c <_sbrk_r>:
 800460c:	b538      	push	{r3, r4, r5, lr}
 800460e:	2300      	movs	r3, #0
 8004610:	4d05      	ldr	r5, [pc, #20]	; (8004628 <_sbrk_r+0x1c>)
 8004612:	4604      	mov	r4, r0
 8004614:	4608      	mov	r0, r1
 8004616:	602b      	str	r3, [r5, #0]
 8004618:	f7fc fdc0 	bl	800119c <_sbrk>
 800461c:	1c43      	adds	r3, r0, #1
 800461e:	d102      	bne.n	8004626 <_sbrk_r+0x1a>
 8004620:	682b      	ldr	r3, [r5, #0]
 8004622:	b103      	cbz	r3, 8004626 <_sbrk_r+0x1a>
 8004624:	6023      	str	r3, [r4, #0]
 8004626:	bd38      	pop	{r3, r4, r5, pc}
 8004628:	200001fc 	.word	0x200001fc

0800462c <__malloc_lock>:
 800462c:	4801      	ldr	r0, [pc, #4]	; (8004634 <__malloc_lock+0x8>)
 800462e:	f000 b811 	b.w	8004654 <__retarget_lock_acquire_recursive>
 8004632:	bf00      	nop
 8004634:	20000200 	.word	0x20000200

08004638 <__malloc_unlock>:
 8004638:	4801      	ldr	r0, [pc, #4]	; (8004640 <__malloc_unlock+0x8>)
 800463a:	f000 b80c 	b.w	8004656 <__retarget_lock_release_recursive>
 800463e:	bf00      	nop
 8004640:	20000200 	.word	0x20000200

08004644 <_malloc_usable_size_r>:
 8004644:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004648:	1f18      	subs	r0, r3, #4
 800464a:	2b00      	cmp	r3, #0
 800464c:	bfbc      	itt	lt
 800464e:	580b      	ldrlt	r3, [r1, r0]
 8004650:	18c0      	addlt	r0, r0, r3
 8004652:	4770      	bx	lr

08004654 <__retarget_lock_acquire_recursive>:
 8004654:	4770      	bx	lr

08004656 <__retarget_lock_release_recursive>:
 8004656:	4770      	bx	lr

08004658 <_init>:
 8004658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800465a:	bf00      	nop
 800465c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800465e:	bc08      	pop	{r3}
 8004660:	469e      	mov	lr, r3
 8004662:	4770      	bx	lr

08004664 <_fini>:
 8004664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004666:	bf00      	nop
 8004668:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800466a:	bc08      	pop	{r3}
 800466c:	469e      	mov	lr, r3
 800466e:	4770      	bx	lr
