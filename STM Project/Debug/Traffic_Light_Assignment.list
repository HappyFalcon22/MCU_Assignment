
Traffic_Light_Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003440  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  0800354c  0800354c  0001354c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003574  08003574  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  08003574  08003574  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003574  08003574  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003574  08003574  00013574  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003578  08003578  00013578  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  0800357c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000130  20000024  080035a0  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000154  080035a0  00020154  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b7ed  00000000  00000000  0002004d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001fde  00000000  00000000  0002b83a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000d20  00000000  00000000  0002d818  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c20  00000000  00000000  0002e538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000177f4  00000000  00000000  0002f158  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000e954  00000000  00000000  0004694c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000869ba  00000000  00000000  000552a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000dbc5a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000034ac  00000000  00000000  000dbcac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000024 	.word	0x20000024
 8000128:	00000000 	.word	0x00000000
 800012c:	08003534 	.word	0x08003534

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000028 	.word	0x20000028
 8000148:	08003534 	.word	0x08003534

0800014c <button_reading>:
//we define counter for the button is pressed more than 1 second.
static uint16_t counterForButtonPress1s[N0_OF_BUTTONS];

//read 3 button and modify flag buffer when button is pressed
//this function is called in timer interupt
void button_reading(){
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 8000152:	2300      	movs	r3, #0
 8000154:	607b      	str	r3, [r7, #4]
 8000156:	e0a7      	b.n	80002a8 <button_reading+0x15c>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000158:	4a58      	ldr	r2, [pc, #352]	; (80002bc <button_reading+0x170>)
 800015a:	687b      	ldr	r3, [r7, #4]
 800015c:	4413      	add	r3, r2
 800015e:	7819      	ldrb	r1, [r3, #0]
 8000160:	4a57      	ldr	r2, [pc, #348]	; (80002c0 <button_reading+0x174>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	4413      	add	r3, r2
 8000166:	460a      	mov	r2, r1
 8000168:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 800016a:	4a56      	ldr	r2, [pc, #344]	; (80002c4 <button_reading+0x178>)
 800016c:	687b      	ldr	r3, [r7, #4]
 800016e:	4413      	add	r3, r2
 8000170:	7819      	ldrb	r1, [r3, #0]
 8000172:	4a52      	ldr	r2, [pc, #328]	; (80002bc <button_reading+0x170>)
 8000174:	687b      	ldr	r3, [r7, #4]
 8000176:	4413      	add	r3, r2
 8000178:	460a      	mov	r2, r1
 800017a:	701a      	strb	r2, [r3, #0]
		//read raw button to buffer0
		if(i == 0){
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	2b00      	cmp	r3, #0
 8000180:	d10b      	bne.n	800019a <button_reading+0x4e>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON1_GPIO_Port, BUTTON1_Pin);
 8000182:	2102      	movs	r1, #2
 8000184:	4850      	ldr	r0, [pc, #320]	; (80002c8 <button_reading+0x17c>)
 8000186:	f001 fab3 	bl	80016f0 <HAL_GPIO_ReadPin>
 800018a:	4603      	mov	r3, r0
 800018c:	4619      	mov	r1, r3
 800018e:	4a4d      	ldr	r2, [pc, #308]	; (80002c4 <button_reading+0x178>)
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	4413      	add	r3, r2
 8000194:	460a      	mov	r2, r1
 8000196:	701a      	strb	r2, [r3, #0]
 8000198:	e02b      	b.n	80001f2 <button_reading+0xa6>
		}
		else if(i == 1){
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	2b01      	cmp	r3, #1
 800019e:	d10b      	bne.n	80001b8 <button_reading+0x6c>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin);
 80001a0:	2110      	movs	r1, #16
 80001a2:	4849      	ldr	r0, [pc, #292]	; (80002c8 <button_reading+0x17c>)
 80001a4:	f001 faa4 	bl	80016f0 <HAL_GPIO_ReadPin>
 80001a8:	4603      	mov	r3, r0
 80001aa:	4619      	mov	r1, r3
 80001ac:	4a45      	ldr	r2, [pc, #276]	; (80002c4 <button_reading+0x178>)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	4413      	add	r3, r2
 80001b2:	460a      	mov	r2, r1
 80001b4:	701a      	strb	r2, [r3, #0]
 80001b6:	e01c      	b.n	80001f2 <button_reading+0xa6>
		}
		else if(i == 2){
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	2b02      	cmp	r3, #2
 80001bc:	d10b      	bne.n	80001d6 <button_reading+0x8a>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON3_GPIO_Port, BUTTON3_Pin);
 80001be:	2101      	movs	r1, #1
 80001c0:	4842      	ldr	r0, [pc, #264]	; (80002cc <button_reading+0x180>)
 80001c2:	f001 fa95 	bl	80016f0 <HAL_GPIO_ReadPin>
 80001c6:	4603      	mov	r3, r0
 80001c8:	4619      	mov	r1, r3
 80001ca:	4a3e      	ldr	r2, [pc, #248]	; (80002c4 <button_reading+0x178>)
 80001cc:	687b      	ldr	r3, [r7, #4]
 80001ce:	4413      	add	r3, r2
 80001d0:	460a      	mov	r2, r1
 80001d2:	701a      	strb	r2, [r3, #0]
 80001d4:	e00d      	b.n	80001f2 <button_reading+0xa6>
		}
		else if(i == 3){
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	2b03      	cmp	r3, #3
 80001da:	d10a      	bne.n	80001f2 <button_reading+0xa6>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(PEDE_BUTTON_GPIO_Port, PEDE_BUTTON_Pin);
 80001dc:	2101      	movs	r1, #1
 80001de:	483a      	ldr	r0, [pc, #232]	; (80002c8 <button_reading+0x17c>)
 80001e0:	f001 fa86 	bl	80016f0 <HAL_GPIO_ReadPin>
 80001e4:	4603      	mov	r3, r0
 80001e6:	4619      	mov	r1, r3
 80001e8:	4a36      	ldr	r2, [pc, #216]	; (80002c4 <button_reading+0x178>)
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4413      	add	r3, r2
 80001ee:	460a      	mov	r2, r1
 80001f0:	701a      	strb	r2, [r3, #0]
		}
		//if input is stable: 3 recently input is equal
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 80001f2:	4a34      	ldr	r2, [pc, #208]	; (80002c4 <button_reading+0x178>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	4413      	add	r3, r2
 80001f8:	781a      	ldrb	r2, [r3, #0]
 80001fa:	4930      	ldr	r1, [pc, #192]	; (80002bc <button_reading+0x170>)
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	440b      	add	r3, r1
 8000200:	781b      	ldrb	r3, [r3, #0]
 8000202:	429a      	cmp	r2, r3
 8000204:	d14d      	bne.n	80002a2 <button_reading+0x156>
				debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
 8000206:	4a2d      	ldr	r2, [pc, #180]	; (80002bc <button_reading+0x170>)
 8000208:	687b      	ldr	r3, [r7, #4]
 800020a:	4413      	add	r3, r2
 800020c:	781a      	ldrb	r2, [r3, #0]
 800020e:	492c      	ldr	r1, [pc, #176]	; (80002c0 <button_reading+0x174>)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	440b      	add	r3, r1
 8000214:	781b      	ldrb	r3, [r3, #0]
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 8000216:	429a      	cmp	r2, r3
 8000218:	d143      	bne.n	80002a2 <button_reading+0x156>
			//if input stable at present different from previous
			if(buttonBuffer[i] != debounceButtonBuffer2[i]){
 800021a:	4a2d      	ldr	r2, [pc, #180]	; (80002d0 <button_reading+0x184>)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	4413      	add	r3, r2
 8000220:	781a      	ldrb	r2, [r3, #0]
 8000222:	4927      	ldr	r1, [pc, #156]	; (80002c0 <button_reading+0x174>)
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	440b      	add	r3, r1
 8000228:	781b      	ldrb	r3, [r3, #0]
 800022a:	429a      	cmp	r2, r3
 800022c:	d019      	beq.n	8000262 <button_reading+0x116>
				//update input to buffer
				buttonBuffer[i] = debounceButtonBuffer2[i];
 800022e:	4a24      	ldr	r2, [pc, #144]	; (80002c0 <button_reading+0x174>)
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	4413      	add	r3, r2
 8000234:	7819      	ldrb	r1, [r3, #0]
 8000236:	4a26      	ldr	r2, [pc, #152]	; (80002d0 <button_reading+0x184>)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	4413      	add	r3, r2
 800023c:	460a      	mov	r2, r1
 800023e:	701a      	strb	r2, [r3, #0]
				//if input is pressed
				if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000240:	4a23      	ldr	r2, [pc, #140]	; (80002d0 <button_reading+0x184>)
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4413      	add	r3, r2
 8000246:	781b      	ldrb	r3, [r3, #0]
 8000248:	2b00      	cmp	r3, #0
 800024a:	d12a      	bne.n	80002a2 <button_reading+0x156>
					//turn flag on
					flagForButtonPress[i] = 1;
 800024c:	4a21      	ldr	r2, [pc, #132]	; (80002d4 <button_reading+0x188>)
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	4413      	add	r3, r2
 8000252:	2201      	movs	r2, #1
 8000254:	701a      	strb	r2, [r3, #0]
					//set counter
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 8000256:	4a20      	ldr	r2, [pc, #128]	; (80002d8 <button_reading+0x18c>)
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	2164      	movs	r1, #100	; 0x64
 800025c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000260:	e01f      	b.n	80002a2 <button_reading+0x156>
				}
			}
			//if input is stable and no change (present = previous)
			else{
				//decrease counter
				counterForButtonPress1s[i]--;
 8000262:	4a1d      	ldr	r2, [pc, #116]	; (80002d8 <button_reading+0x18c>)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800026a:	3b01      	subs	r3, #1
 800026c:	b299      	uxth	r1, r3
 800026e:	4a1a      	ldr	r2, [pc, #104]	; (80002d8 <button_reading+0x18c>)
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				//when counter is 0, reset counter
				//and if button is press -> turn flag1s on
				if(counterForButtonPress1s[i] == 0){
 8000276:	4a18      	ldr	r2, [pc, #96]	; (80002d8 <button_reading+0x18c>)
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800027e:	2b00      	cmp	r3, #0
 8000280:	d10f      	bne.n	80002a2 <button_reading+0x156>
					if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000282:	4a13      	ldr	r2, [pc, #76]	; (80002d0 <button_reading+0x184>)
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4413      	add	r3, r2
 8000288:	781b      	ldrb	r3, [r3, #0]
 800028a:	2b00      	cmp	r3, #0
 800028c:	d104      	bne.n	8000298 <button_reading+0x14c>
						flagForButtonPress1s[i] = 1;
 800028e:	4a13      	ldr	r2, [pc, #76]	; (80002dc <button_reading+0x190>)
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	4413      	add	r3, r2
 8000294:	2201      	movs	r2, #1
 8000296:	701a      	strb	r2, [r3, #0]
					}
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 8000298:	4a0f      	ldr	r2, [pc, #60]	; (80002d8 <button_reading+0x18c>)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	2164      	movs	r1, #100	; 0x64
 800029e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	3301      	adds	r3, #1
 80002a6:	607b      	str	r3, [r7, #4]
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	2b03      	cmp	r3, #3
 80002ac:	f77f af54 	ble.w	8000158 <button_reading+0xc>
				}
			}
		}
	}
}
 80002b0:	bf00      	nop
 80002b2:	bf00      	nop
 80002b4:	3708      	adds	r7, #8
 80002b6:	46bd      	mov	sp, r7
 80002b8:	bd80      	pop	{r7, pc}
 80002ba:	bf00      	nop
 80002bc:	20000048 	.word	0x20000048
 80002c0:	2000004c 	.word	0x2000004c
 80002c4:	20000044 	.word	0x20000044
 80002c8:	40010800 	.word	0x40010800
 80002cc:	40010c00 	.word	0x40010c00
 80002d0:	20000040 	.word	0x20000040
 80002d4:	20000054 	.word	0x20000054
 80002d8:	20000058 	.word	0x20000058
 80002dc:	20000050 	.word	0x20000050

080002e0 <is_button1_pressed>:

//this function check if Mode_select_button is pressed or not
//and reset its flag
int is_button1_pressed()
{
 80002e0:	b480      	push	{r7}
 80002e2:	af00      	add	r7, sp, #0
	if(flagForButtonPress[0] == 1){
 80002e4:	4b06      	ldr	r3, [pc, #24]	; (8000300 <is_button1_pressed+0x20>)
 80002e6:	781b      	ldrb	r3, [r3, #0]
 80002e8:	2b01      	cmp	r3, #1
 80002ea:	d104      	bne.n	80002f6 <is_button1_pressed+0x16>
		flagForButtonPress[0] = 0;
 80002ec:	4b04      	ldr	r3, [pc, #16]	; (8000300 <is_button1_pressed+0x20>)
 80002ee:	2200      	movs	r2, #0
 80002f0:	701a      	strb	r2, [r3, #0]
		return 1;
 80002f2:	2301      	movs	r3, #1
 80002f4:	e000      	b.n	80002f8 <is_button1_pressed+0x18>
	}
	return 0;
 80002f6:	2300      	movs	r3, #0
}
 80002f8:	4618      	mov	r0, r3
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr
 8000300:	20000054 	.word	0x20000054

08000304 <is_button2_pressed>:

//this fuction check if time_adjust_button is pressed or not
//and reset its flag
int is_button2_pressed()
{
 8000304:	b480      	push	{r7}
 8000306:	af00      	add	r7, sp, #0
	if(flagForButtonPress[1] == 1){
 8000308:	4b06      	ldr	r3, [pc, #24]	; (8000324 <is_button2_pressed+0x20>)
 800030a:	785b      	ldrb	r3, [r3, #1]
 800030c:	2b01      	cmp	r3, #1
 800030e:	d104      	bne.n	800031a <is_button2_pressed+0x16>
		flagForButtonPress[1] = 0;
 8000310:	4b04      	ldr	r3, [pc, #16]	; (8000324 <is_button2_pressed+0x20>)
 8000312:	2200      	movs	r2, #0
 8000314:	705a      	strb	r2, [r3, #1]
		return 1;
 8000316:	2301      	movs	r3, #1
 8000318:	e000      	b.n	800031c <is_button2_pressed+0x18>
	}
	return 0;
 800031a:	2300      	movs	r3, #0
}
 800031c:	4618      	mov	r0, r3
 800031e:	46bd      	mov	sp, r7
 8000320:	bc80      	pop	{r7}
 8000322:	4770      	bx	lr
 8000324:	20000054 	.word	0x20000054

08000328 <is_button3_pressed>:

//this function check if set_button is pressed or not
//and reset its flag
int is_button3_pressed()
{
 8000328:	b480      	push	{r7}
 800032a:	af00      	add	r7, sp, #0
	if(flagForButtonPress[2] == 1){
 800032c:	4b06      	ldr	r3, [pc, #24]	; (8000348 <is_button3_pressed+0x20>)
 800032e:	789b      	ldrb	r3, [r3, #2]
 8000330:	2b01      	cmp	r3, #1
 8000332:	d104      	bne.n	800033e <is_button3_pressed+0x16>
		flagForButtonPress[2] = 0;
 8000334:	4b04      	ldr	r3, [pc, #16]	; (8000348 <is_button3_pressed+0x20>)
 8000336:	2200      	movs	r2, #0
 8000338:	709a      	strb	r2, [r3, #2]
		return 1;
 800033a:	2301      	movs	r3, #1
 800033c:	e000      	b.n	8000340 <is_button3_pressed+0x18>
	}
	return 0;
 800033e:	2300      	movs	r3, #0
}
 8000340:	4618      	mov	r0, r3
 8000342:	46bd      	mov	sp, r7
 8000344:	bc80      	pop	{r7}
 8000346:	4770      	bx	lr
 8000348:	20000054 	.word	0x20000054

0800034c <is_button2_press1s>:
}

//the function check if time_adjust_button is pressed more than 1s or not
//reset the flag and turn on again every 1s if it is keep pressing
int is_button2_press1s()
{
 800034c:	b480      	push	{r7}
 800034e:	af00      	add	r7, sp, #0
	if(flagForButtonPress1s[1]==1){
 8000350:	4b06      	ldr	r3, [pc, #24]	; (800036c <is_button2_press1s+0x20>)
 8000352:	785b      	ldrb	r3, [r3, #1]
 8000354:	2b01      	cmp	r3, #1
 8000356:	d104      	bne.n	8000362 <is_button2_press1s+0x16>
		flagForButtonPress1s[1] = 0;
 8000358:	4b04      	ldr	r3, [pc, #16]	; (800036c <is_button2_press1s+0x20>)
 800035a:	2200      	movs	r2, #0
 800035c:	705a      	strb	r2, [r3, #1]
		return 1;
 800035e:	2301      	movs	r3, #1
 8000360:	e000      	b.n	8000364 <is_button2_press1s+0x18>
	}
	return 0;
 8000362:	2300      	movs	r3, #0
}
 8000364:	4618      	mov	r0, r3
 8000366:	46bd      	mov	sp, r7
 8000368:	bc80      	pop	{r7}
 800036a:	4770      	bx	lr
 800036c:	20000050 	.word	0x20000050

08000370 <fsm_automatic_run>:
 *
 * Timer1: control time of road1
 * Timer2: control time of road2
 */
void fsm_automatic_run()
{
 8000370:	b580      	push	{r7, lr}
 8000372:	af00      	add	r7, sp, #0
	switch(state)
 8000374:	4b61      	ldr	r3, [pc, #388]	; (80004fc <fsm_automatic_run+0x18c>)
 8000376:	781b      	ldrb	r3, [r3, #0]
 8000378:	2b05      	cmp	r3, #5
 800037a:	f200 80b2 	bhi.w	80004e2 <fsm_automatic_run+0x172>
 800037e:	a201      	add	r2, pc, #4	; (adr r2, 8000384 <fsm_automatic_run+0x14>)
 8000380:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000384:	0800039d 	.word	0x0800039d
 8000388:	080003f3 	.word	0x080003f3
 800038c:	08000435 	.word	0x08000435
 8000390:	080004e3 	.word	0x080004e3
 8000394:	08000477 	.word	0x08000477
 8000398:	080004b9 	.word	0x080004b9
	{
	case INIT:
		if(yellow_time + green_time != red_time){
 800039c:	4b58      	ldr	r3, [pc, #352]	; (8000500 <fsm_automatic_run+0x190>)
 800039e:	681a      	ldr	r2, [r3, #0]
 80003a0:	4b58      	ldr	r3, [pc, #352]	; (8000504 <fsm_automatic_run+0x194>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	441a      	add	r2, r3
 80003a6:	4b58      	ldr	r3, [pc, #352]	; (8000508 <fsm_automatic_run+0x198>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	429a      	cmp	r2, r3
 80003ac:	d00f      	beq.n	80003ce <fsm_automatic_run+0x5e>
			//error state
			//trap here until mode_button is pressed
			//and go to RED_ADJUST mode to change value again
			turn_all_led_off();
 80003ae:	f000 fdb7 	bl	8000f20 <turn_all_led_off>
			if(is_button1_pressed()){
 80003b2:	f7ff ff95 	bl	80002e0 <is_button1_pressed>
 80003b6:	4603      	mov	r3, r0
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	f000 8094 	beq.w	80004e6 <fsm_automatic_run+0x176>
				state = RED_ADJUST;
 80003be:	4b4f      	ldr	r3, [pc, #316]	; (80004fc <fsm_automatic_run+0x18c>)
 80003c0:	220b      	movs	r2, #11
 80003c2:	701a      	strb	r2, [r3, #0]
				//reset all button flag
				is_button2_pressed();
 80003c4:	f7ff ff9e 	bl	8000304 <is_button2_pressed>
				is_button3_pressed();
 80003c8:	f7ff ffae 	bl	8000328 <is_button3_pressed>
			}
			break;
 80003cc:	e08b      	b.n	80004e6 <fsm_automatic_run+0x176>
		}
		//no error, prepare for changing to S1
		setTimer1(green_time);
 80003ce:	4b4d      	ldr	r3, [pc, #308]	; (8000504 <fsm_automatic_run+0x194>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	4618      	mov	r0, r3
 80003d4:	f000 fb1a 	bl	8000a0c <setTimer1>
		setTimer2(red_time);
 80003d8:	4b4b      	ldr	r3, [pc, #300]	; (8000508 <fsm_automatic_run+0x198>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	4618      	mov	r0, r3
 80003de:	f000 fb2d 	bl	8000a3c <setTimer2>
		setTimer3(BLINK_TIME);
 80003e2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80003e6:	f000 fb41 	bl	8000a6c <setTimer3>
		state = S1;
 80003ea:	4b44      	ldr	r3, [pc, #272]	; (80004fc <fsm_automatic_run+0x18c>)
 80003ec:	2201      	movs	r2, #1
 80003ee:	701a      	strb	r2, [r3, #0]
		break;
 80003f0:	e082      	b.n	80004f8 <fsm_automatic_run+0x188>
	case S1:
		green1_on();
 80003f2:	f000 fd4d 	bl	8000e90 <green1_on>
		red2_on();
 80003f6:	f000 fd3b 	bl	8000e70 <red2_on>

		//road1 timeout -> turn to state S2
		if(timer1_flag == 1){
 80003fa:	4b44      	ldr	r3, [pc, #272]	; (800050c <fsm_automatic_run+0x19c>)
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	2b01      	cmp	r3, #1
 8000400:	d107      	bne.n	8000412 <fsm_automatic_run+0xa2>
			setTimer1(yellow_time);
 8000402:	4b3f      	ldr	r3, [pc, #252]	; (8000500 <fsm_automatic_run+0x190>)
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4618      	mov	r0, r3
 8000408:	f000 fb00 	bl	8000a0c <setTimer1>
			state = S2;
 800040c:	4b3b      	ldr	r3, [pc, #236]	; (80004fc <fsm_automatic_run+0x18c>)
 800040e:	2202      	movs	r2, #2
 8000410:	701a      	strb	r2, [r3, #0]
		}

		//Mode_button is pressed -> turn to manual: RED_ADJUST
		if(is_button1_pressed()){
 8000412:	f7ff ff65 	bl	80002e0 <is_button1_pressed>
 8000416:	4603      	mov	r3, r0
 8000418:	2b00      	cmp	r3, #0
 800041a:	d066      	beq.n	80004ea <fsm_automatic_run+0x17a>
			state = RED_ADJUST;
 800041c:	4b37      	ldr	r3, [pc, #220]	; (80004fc <fsm_automatic_run+0x18c>)
 800041e:	220b      	movs	r2, #11
 8000420:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000422:	f000 fd11 	bl	8000e48 <red1_on>
			red2_on();
 8000426:	f000 fd23 	bl	8000e70 <red2_on>
			//reset all button flag
			is_button2_pressed();
 800042a:	f7ff ff6b 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 800042e:	f7ff ff7b 	bl	8000328 <is_button3_pressed>
		}
		break;
 8000432:	e05a      	b.n	80004ea <fsm_automatic_run+0x17a>
	case S2:
		yellow1_on();
 8000434:	f000 fd50 	bl	8000ed8 <yellow1_on>
		red2_on();
 8000438:	f000 fd1a 	bl	8000e70 <red2_on>

		//road1 timeout -> turn to state S3
		if(timer1_flag == 1){
 800043c:	4b33      	ldr	r3, [pc, #204]	; (800050c <fsm_automatic_run+0x19c>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	2b01      	cmp	r3, #1
 8000442:	d107      	bne.n	8000454 <fsm_automatic_run+0xe4>
			setTimer1(red_time);
 8000444:	4b30      	ldr	r3, [pc, #192]	; (8000508 <fsm_automatic_run+0x198>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4618      	mov	r0, r3
 800044a:	f000 fadf 	bl	8000a0c <setTimer1>
			state = S3;
 800044e:	4b2b      	ldr	r3, [pc, #172]	; (80004fc <fsm_automatic_run+0x18c>)
 8000450:	2204      	movs	r2, #4
 8000452:	701a      	strb	r2, [r3, #0]
		}

		//Mode_button is pressed -> turn to RED_ADJUST
		if(is_button1_pressed()){
 8000454:	f7ff ff44 	bl	80002e0 <is_button1_pressed>
 8000458:	4603      	mov	r3, r0
 800045a:	2b00      	cmp	r3, #0
 800045c:	d047      	beq.n	80004ee <fsm_automatic_run+0x17e>
			state = RED_ADJUST;
 800045e:	4b27      	ldr	r3, [pc, #156]	; (80004fc <fsm_automatic_run+0x18c>)
 8000460:	220b      	movs	r2, #11
 8000462:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000464:	f000 fcf0 	bl	8000e48 <red1_on>
			red2_on();
 8000468:	f000 fd02 	bl	8000e70 <red2_on>
			//reset all button flag
			is_button2_pressed();
 800046c:	f7ff ff4a 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 8000470:	f7ff ff5a 	bl	8000328 <is_button3_pressed>
		}
		break;
 8000474:	e03b      	b.n	80004ee <fsm_automatic_run+0x17e>
	case S3:
		red1_on();
 8000476:	f000 fce7 	bl	8000e48 <red1_on>
		green2_on();
 800047a:	f000 fd1d 	bl	8000eb8 <green2_on>

		//road2 timeout -> turn to state S4
		if(timer2_flag == 1){
 800047e:	4b24      	ldr	r3, [pc, #144]	; (8000510 <fsm_automatic_run+0x1a0>)
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	2b01      	cmp	r3, #1
 8000484:	d107      	bne.n	8000496 <fsm_automatic_run+0x126>
			setTimer2(yellow_time);
 8000486:	4b1e      	ldr	r3, [pc, #120]	; (8000500 <fsm_automatic_run+0x190>)
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	4618      	mov	r0, r3
 800048c:	f000 fad6 	bl	8000a3c <setTimer2>
			state = S4;
 8000490:	4b1a      	ldr	r3, [pc, #104]	; (80004fc <fsm_automatic_run+0x18c>)
 8000492:	2205      	movs	r2, #5
 8000494:	701a      	strb	r2, [r3, #0]
		}

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 8000496:	f7ff ff23 	bl	80002e0 <is_button1_pressed>
 800049a:	4603      	mov	r3, r0
 800049c:	2b00      	cmp	r3, #0
 800049e:	d028      	beq.n	80004f2 <fsm_automatic_run+0x182>
			state = RED_ADJUST;
 80004a0:	4b16      	ldr	r3, [pc, #88]	; (80004fc <fsm_automatic_run+0x18c>)
 80004a2:	220b      	movs	r2, #11
 80004a4:	701a      	strb	r2, [r3, #0]
			red1_on();
 80004a6:	f000 fccf 	bl	8000e48 <red1_on>
			red2_on();
 80004aa:	f000 fce1 	bl	8000e70 <red2_on>
			//reset all button flag
			is_button2_pressed();
 80004ae:	f7ff ff29 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 80004b2:	f7ff ff39 	bl	8000328 <is_button3_pressed>
		}
		break;
 80004b6:	e01c      	b.n	80004f2 <fsm_automatic_run+0x182>
	case S4:
		red1_on();
 80004b8:	f000 fcc6 	bl	8000e48 <red1_on>
		yellow2_on();
 80004bc:	f000 fd20 	bl	8000f00 <yellow2_on>

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 80004c0:	f7ff ff0e 	bl	80002e0 <is_button1_pressed>
 80004c4:	4603      	mov	r3, r0
 80004c6:	2b00      	cmp	r3, #0
 80004c8:	d015      	beq.n	80004f6 <fsm_automatic_run+0x186>
			state = RED_ADJUST;
 80004ca:	4b0c      	ldr	r3, [pc, #48]	; (80004fc <fsm_automatic_run+0x18c>)
 80004cc:	220b      	movs	r2, #11
 80004ce:	701a      	strb	r2, [r3, #0]
			red1_on();
 80004d0:	f000 fcba 	bl	8000e48 <red1_on>
			red2_on();
 80004d4:	f000 fccc 	bl	8000e70 <red2_on>
			//reset all button flag
			is_button2_pressed();
 80004d8:	f7ff ff14 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 80004dc:	f7ff ff24 	bl	8000328 <is_button3_pressed>
		}
		break;
 80004e0:	e009      	b.n	80004f6 <fsm_automatic_run+0x186>
	default:
		break;
 80004e2:	bf00      	nop
 80004e4:	e008      	b.n	80004f8 <fsm_automatic_run+0x188>
			break;
 80004e6:	bf00      	nop
 80004e8:	e006      	b.n	80004f8 <fsm_automatic_run+0x188>
		break;
 80004ea:	bf00      	nop
 80004ec:	e004      	b.n	80004f8 <fsm_automatic_run+0x188>
		break;
 80004ee:	bf00      	nop
 80004f0:	e002      	b.n	80004f8 <fsm_automatic_run+0x188>
		break;
 80004f2:	bf00      	nop
 80004f4:	e000      	b.n	80004f8 <fsm_automatic_run+0x188>
		break;
 80004f6:	bf00      	nop
	}
}
 80004f8:	bf00      	nop
 80004fa:	bd80      	pop	{r7, pc}
 80004fc:	20000060 	.word	0x20000060
 8000500:	20000008 	.word	0x20000008
 8000504:	20000004 	.word	0x20000004
 8000508:	20000000 	.word	0x20000000
 800050c:	20000138 	.word	0x20000138
 8000510:	20000140 	.word	0x20000140

08000514 <fsm_manual_run>:
 * Button1: change mode AUTO -> RED_ADJUST -> YELLOW_ADJUST -> GREEN_ADJUST
 * Button2: change time corresponding to mode
 * Button3: save time
 */
void fsm_manual_run()
{
 8000514:	b580      	push	{r7, lr}
 8000516:	af00      	add	r7, sp, #0
	switch(state)
 8000518:	4b57      	ldr	r3, [pc, #348]	; (8000678 <fsm_manual_run+0x164>)
 800051a:	781b      	ldrb	r3, [r3, #0]
 800051c:	2b0d      	cmp	r3, #13
 800051e:	d03c      	beq.n	800059a <fsm_manual_run+0x86>
 8000520:	2b0d      	cmp	r3, #13
 8000522:	f300 80a0 	bgt.w	8000666 <fsm_manual_run+0x152>
 8000526:	2b0b      	cmp	r3, #11
 8000528:	d068      	beq.n	80005fc <fsm_manual_run+0xe8>
 800052a:	2b0c      	cmp	r3, #12
 800052c:	f040 809b 	bne.w	8000666 <fsm_manual_run+0x152>
	{
	case YELLOW_ADJUST:
		yellow_blink();
 8000530:	f000 fc66 	bl	8000e00 <yellow_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000534:	f7ff fee6 	bl	8000304 <is_button2_pressed>
 8000538:	4603      	mov	r3, r0
 800053a:	2b00      	cmp	r3, #0
 800053c:	d104      	bne.n	8000548 <fsm_manual_run+0x34>
 800053e:	f7ff ff05 	bl	800034c <is_button2_press1s>
 8000542:	4603      	mov	r3, r0
 8000544:	2b00      	cmp	r3, #0
 8000546:	d00e      	beq.n	8000566 <fsm_manual_run+0x52>
			temp_yellow_time = temp_yellow_time% 30000 + 1000;
 8000548:	4b4c      	ldr	r3, [pc, #304]	; (800067c <fsm_manual_run+0x168>)
 800054a:	681a      	ldr	r2, [r3, #0]
 800054c:	4b4c      	ldr	r3, [pc, #304]	; (8000680 <fsm_manual_run+0x16c>)
 800054e:	fba3 1302 	umull	r1, r3, r3, r2
 8000552:	0b5b      	lsrs	r3, r3, #13
 8000554:	f247 5130 	movw	r1, #30000	; 0x7530
 8000558:	fb01 f303 	mul.w	r3, r1, r3
 800055c:	1ad3      	subs	r3, r2, r3
 800055e:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000562:	4a46      	ldr	r2, [pc, #280]	; (800067c <fsm_manual_run+0x168>)
 8000564:	6013      	str	r3, [r2, #0]
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000566:	f7ff fedf 	bl	8000328 <is_button3_pressed>
 800056a:	4603      	mov	r3, r0
 800056c:	2b00      	cmp	r3, #0
 800056e:	d003      	beq.n	8000578 <fsm_manual_run+0x64>
			yellow_time = temp_yellow_time;
 8000570:	4b42      	ldr	r3, [pc, #264]	; (800067c <fsm_manual_run+0x168>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a43      	ldr	r2, [pc, #268]	; (8000684 <fsm_manual_run+0x170>)
 8000576:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to GREEN_ADJUST
		if(is_button1_pressed()){
 8000578:	f7ff feb2 	bl	80002e0 <is_button1_pressed>
 800057c:	4603      	mov	r3, r0
 800057e:	2b00      	cmp	r3, #0
 8000580:	d073      	beq.n	800066a <fsm_manual_run+0x156>
			state = GREEN_ADJUST;
 8000582:	4b3d      	ldr	r3, [pc, #244]	; (8000678 <fsm_manual_run+0x164>)
 8000584:	220d      	movs	r2, #13
 8000586:	701a      	strb	r2, [r3, #0]
			green1_on();
 8000588:	f000 fc82 	bl	8000e90 <green1_on>
			green2_on();
 800058c:	f000 fc94 	bl	8000eb8 <green2_on>
			//reset all button flag
			is_button2_pressed();
 8000590:	f7ff feb8 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 8000594:	f7ff fec8 	bl	8000328 <is_button3_pressed>
		}
		break;
 8000598:	e067      	b.n	800066a <fsm_manual_run+0x156>
	case GREEN_ADJUST:
		green_blink();
 800059a:	f000 fbfd 	bl	8000d98 <green_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 800059e:	f7ff feb1 	bl	8000304 <is_button2_pressed>
 80005a2:	4603      	mov	r3, r0
 80005a4:	2b00      	cmp	r3, #0
 80005a6:	d104      	bne.n	80005b2 <fsm_manual_run+0x9e>
 80005a8:	f7ff fed0 	bl	800034c <is_button2_press1s>
 80005ac:	4603      	mov	r3, r0
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	d00e      	beq.n	80005d0 <fsm_manual_run+0xbc>
			temp_green_time = temp_green_time% 30000 + 1000;
 80005b2:	4b35      	ldr	r3, [pc, #212]	; (8000688 <fsm_manual_run+0x174>)
 80005b4:	681a      	ldr	r2, [r3, #0]
 80005b6:	4b32      	ldr	r3, [pc, #200]	; (8000680 <fsm_manual_run+0x16c>)
 80005b8:	fba3 1302 	umull	r1, r3, r3, r2
 80005bc:	0b5b      	lsrs	r3, r3, #13
 80005be:	f247 5130 	movw	r1, #30000	; 0x7530
 80005c2:	fb01 f303 	mul.w	r3, r1, r3
 80005c6:	1ad3      	subs	r3, r2, r3
 80005c8:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80005cc:	4a2e      	ldr	r2, [pc, #184]	; (8000688 <fsm_manual_run+0x174>)
 80005ce:	6013      	str	r3, [r2, #0]
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 80005d0:	f7ff feaa 	bl	8000328 <is_button3_pressed>
 80005d4:	4603      	mov	r3, r0
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	d003      	beq.n	80005e2 <fsm_manual_run+0xce>
			green_time = temp_green_time;
 80005da:	4b2b      	ldr	r3, [pc, #172]	; (8000688 <fsm_manual_run+0x174>)
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a2b      	ldr	r2, [pc, #172]	; (800068c <fsm_manual_run+0x178>)
 80005e0:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to INIT
		if(is_button1_pressed()){
 80005e2:	f7ff fe7d 	bl	80002e0 <is_button1_pressed>
 80005e6:	4603      	mov	r3, r0
 80005e8:	2b00      	cmp	r3, #0
 80005ea:	d040      	beq.n	800066e <fsm_manual_run+0x15a>
			state = INIT;
 80005ec:	4b22      	ldr	r3, [pc, #136]	; (8000678 <fsm_manual_run+0x164>)
 80005ee:	2200      	movs	r2, #0
 80005f0:	701a      	strb	r2, [r3, #0]
			//reset all button flag
			is_button2_pressed();
 80005f2:	f7ff fe87 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 80005f6:	f7ff fe97 	bl	8000328 <is_button3_pressed>
		}
		break;
 80005fa:	e038      	b.n	800066e <fsm_manual_run+0x15a>
	case RED_ADJUST:
		red_blink();
 80005fc:	f000 fbe4 	bl	8000dc8 <red_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000600:	f7ff fe80 	bl	8000304 <is_button2_pressed>
 8000604:	4603      	mov	r3, r0
 8000606:	2b00      	cmp	r3, #0
 8000608:	d104      	bne.n	8000614 <fsm_manual_run+0x100>
 800060a:	f7ff fe9f 	bl	800034c <is_button2_press1s>
 800060e:	4603      	mov	r3, r0
 8000610:	2b00      	cmp	r3, #0
 8000612:	d00e      	beq.n	8000632 <fsm_manual_run+0x11e>
			temp_red_time = temp_red_time% 30000 + 1000;
 8000614:	4b1e      	ldr	r3, [pc, #120]	; (8000690 <fsm_manual_run+0x17c>)
 8000616:	681a      	ldr	r2, [r3, #0]
 8000618:	4b19      	ldr	r3, [pc, #100]	; (8000680 <fsm_manual_run+0x16c>)
 800061a:	fba3 1302 	umull	r1, r3, r3, r2
 800061e:	0b5b      	lsrs	r3, r3, #13
 8000620:	f247 5130 	movw	r1, #30000	; 0x7530
 8000624:	fb01 f303 	mul.w	r3, r1, r3
 8000628:	1ad3      	subs	r3, r2, r3
 800062a:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 800062e:	4a18      	ldr	r2, [pc, #96]	; (8000690 <fsm_manual_run+0x17c>)
 8000630:	6013      	str	r3, [r2, #0]
		}
		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000632:	f7ff fe79 	bl	8000328 <is_button3_pressed>
 8000636:	4603      	mov	r3, r0
 8000638:	2b00      	cmp	r3, #0
 800063a:	d003      	beq.n	8000644 <fsm_manual_run+0x130>
			red_time = temp_red_time;
 800063c:	4b14      	ldr	r3, [pc, #80]	; (8000690 <fsm_manual_run+0x17c>)
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	4a14      	ldr	r2, [pc, #80]	; (8000694 <fsm_manual_run+0x180>)
 8000642:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to YELLOW_ADJUST
		if(is_button1_pressed()){
 8000644:	f7ff fe4c 	bl	80002e0 <is_button1_pressed>
 8000648:	4603      	mov	r3, r0
 800064a:	2b00      	cmp	r3, #0
 800064c:	d011      	beq.n	8000672 <fsm_manual_run+0x15e>
			state = YELLOW_ADJUST;
 800064e:	4b0a      	ldr	r3, [pc, #40]	; (8000678 <fsm_manual_run+0x164>)
 8000650:	220c      	movs	r2, #12
 8000652:	701a      	strb	r2, [r3, #0]
			yellow1_on();
 8000654:	f000 fc40 	bl	8000ed8 <yellow1_on>
			yellow2_on();
 8000658:	f000 fc52 	bl	8000f00 <yellow2_on>
			//reset all button flag
			is_button2_pressed();
 800065c:	f7ff fe52 	bl	8000304 <is_button2_pressed>
			is_button3_pressed();
 8000660:	f7ff fe62 	bl	8000328 <is_button3_pressed>
		}
		break;
 8000664:	e005      	b.n	8000672 <fsm_manual_run+0x15e>
	default:
		break;
 8000666:	bf00      	nop
 8000668:	e004      	b.n	8000674 <fsm_manual_run+0x160>
		break;
 800066a:	bf00      	nop
 800066c:	e002      	b.n	8000674 <fsm_manual_run+0x160>
		break;
 800066e:	bf00      	nop
 8000670:	e000      	b.n	8000674 <fsm_manual_run+0x160>
		break;
 8000672:	bf00      	nop
	}
}
 8000674:	bf00      	nop
 8000676:	bd80      	pop	{r7, pc}
 8000678:	20000060 	.word	0x20000060
 800067c:	20000014 	.word	0x20000014
 8000680:	45e7b273 	.word	0x45e7b273
 8000684:	20000008 	.word	0x20000008
 8000688:	20000010 	.word	0x20000010
 800068c:	20000004 	.word	0x20000004
 8000690:	2000000c 	.word	0x2000000c
 8000694:	20000000 	.word	0x20000000

08000698 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800069c:	f000 fc84 	bl	8000fa8 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 80006a0:	f000 f812 	bl	80006c8 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 80006a4:	f000 f93e 	bl	8000924 <MX_GPIO_Init>
	MX_TIM2_Init();
 80006a8:	f000 f850 	bl	800074c <MX_TIM2_Init>
	MX_TIM3_Init();
 80006ac:	f000 f89a 	bl	80007e4 <MX_TIM3_Init>
	MX_USART2_UART_Init();
 80006b0:	f000 f90e 	bl	80008d0 <MX_USART2_UART_Init>
	/* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start_IT(&htim2);
 80006b4:	4803      	ldr	r0, [pc, #12]	; (80006c4 <main+0x2c>)
 80006b6:	f001 fccd 	bl	8002054 <HAL_TIM_Base_Start_IT>

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */
	while (1)
	{
		fsm_automatic_run();
 80006ba:	f7ff fe59 	bl	8000370 <fsm_automatic_run>
		fsm_manual_run();
 80006be:	f7ff ff29 	bl	8000514 <fsm_manual_run>
		fsm_automatic_run();
 80006c2:	e7fa      	b.n	80006ba <main+0x22>
 80006c4:	20000064 	.word	0x20000064

080006c8 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b090      	sub	sp, #64	; 0x40
 80006cc:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006ce:	f107 0318 	add.w	r3, r7, #24
 80006d2:	2228      	movs	r2, #40	; 0x28
 80006d4:	2100      	movs	r1, #0
 80006d6:	4618      	mov	r0, r3
 80006d8:	f002 ff24 	bl	8003524 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006dc:	1d3b      	adds	r3, r7, #4
 80006de:	2200      	movs	r2, #0
 80006e0:	601a      	str	r2, [r3, #0]
 80006e2:	605a      	str	r2, [r3, #4]
 80006e4:	609a      	str	r2, [r3, #8]
 80006e6:	60da      	str	r2, [r3, #12]
 80006e8:	611a      	str	r2, [r3, #16]

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80006ea:	2302      	movs	r3, #2
 80006ec:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006ee:	2301      	movs	r3, #1
 80006f0:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80006f2:	2310      	movs	r3, #16
 80006f4:	62fb      	str	r3, [r7, #44]	; 0x2c
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80006f6:	2302      	movs	r3, #2
 80006f8:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 80006fa:	2300      	movs	r3, #0
 80006fc:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 80006fe:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000702:	63fb      	str	r3, [r7, #60]	; 0x3c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000704:	f107 0318 	add.w	r3, r7, #24
 8000708:	4618      	mov	r0, r3
 800070a:	f001 f839 	bl	8001780 <HAL_RCC_OscConfig>
 800070e:	4603      	mov	r3, r0
 8000710:	2b00      	cmp	r3, #0
 8000712:	d001      	beq.n	8000718 <SystemClock_Config+0x50>
	{
		Error_Handler();
 8000714:	f000 f974 	bl	8000a00 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000718:	230f      	movs	r3, #15
 800071a:	607b      	str	r3, [r7, #4]
			|RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800071c:	2302      	movs	r3, #2
 800071e:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000720:	2300      	movs	r3, #0
 8000722:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000724:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000728:	613b      	str	r3, [r7, #16]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800072a:	2300      	movs	r3, #0
 800072c:	617b      	str	r3, [r7, #20]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800072e:	1d3b      	adds	r3, r7, #4
 8000730:	2102      	movs	r1, #2
 8000732:	4618      	mov	r0, r3
 8000734:	f001 faa6 	bl	8001c84 <HAL_RCC_ClockConfig>
 8000738:	4603      	mov	r3, r0
 800073a:	2b00      	cmp	r3, #0
 800073c:	d001      	beq.n	8000742 <SystemClock_Config+0x7a>
	{
		Error_Handler();
 800073e:	f000 f95f 	bl	8000a00 <Error_Handler>
	}
}
 8000742:	bf00      	nop
 8000744:	3740      	adds	r7, #64	; 0x40
 8000746:	46bd      	mov	sp, r7
 8000748:	bd80      	pop	{r7, pc}
	...

0800074c <MX_TIM2_Init>:
 * @brief TIM2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM2_Init(void)
{
 800074c:	b580      	push	{r7, lr}
 800074e:	b086      	sub	sp, #24
 8000750:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000752:	f107 0308 	add.w	r3, r7, #8
 8000756:	2200      	movs	r2, #0
 8000758:	601a      	str	r2, [r3, #0]
 800075a:	605a      	str	r2, [r3, #4]
 800075c:	609a      	str	r2, [r3, #8]
 800075e:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000760:	463b      	mov	r3, r7
 8000762:	2200      	movs	r2, #0
 8000764:	601a      	str	r2, [r3, #0]
 8000766:	605a      	str	r2, [r3, #4]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 8000768:	4b1d      	ldr	r3, [pc, #116]	; (80007e0 <MX_TIM2_Init+0x94>)
 800076a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800076e:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 63;
 8000770:	4b1b      	ldr	r3, [pc, #108]	; (80007e0 <MX_TIM2_Init+0x94>)
 8000772:	223f      	movs	r2, #63	; 0x3f
 8000774:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000776:	4b1a      	ldr	r3, [pc, #104]	; (80007e0 <MX_TIM2_Init+0x94>)
 8000778:	2200      	movs	r2, #0
 800077a:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 999;
 800077c:	4b18      	ldr	r3, [pc, #96]	; (80007e0 <MX_TIM2_Init+0x94>)
 800077e:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000782:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000784:	4b16      	ldr	r3, [pc, #88]	; (80007e0 <MX_TIM2_Init+0x94>)
 8000786:	2200      	movs	r2, #0
 8000788:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800078a:	4b15      	ldr	r3, [pc, #84]	; (80007e0 <MX_TIM2_Init+0x94>)
 800078c:	2200      	movs	r2, #0
 800078e:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000790:	4813      	ldr	r0, [pc, #76]	; (80007e0 <MX_TIM2_Init+0x94>)
 8000792:	f001 fc0f 	bl	8001fb4 <HAL_TIM_Base_Init>
 8000796:	4603      	mov	r3, r0
 8000798:	2b00      	cmp	r3, #0
 800079a:	d001      	beq.n	80007a0 <MX_TIM2_Init+0x54>
	{
		Error_Handler();
 800079c:	f000 f930 	bl	8000a00 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80007a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007a4:	60bb      	str	r3, [r7, #8]
	if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80007a6:	f107 0308 	add.w	r3, r7, #8
 80007aa:	4619      	mov	r1, r3
 80007ac:	480c      	ldr	r0, [pc, #48]	; (80007e0 <MX_TIM2_Init+0x94>)
 80007ae:	f001 fec1 	bl	8002534 <HAL_TIM_ConfigClockSource>
 80007b2:	4603      	mov	r3, r0
 80007b4:	2b00      	cmp	r3, #0
 80007b6:	d001      	beq.n	80007bc <MX_TIM2_Init+0x70>
	{
		Error_Handler();
 80007b8:	f000 f922 	bl	8000a00 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80007bc:	2300      	movs	r3, #0
 80007be:	603b      	str	r3, [r7, #0]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80007c0:	2300      	movs	r3, #0
 80007c2:	607b      	str	r3, [r7, #4]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80007c4:	463b      	mov	r3, r7
 80007c6:	4619      	mov	r1, r3
 80007c8:	4805      	ldr	r0, [pc, #20]	; (80007e0 <MX_TIM2_Init+0x94>)
 80007ca:	f002 fa1b 	bl	8002c04 <HAL_TIMEx_MasterConfigSynchronization>
 80007ce:	4603      	mov	r3, r0
 80007d0:	2b00      	cmp	r3, #0
 80007d2:	d001      	beq.n	80007d8 <MX_TIM2_Init+0x8c>
	{
		Error_Handler();
 80007d4:	f000 f914 	bl	8000a00 <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */

}
 80007d8:	bf00      	nop
 80007da:	3718      	adds	r7, #24
 80007dc:	46bd      	mov	sp, r7
 80007de:	bd80      	pop	{r7, pc}
 80007e0:	20000064 	.word	0x20000064

080007e4 <MX_TIM3_Init>:
 * @brief TIM3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM3_Init(void)
{
 80007e4:	b580      	push	{r7, lr}
 80007e6:	b08e      	sub	sp, #56	; 0x38
 80007e8:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM3_Init 0 */

	/* USER CODE END TIM3_Init 0 */

	TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80007ea:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80007ee:	2200      	movs	r2, #0
 80007f0:	601a      	str	r2, [r3, #0]
 80007f2:	605a      	str	r2, [r3, #4]
 80007f4:	609a      	str	r2, [r3, #8]
 80007f6:	60da      	str	r2, [r3, #12]
	TIM_MasterConfigTypeDef sMasterConfig = {0};
 80007f8:	f107 0320 	add.w	r3, r7, #32
 80007fc:	2200      	movs	r2, #0
 80007fe:	601a      	str	r2, [r3, #0]
 8000800:	605a      	str	r2, [r3, #4]
	TIM_OC_InitTypeDef sConfigOC = {0};
 8000802:	1d3b      	adds	r3, r7, #4
 8000804:	2200      	movs	r2, #0
 8000806:	601a      	str	r2, [r3, #0]
 8000808:	605a      	str	r2, [r3, #4]
 800080a:	609a      	str	r2, [r3, #8]
 800080c:	60da      	str	r2, [r3, #12]
 800080e:	611a      	str	r2, [r3, #16]
 8000810:	615a      	str	r2, [r3, #20]
 8000812:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM3_Init 1 */

	/* USER CODE END TIM3_Init 1 */
	htim3.Instance = TIM3;
 8000814:	4b2c      	ldr	r3, [pc, #176]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000816:	4a2d      	ldr	r2, [pc, #180]	; (80008cc <MX_TIM3_Init+0xe8>)
 8000818:	601a      	str	r2, [r3, #0]
	htim3.Init.Prescaler = 63;
 800081a:	4b2b      	ldr	r3, [pc, #172]	; (80008c8 <MX_TIM3_Init+0xe4>)
 800081c:	223f      	movs	r2, #63	; 0x3f
 800081e:	605a      	str	r2, [r3, #4]
	htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000820:	4b29      	ldr	r3, [pc, #164]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000822:	2200      	movs	r2, #0
 8000824:	609a      	str	r2, [r3, #8]
	htim3.Init.Period = 999;
 8000826:	4b28      	ldr	r3, [pc, #160]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000828:	f240 32e7 	movw	r2, #999	; 0x3e7
 800082c:	60da      	str	r2, [r3, #12]
	htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800082e:	4b26      	ldr	r3, [pc, #152]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000830:	2200      	movs	r2, #0
 8000832:	611a      	str	r2, [r3, #16]
	htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000834:	4b24      	ldr	r3, [pc, #144]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000836:	2200      	movs	r2, #0
 8000838:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800083a:	4823      	ldr	r0, [pc, #140]	; (80008c8 <MX_TIM3_Init+0xe4>)
 800083c:	f001 fbba 	bl	8001fb4 <HAL_TIM_Base_Init>
 8000840:	4603      	mov	r3, r0
 8000842:	2b00      	cmp	r3, #0
 8000844:	d001      	beq.n	800084a <MX_TIM3_Init+0x66>
	{
		Error_Handler();
 8000846:	f000 f8db 	bl	8000a00 <Error_Handler>
	}
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800084a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800084e:	62bb      	str	r3, [r7, #40]	; 0x28
	if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000850:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000854:	4619      	mov	r1, r3
 8000856:	481c      	ldr	r0, [pc, #112]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000858:	f001 fe6c 	bl	8002534 <HAL_TIM_ConfigClockSource>
 800085c:	4603      	mov	r3, r0
 800085e:	2b00      	cmp	r3, #0
 8000860:	d001      	beq.n	8000866 <MX_TIM3_Init+0x82>
	{
		Error_Handler();
 8000862:	f000 f8cd 	bl	8000a00 <Error_Handler>
	}
	if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000866:	4818      	ldr	r0, [pc, #96]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000868:	f001 fc46 	bl	80020f8 <HAL_TIM_PWM_Init>
 800086c:	4603      	mov	r3, r0
 800086e:	2b00      	cmp	r3, #0
 8000870:	d001      	beq.n	8000876 <MX_TIM3_Init+0x92>
	{
		Error_Handler();
 8000872:	f000 f8c5 	bl	8000a00 <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000876:	2300      	movs	r3, #0
 8000878:	623b      	str	r3, [r7, #32]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800087a:	2300      	movs	r3, #0
 800087c:	627b      	str	r3, [r7, #36]	; 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800087e:	f107 0320 	add.w	r3, r7, #32
 8000882:	4619      	mov	r1, r3
 8000884:	4810      	ldr	r0, [pc, #64]	; (80008c8 <MX_TIM3_Init+0xe4>)
 8000886:	f002 f9bd 	bl	8002c04 <HAL_TIMEx_MasterConfigSynchronization>
 800088a:	4603      	mov	r3, r0
 800088c:	2b00      	cmp	r3, #0
 800088e:	d001      	beq.n	8000894 <MX_TIM3_Init+0xb0>
	{
		Error_Handler();
 8000890:	f000 f8b6 	bl	8000a00 <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000894:	2360      	movs	r3, #96	; 0x60
 8000896:	607b      	str	r3, [r7, #4]
	sConfigOC.Pulse = 0;
 8000898:	2300      	movs	r3, #0
 800089a:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800089c:	2300      	movs	r3, #0
 800089e:	60fb      	str	r3, [r7, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80008a0:	2300      	movs	r3, #0
 80008a2:	617b      	str	r3, [r7, #20]
	if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80008a4:	1d3b      	adds	r3, r7, #4
 80008a6:	2200      	movs	r2, #0
 80008a8:	4619      	mov	r1, r3
 80008aa:	4807      	ldr	r0, [pc, #28]	; (80008c8 <MX_TIM3_Init+0xe4>)
 80008ac:	f001 fd84 	bl	80023b8 <HAL_TIM_PWM_ConfigChannel>
 80008b0:	4603      	mov	r3, r0
 80008b2:	2b00      	cmp	r3, #0
 80008b4:	d001      	beq.n	80008ba <MX_TIM3_Init+0xd6>
	{
		Error_Handler();
 80008b6:	f000 f8a3 	bl	8000a00 <Error_Handler>
	}
	/* USER CODE BEGIN TIM3_Init 2 */

	/* USER CODE END TIM3_Init 2 */
	HAL_TIM_MspPostInit(&htim3);
 80008ba:	4803      	ldr	r0, [pc, #12]	; (80008c8 <MX_TIM3_Init+0xe4>)
 80008bc:	f000 f9a6 	bl	8000c0c <HAL_TIM_MspPostInit>

}
 80008c0:	bf00      	nop
 80008c2:	3738      	adds	r7, #56	; 0x38
 80008c4:	46bd      	mov	sp, r7
 80008c6:	bd80      	pop	{r7, pc}
 80008c8:	200000ac 	.word	0x200000ac
 80008cc:	40000400 	.word	0x40000400

080008d0 <MX_USART2_UART_Init>:
 * @brief USART2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART2_UART_Init(void)
{
 80008d0:	b580      	push	{r7, lr}
 80008d2:	af00      	add	r7, sp, #0
	/* USER CODE END USART2_Init 0 */

	/* USER CODE BEGIN USART2_Init 1 */

	/* USER CODE END USART2_Init 1 */
	huart2.Instance = USART2;
 80008d4:	4b11      	ldr	r3, [pc, #68]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008d6:	4a12      	ldr	r2, [pc, #72]	; (8000920 <MX_USART2_UART_Init+0x50>)
 80008d8:	601a      	str	r2, [r3, #0]
	huart2.Init.BaudRate = 9600;
 80008da:	4b10      	ldr	r3, [pc, #64]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008dc:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80008e0:	605a      	str	r2, [r3, #4]
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80008e2:	4b0e      	ldr	r3, [pc, #56]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008e4:	2200      	movs	r2, #0
 80008e6:	609a      	str	r2, [r3, #8]
	huart2.Init.StopBits = UART_STOPBITS_1;
 80008e8:	4b0c      	ldr	r3, [pc, #48]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008ea:	2200      	movs	r2, #0
 80008ec:	60da      	str	r2, [r3, #12]
	huart2.Init.Parity = UART_PARITY_NONE;
 80008ee:	4b0b      	ldr	r3, [pc, #44]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008f0:	2200      	movs	r2, #0
 80008f2:	611a      	str	r2, [r3, #16]
	huart2.Init.Mode = UART_MODE_TX_RX;
 80008f4:	4b09      	ldr	r3, [pc, #36]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008f6:	220c      	movs	r2, #12
 80008f8:	615a      	str	r2, [r3, #20]
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80008fa:	4b08      	ldr	r3, [pc, #32]	; (800091c <MX_USART2_UART_Init+0x4c>)
 80008fc:	2200      	movs	r2, #0
 80008fe:	619a      	str	r2, [r3, #24]
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000900:	4b06      	ldr	r3, [pc, #24]	; (800091c <MX_USART2_UART_Init+0x4c>)
 8000902:	2200      	movs	r2, #0
 8000904:	61da      	str	r2, [r3, #28]
	if (HAL_UART_Init(&huart2) != HAL_OK)
 8000906:	4805      	ldr	r0, [pc, #20]	; (800091c <MX_USART2_UART_Init+0x4c>)
 8000908:	f002 f9ec 	bl	8002ce4 <HAL_UART_Init>
 800090c:	4603      	mov	r3, r0
 800090e:	2b00      	cmp	r3, #0
 8000910:	d001      	beq.n	8000916 <MX_USART2_UART_Init+0x46>
	{
		Error_Handler();
 8000912:	f000 f875 	bl	8000a00 <Error_Handler>
	}
	/* USER CODE BEGIN USART2_Init 2 */

	/* USER CODE END USART2_Init 2 */

}
 8000916:	bf00      	nop
 8000918:	bd80      	pop	{r7, pc}
 800091a:	bf00      	nop
 800091c:	200000f4 	.word	0x200000f4
 8000920:	40004400 	.word	0x40004400

08000924 <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	b086      	sub	sp, #24
 8000928:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 800092a:	f107 0308 	add.w	r3, r7, #8
 800092e:	2200      	movs	r2, #0
 8000930:	601a      	str	r2, [r3, #0]
 8000932:	605a      	str	r2, [r3, #4]
 8000934:	609a      	str	r2, [r3, #8]
 8000936:	60da      	str	r2, [r3, #12]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000938:	4b2e      	ldr	r3, [pc, #184]	; (80009f4 <MX_GPIO_Init+0xd0>)
 800093a:	699b      	ldr	r3, [r3, #24]
 800093c:	4a2d      	ldr	r2, [pc, #180]	; (80009f4 <MX_GPIO_Init+0xd0>)
 800093e:	f043 0304 	orr.w	r3, r3, #4
 8000942:	6193      	str	r3, [r2, #24]
 8000944:	4b2b      	ldr	r3, [pc, #172]	; (80009f4 <MX_GPIO_Init+0xd0>)
 8000946:	699b      	ldr	r3, [r3, #24]
 8000948:	f003 0304 	and.w	r3, r3, #4
 800094c:	607b      	str	r3, [r7, #4]
 800094e:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000950:	4b28      	ldr	r3, [pc, #160]	; (80009f4 <MX_GPIO_Init+0xd0>)
 8000952:	699b      	ldr	r3, [r3, #24]
 8000954:	4a27      	ldr	r2, [pc, #156]	; (80009f4 <MX_GPIO_Init+0xd0>)
 8000956:	f043 0308 	orr.w	r3, r3, #8
 800095a:	6193      	str	r3, [r2, #24]
 800095c:	4b25      	ldr	r3, [pc, #148]	; (80009f4 <MX_GPIO_Init+0xd0>)
 800095e:	699b      	ldr	r3, [r3, #24]
 8000960:	f003 0308 	and.w	r3, r3, #8
 8000964:	603b      	str	r3, [r7, #0]
 8000966:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin, GPIO_PIN_SET);
 8000968:	2201      	movs	r2, #1
 800096a:	f44f 6187 	mov.w	r1, #1080	; 0x438
 800096e:	4822      	ldr	r0, [pc, #136]	; (80009f8 <MX_GPIO_Init+0xd4>)
 8000970:	f000 fed5 	bl	800171e <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, PEDE_LIGHT_B_Pin|LIGHT1_A_Pin, GPIO_PIN_SET);
 8000974:	2201      	movs	r2, #1
 8000976:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800097a:	4820      	ldr	r0, [pc, #128]	; (80009fc <MX_GPIO_Init+0xd8>)
 800097c:	f000 fecf 	bl	800171e <HAL_GPIO_WritePin>

	/*Configure GPIO pins : PEDE_BUTTON_Pin BUTTON1_Pin BUTTON2_Pin */
	GPIO_InitStruct.Pin = PEDE_BUTTON_Pin|BUTTON1_Pin|BUTTON2_Pin;
 8000980:	2313      	movs	r3, #19
 8000982:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000984:	2300      	movs	r3, #0
 8000986:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000988:	2301      	movs	r3, #1
 800098a:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800098c:	f107 0308 	add.w	r3, r7, #8
 8000990:	4619      	mov	r1, r3
 8000992:	481a      	ldr	r0, [pc, #104]	; (80009fc <MX_GPIO_Init+0xd8>)
 8000994:	f000 fd28 	bl	80013e8 <HAL_GPIO_Init>

	/*Configure GPIO pin : BUTTON3_Pin */
	GPIO_InitStruct.Pin = BUTTON3_Pin;
 8000998:	2301      	movs	r3, #1
 800099a:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800099c:	2300      	movs	r3, #0
 800099e:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 80009a0:	2301      	movs	r3, #1
 80009a2:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(BUTTON3_GPIO_Port, &GPIO_InitStruct);
 80009a4:	f107 0308 	add.w	r3, r7, #8
 80009a8:	4619      	mov	r1, r3
 80009aa:	4813      	ldr	r0, [pc, #76]	; (80009f8 <MX_GPIO_Init+0xd4>)
 80009ac:	f000 fd1c 	bl	80013e8 <HAL_GPIO_Init>

	/*Configure GPIO pins : PEDE_LIGHT_A_Pin LIGHT1_B_Pin LIGHT2_B_Pin LIGHT2_A_Pin */
	GPIO_InitStruct.Pin = PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin;
 80009b0:	f44f 6387 	mov.w	r3, #1080	; 0x438
 80009b4:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009b6:	2301      	movs	r3, #1
 80009b8:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009ba:	2300      	movs	r3, #0
 80009bc:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009be:	2302      	movs	r3, #2
 80009c0:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80009c2:	f107 0308 	add.w	r3, r7, #8
 80009c6:	4619      	mov	r1, r3
 80009c8:	480b      	ldr	r0, [pc, #44]	; (80009f8 <MX_GPIO_Init+0xd4>)
 80009ca:	f000 fd0d 	bl	80013e8 <HAL_GPIO_Init>

	/*Configure GPIO pins : PEDE_LIGHT_B_Pin LIGHT1_A_Pin */
	GPIO_InitStruct.Pin = PEDE_LIGHT_B_Pin|LIGHT1_A_Pin;
 80009ce:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 80009d2:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009d4:	2301      	movs	r3, #1
 80009d6:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d8:	2300      	movs	r3, #0
 80009da:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009dc:	2302      	movs	r3, #2
 80009de:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80009e0:	f107 0308 	add.w	r3, r7, #8
 80009e4:	4619      	mov	r1, r3
 80009e6:	4805      	ldr	r0, [pc, #20]	; (80009fc <MX_GPIO_Init+0xd8>)
 80009e8:	f000 fcfe 	bl	80013e8 <HAL_GPIO_Init>

}
 80009ec:	bf00      	nop
 80009ee:	3718      	adds	r7, #24
 80009f0:	46bd      	mov	sp, r7
 80009f2:	bd80      	pop	{r7, pc}
 80009f4:	40021000 	.word	0x40021000
 80009f8:	40010c00 	.word	0x40010c00
 80009fc:	40010800 	.word	0x40010800

08000a00 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8000a00:	b480      	push	{r7}
 8000a02:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a04:	b672      	cpsid	i
}
 8000a06:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8000a08:	e7fe      	b.n	8000a08 <Error_Handler+0x8>
	...

08000a0c <setTimer1>:

int timer3_flag = 0;
int timer3_counter = 0;


void setTimer1(uint32_t duration){
 8000a0c:	b480      	push	{r7}
 8000a0e:	b083      	sub	sp, #12
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	6078      	str	r0, [r7, #4]
	timer1_counter = duration/TIMER_CYCLE;
 8000a14:	230a      	movs	r3, #10
 8000a16:	461a      	mov	r2, r3
 8000a18:	687b      	ldr	r3, [r7, #4]
 8000a1a:	fbb3 f3f2 	udiv	r3, r3, r2
 8000a1e:	461a      	mov	r2, r3
 8000a20:	4b04      	ldr	r3, [pc, #16]	; (8000a34 <setTimer1+0x28>)
 8000a22:	601a      	str	r2, [r3, #0]
	timer1_flag = 0;
 8000a24:	4b04      	ldr	r3, [pc, #16]	; (8000a38 <setTimer1+0x2c>)
 8000a26:	2200      	movs	r2, #0
 8000a28:	601a      	str	r2, [r3, #0]
}
 8000a2a:	bf00      	nop
 8000a2c:	370c      	adds	r7, #12
 8000a2e:	46bd      	mov	sp, r7
 8000a30:	bc80      	pop	{r7}
 8000a32:	4770      	bx	lr
 8000a34:	2000013c 	.word	0x2000013c
 8000a38:	20000138 	.word	0x20000138

08000a3c <setTimer2>:

void setTimer2(uint32_t duration){
 8000a3c:	b480      	push	{r7}
 8000a3e:	b083      	sub	sp, #12
 8000a40:	af00      	add	r7, sp, #0
 8000a42:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TIMER_CYCLE;
 8000a44:	230a      	movs	r3, #10
 8000a46:	461a      	mov	r2, r3
 8000a48:	687b      	ldr	r3, [r7, #4]
 8000a4a:	fbb3 f3f2 	udiv	r3, r3, r2
 8000a4e:	461a      	mov	r2, r3
 8000a50:	4b04      	ldr	r3, [pc, #16]	; (8000a64 <setTimer2+0x28>)
 8000a52:	601a      	str	r2, [r3, #0]
	timer2_flag = 0;
 8000a54:	4b04      	ldr	r3, [pc, #16]	; (8000a68 <setTimer2+0x2c>)
 8000a56:	2200      	movs	r2, #0
 8000a58:	601a      	str	r2, [r3, #0]
}
 8000a5a:	bf00      	nop
 8000a5c:	370c      	adds	r7, #12
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	bc80      	pop	{r7}
 8000a62:	4770      	bx	lr
 8000a64:	20000144 	.word	0x20000144
 8000a68:	20000140 	.word	0x20000140

08000a6c <setTimer3>:

void setTimer3(uint32_t duration){
 8000a6c:	b480      	push	{r7}
 8000a6e:	b083      	sub	sp, #12
 8000a70:	af00      	add	r7, sp, #0
 8000a72:	6078      	str	r0, [r7, #4]
	timer3_counter = duration/TIMER_CYCLE;
 8000a74:	230a      	movs	r3, #10
 8000a76:	461a      	mov	r2, r3
 8000a78:	687b      	ldr	r3, [r7, #4]
 8000a7a:	fbb3 f3f2 	udiv	r3, r3, r2
 8000a7e:	461a      	mov	r2, r3
 8000a80:	4b04      	ldr	r3, [pc, #16]	; (8000a94 <setTimer3+0x28>)
 8000a82:	601a      	str	r2, [r3, #0]
	timer3_flag = 0;
 8000a84:	4b04      	ldr	r3, [pc, #16]	; (8000a98 <setTimer3+0x2c>)
 8000a86:	2200      	movs	r2, #0
 8000a88:	601a      	str	r2, [r3, #0]
}
 8000a8a:	bf00      	nop
 8000a8c:	370c      	adds	r7, #12
 8000a8e:	46bd      	mov	sp, r7
 8000a90:	bc80      	pop	{r7}
 8000a92:	4770      	bx	lr
 8000a94:	2000014c 	.word	0x2000014c
 8000a98:	20000148 	.word	0x20000148

08000a9c <timerRun>:


void timerRun(){
 8000a9c:	b480      	push	{r7}
 8000a9e:	af00      	add	r7, sp, #0
	if(timer1_counter >0){
 8000aa0:	4b19      	ldr	r3, [pc, #100]	; (8000b08 <timerRun+0x6c>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	dd0b      	ble.n	8000ac0 <timerRun+0x24>
		timer1_counter--;
 8000aa8:	4b17      	ldr	r3, [pc, #92]	; (8000b08 <timerRun+0x6c>)
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	3b01      	subs	r3, #1
 8000aae:	4a16      	ldr	r2, [pc, #88]	; (8000b08 <timerRun+0x6c>)
 8000ab0:	6013      	str	r3, [r2, #0]
		if(timer1_counter <=0){
 8000ab2:	4b15      	ldr	r3, [pc, #84]	; (8000b08 <timerRun+0x6c>)
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	dc02      	bgt.n	8000ac0 <timerRun+0x24>
			timer1_flag =1;
 8000aba:	4b14      	ldr	r3, [pc, #80]	; (8000b0c <timerRun+0x70>)
 8000abc:	2201      	movs	r2, #1
 8000abe:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer2_counter >0){
 8000ac0:	4b13      	ldr	r3, [pc, #76]	; (8000b10 <timerRun+0x74>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	2b00      	cmp	r3, #0
 8000ac6:	dd0b      	ble.n	8000ae0 <timerRun+0x44>
			timer2_counter--;
 8000ac8:	4b11      	ldr	r3, [pc, #68]	; (8000b10 <timerRun+0x74>)
 8000aca:	681b      	ldr	r3, [r3, #0]
 8000acc:	3b01      	subs	r3, #1
 8000ace:	4a10      	ldr	r2, [pc, #64]	; (8000b10 <timerRun+0x74>)
 8000ad0:	6013      	str	r3, [r2, #0]
			if(timer2_counter <=0){
 8000ad2:	4b0f      	ldr	r3, [pc, #60]	; (8000b10 <timerRun+0x74>)
 8000ad4:	681b      	ldr	r3, [r3, #0]
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	dc02      	bgt.n	8000ae0 <timerRun+0x44>
				timer2_flag =1;
 8000ada:	4b0e      	ldr	r3, [pc, #56]	; (8000b14 <timerRun+0x78>)
 8000adc:	2201      	movs	r2, #1
 8000ade:	601a      	str	r2, [r3, #0]
			}
		}
	if(timer3_counter >0){
 8000ae0:	4b0d      	ldr	r3, [pc, #52]	; (8000b18 <timerRun+0x7c>)
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	dd0b      	ble.n	8000b00 <timerRun+0x64>
			timer3_counter--;
 8000ae8:	4b0b      	ldr	r3, [pc, #44]	; (8000b18 <timerRun+0x7c>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	3b01      	subs	r3, #1
 8000aee:	4a0a      	ldr	r2, [pc, #40]	; (8000b18 <timerRun+0x7c>)
 8000af0:	6013      	str	r3, [r2, #0]
			if(timer3_counter <=0){
 8000af2:	4b09      	ldr	r3, [pc, #36]	; (8000b18 <timerRun+0x7c>)
 8000af4:	681b      	ldr	r3, [r3, #0]
 8000af6:	2b00      	cmp	r3, #0
 8000af8:	dc02      	bgt.n	8000b00 <timerRun+0x64>
				timer3_flag =1;
 8000afa:	4b08      	ldr	r3, [pc, #32]	; (8000b1c <timerRun+0x80>)
 8000afc:	2201      	movs	r2, #1
 8000afe:	601a      	str	r2, [r3, #0]
			}
	}
}
 8000b00:	bf00      	nop
 8000b02:	46bd      	mov	sp, r7
 8000b04:	bc80      	pop	{r7}
 8000b06:	4770      	bx	lr
 8000b08:	2000013c 	.word	0x2000013c
 8000b0c:	20000138 	.word	0x20000138
 8000b10:	20000144 	.word	0x20000144
 8000b14:	20000140 	.word	0x20000140
 8000b18:	2000014c 	.word	0x2000014c
 8000b1c:	20000148 	.word	0x20000148

08000b20 <HAL_TIM_PeriodElapsedCallback>:


void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000b20:	b580      	push	{r7, lr}
 8000b22:	b082      	sub	sp, #8
 8000b24:	af00      	add	r7, sp, #0
 8000b26:	6078      	str	r0, [r7, #4]
		button_reading();
 8000b28:	f7ff fb10 	bl	800014c <button_reading>
		timerRun();
 8000b2c:	f7ff ffb6 	bl	8000a9c <timerRun>
}
 8000b30:	bf00      	nop
 8000b32:	3708      	adds	r7, #8
 8000b34:	46bd      	mov	sp, r7
 8000b36:	bd80      	pop	{r7, pc}

08000b38 <HAL_MspInit>:
 8000b38:	b480      	push	{r7}
 8000b3a:	b085      	sub	sp, #20
 8000b3c:	af00      	add	r7, sp, #0
 8000b3e:	4b15      	ldr	r3, [pc, #84]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b40:	699b      	ldr	r3, [r3, #24]
 8000b42:	4a14      	ldr	r2, [pc, #80]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b44:	f043 0301 	orr.w	r3, r3, #1
 8000b48:	6193      	str	r3, [r2, #24]
 8000b4a:	4b12      	ldr	r3, [pc, #72]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b4c:	699b      	ldr	r3, [r3, #24]
 8000b4e:	f003 0301 	and.w	r3, r3, #1
 8000b52:	60bb      	str	r3, [r7, #8]
 8000b54:	68bb      	ldr	r3, [r7, #8]
 8000b56:	4b0f      	ldr	r3, [pc, #60]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b58:	69db      	ldr	r3, [r3, #28]
 8000b5a:	4a0e      	ldr	r2, [pc, #56]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b5c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000b60:	61d3      	str	r3, [r2, #28]
 8000b62:	4b0c      	ldr	r3, [pc, #48]	; (8000b94 <HAL_MspInit+0x5c>)
 8000b64:	69db      	ldr	r3, [r3, #28]
 8000b66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b6a:	607b      	str	r3, [r7, #4]
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	4b0a      	ldr	r3, [pc, #40]	; (8000b98 <HAL_MspInit+0x60>)
 8000b70:	685b      	ldr	r3, [r3, #4]
 8000b72:	60fb      	str	r3, [r7, #12]
 8000b74:	68fb      	ldr	r3, [r7, #12]
 8000b76:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000b7a:	60fb      	str	r3, [r7, #12]
 8000b7c:	68fb      	ldr	r3, [r7, #12]
 8000b7e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000b82:	60fb      	str	r3, [r7, #12]
 8000b84:	4a04      	ldr	r2, [pc, #16]	; (8000b98 <HAL_MspInit+0x60>)
 8000b86:	68fb      	ldr	r3, [r7, #12]
 8000b88:	6053      	str	r3, [r2, #4]
 8000b8a:	bf00      	nop
 8000b8c:	3714      	adds	r7, #20
 8000b8e:	46bd      	mov	sp, r7
 8000b90:	bc80      	pop	{r7}
 8000b92:	4770      	bx	lr
 8000b94:	40021000 	.word	0x40021000
 8000b98:	40010000 	.word	0x40010000

08000b9c <HAL_TIM_Base_MspInit>:
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	b084      	sub	sp, #16
 8000ba0:	af00      	add	r7, sp, #0
 8000ba2:	6078      	str	r0, [r7, #4]
 8000ba4:	687b      	ldr	r3, [r7, #4]
 8000ba6:	681b      	ldr	r3, [r3, #0]
 8000ba8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000bac:	d114      	bne.n	8000bd8 <HAL_TIM_Base_MspInit+0x3c>
 8000bae:	4b15      	ldr	r3, [pc, #84]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000bb0:	69db      	ldr	r3, [r3, #28]
 8000bb2:	4a14      	ldr	r2, [pc, #80]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000bb4:	f043 0301 	orr.w	r3, r3, #1
 8000bb8:	61d3      	str	r3, [r2, #28]
 8000bba:	4b12      	ldr	r3, [pc, #72]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000bbc:	69db      	ldr	r3, [r3, #28]
 8000bbe:	f003 0301 	and.w	r3, r3, #1
 8000bc2:	60fb      	str	r3, [r7, #12]
 8000bc4:	68fb      	ldr	r3, [r7, #12]
 8000bc6:	2200      	movs	r2, #0
 8000bc8:	2100      	movs	r1, #0
 8000bca:	201c      	movs	r0, #28
 8000bcc:	f000 fb25 	bl	800121a <HAL_NVIC_SetPriority>
 8000bd0:	201c      	movs	r0, #28
 8000bd2:	f000 fb3e 	bl	8001252 <HAL_NVIC_EnableIRQ>
 8000bd6:	e010      	b.n	8000bfa <HAL_TIM_Base_MspInit+0x5e>
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	4a0a      	ldr	r2, [pc, #40]	; (8000c08 <HAL_TIM_Base_MspInit+0x6c>)
 8000bde:	4293      	cmp	r3, r2
 8000be0:	d10b      	bne.n	8000bfa <HAL_TIM_Base_MspInit+0x5e>
 8000be2:	4b08      	ldr	r3, [pc, #32]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000be4:	69db      	ldr	r3, [r3, #28]
 8000be6:	4a07      	ldr	r2, [pc, #28]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000be8:	f043 0302 	orr.w	r3, r3, #2
 8000bec:	61d3      	str	r3, [r2, #28]
 8000bee:	4b05      	ldr	r3, [pc, #20]	; (8000c04 <HAL_TIM_Base_MspInit+0x68>)
 8000bf0:	69db      	ldr	r3, [r3, #28]
 8000bf2:	f003 0302 	and.w	r3, r3, #2
 8000bf6:	60bb      	str	r3, [r7, #8]
 8000bf8:	68bb      	ldr	r3, [r7, #8]
 8000bfa:	bf00      	nop
 8000bfc:	3710      	adds	r7, #16
 8000bfe:	46bd      	mov	sp, r7
 8000c00:	bd80      	pop	{r7, pc}
 8000c02:	bf00      	nop
 8000c04:	40021000 	.word	0x40021000
 8000c08:	40000400 	.word	0x40000400

08000c0c <HAL_TIM_MspPostInit>:
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b088      	sub	sp, #32
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]
 8000c14:	f107 0310 	add.w	r3, r7, #16
 8000c18:	2200      	movs	r2, #0
 8000c1a:	601a      	str	r2, [r3, #0]
 8000c1c:	605a      	str	r2, [r3, #4]
 8000c1e:	609a      	str	r2, [r3, #8]
 8000c20:	60da      	str	r2, [r3, #12]
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	4a0f      	ldr	r2, [pc, #60]	; (8000c64 <HAL_TIM_MspPostInit+0x58>)
 8000c28:	4293      	cmp	r3, r2
 8000c2a:	d117      	bne.n	8000c5c <HAL_TIM_MspPostInit+0x50>
 8000c2c:	4b0e      	ldr	r3, [pc, #56]	; (8000c68 <HAL_TIM_MspPostInit+0x5c>)
 8000c2e:	699b      	ldr	r3, [r3, #24]
 8000c30:	4a0d      	ldr	r2, [pc, #52]	; (8000c68 <HAL_TIM_MspPostInit+0x5c>)
 8000c32:	f043 0304 	orr.w	r3, r3, #4
 8000c36:	6193      	str	r3, [r2, #24]
 8000c38:	4b0b      	ldr	r3, [pc, #44]	; (8000c68 <HAL_TIM_MspPostInit+0x5c>)
 8000c3a:	699b      	ldr	r3, [r3, #24]
 8000c3c:	f003 0304 	and.w	r3, r3, #4
 8000c40:	60fb      	str	r3, [r7, #12]
 8000c42:	68fb      	ldr	r3, [r7, #12]
 8000c44:	2340      	movs	r3, #64	; 0x40
 8000c46:	613b      	str	r3, [r7, #16]
 8000c48:	2302      	movs	r3, #2
 8000c4a:	617b      	str	r3, [r7, #20]
 8000c4c:	2302      	movs	r3, #2
 8000c4e:	61fb      	str	r3, [r7, #28]
 8000c50:	f107 0310 	add.w	r3, r7, #16
 8000c54:	4619      	mov	r1, r3
 8000c56:	4805      	ldr	r0, [pc, #20]	; (8000c6c <HAL_TIM_MspPostInit+0x60>)
 8000c58:	f000 fbc6 	bl	80013e8 <HAL_GPIO_Init>
 8000c5c:	bf00      	nop
 8000c5e:	3720      	adds	r7, #32
 8000c60:	46bd      	mov	sp, r7
 8000c62:	bd80      	pop	{r7, pc}
 8000c64:	40000400 	.word	0x40000400
 8000c68:	40021000 	.word	0x40021000
 8000c6c:	40010800 	.word	0x40010800

08000c70 <HAL_UART_MspInit>:
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b088      	sub	sp, #32
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	6078      	str	r0, [r7, #4]
 8000c78:	f107 0310 	add.w	r3, r7, #16
 8000c7c:	2200      	movs	r2, #0
 8000c7e:	601a      	str	r2, [r3, #0]
 8000c80:	605a      	str	r2, [r3, #4]
 8000c82:	609a      	str	r2, [r3, #8]
 8000c84:	60da      	str	r2, [r3, #12]
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	681b      	ldr	r3, [r3, #0]
 8000c8a:	4a1f      	ldr	r2, [pc, #124]	; (8000d08 <HAL_UART_MspInit+0x98>)
 8000c8c:	4293      	cmp	r3, r2
 8000c8e:	d137      	bne.n	8000d00 <HAL_UART_MspInit+0x90>
 8000c90:	4b1e      	ldr	r3, [pc, #120]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000c92:	69db      	ldr	r3, [r3, #28]
 8000c94:	4a1d      	ldr	r2, [pc, #116]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000c96:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000c9a:	61d3      	str	r3, [r2, #28]
 8000c9c:	4b1b      	ldr	r3, [pc, #108]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000c9e:	69db      	ldr	r3, [r3, #28]
 8000ca0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000ca4:	60fb      	str	r3, [r7, #12]
 8000ca6:	68fb      	ldr	r3, [r7, #12]
 8000ca8:	4b18      	ldr	r3, [pc, #96]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000caa:	699b      	ldr	r3, [r3, #24]
 8000cac:	4a17      	ldr	r2, [pc, #92]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000cae:	f043 0304 	orr.w	r3, r3, #4
 8000cb2:	6193      	str	r3, [r2, #24]
 8000cb4:	4b15      	ldr	r3, [pc, #84]	; (8000d0c <HAL_UART_MspInit+0x9c>)
 8000cb6:	699b      	ldr	r3, [r3, #24]
 8000cb8:	f003 0304 	and.w	r3, r3, #4
 8000cbc:	60bb      	str	r3, [r7, #8]
 8000cbe:	68bb      	ldr	r3, [r7, #8]
 8000cc0:	2304      	movs	r3, #4
 8000cc2:	613b      	str	r3, [r7, #16]
 8000cc4:	2302      	movs	r3, #2
 8000cc6:	617b      	str	r3, [r7, #20]
 8000cc8:	2303      	movs	r3, #3
 8000cca:	61fb      	str	r3, [r7, #28]
 8000ccc:	f107 0310 	add.w	r3, r7, #16
 8000cd0:	4619      	mov	r1, r3
 8000cd2:	480f      	ldr	r0, [pc, #60]	; (8000d10 <HAL_UART_MspInit+0xa0>)
 8000cd4:	f000 fb88 	bl	80013e8 <HAL_GPIO_Init>
 8000cd8:	2308      	movs	r3, #8
 8000cda:	613b      	str	r3, [r7, #16]
 8000cdc:	2300      	movs	r3, #0
 8000cde:	617b      	str	r3, [r7, #20]
 8000ce0:	2300      	movs	r3, #0
 8000ce2:	61bb      	str	r3, [r7, #24]
 8000ce4:	f107 0310 	add.w	r3, r7, #16
 8000ce8:	4619      	mov	r1, r3
 8000cea:	4809      	ldr	r0, [pc, #36]	; (8000d10 <HAL_UART_MspInit+0xa0>)
 8000cec:	f000 fb7c 	bl	80013e8 <HAL_GPIO_Init>
 8000cf0:	2200      	movs	r2, #0
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	2026      	movs	r0, #38	; 0x26
 8000cf6:	f000 fa90 	bl	800121a <HAL_NVIC_SetPriority>
 8000cfa:	2026      	movs	r0, #38	; 0x26
 8000cfc:	f000 faa9 	bl	8001252 <HAL_NVIC_EnableIRQ>
 8000d00:	bf00      	nop
 8000d02:	3720      	adds	r7, #32
 8000d04:	46bd      	mov	sp, r7
 8000d06:	bd80      	pop	{r7, pc}
 8000d08:	40004400 	.word	0x40004400
 8000d0c:	40021000 	.word	0x40021000
 8000d10:	40010800 	.word	0x40010800

08000d14 <NMI_Handler>:
 8000d14:	b480      	push	{r7}
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	e7fe      	b.n	8000d18 <NMI_Handler+0x4>

08000d1a <HardFault_Handler>:
 8000d1a:	b480      	push	{r7}
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	e7fe      	b.n	8000d1e <HardFault_Handler+0x4>

08000d20 <MemManage_Handler>:
 8000d20:	b480      	push	{r7}
 8000d22:	af00      	add	r7, sp, #0
 8000d24:	e7fe      	b.n	8000d24 <MemManage_Handler+0x4>

08000d26 <BusFault_Handler>:
 8000d26:	b480      	push	{r7}
 8000d28:	af00      	add	r7, sp, #0
 8000d2a:	e7fe      	b.n	8000d2a <BusFault_Handler+0x4>

08000d2c <UsageFault_Handler>:
 8000d2c:	b480      	push	{r7}
 8000d2e:	af00      	add	r7, sp, #0
 8000d30:	e7fe      	b.n	8000d30 <UsageFault_Handler+0x4>

08000d32 <SVC_Handler>:
 8000d32:	b480      	push	{r7}
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	bf00      	nop
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	bc80      	pop	{r7}
 8000d3c:	4770      	bx	lr

08000d3e <DebugMon_Handler>:
 8000d3e:	b480      	push	{r7}
 8000d40:	af00      	add	r7, sp, #0
 8000d42:	bf00      	nop
 8000d44:	46bd      	mov	sp, r7
 8000d46:	bc80      	pop	{r7}
 8000d48:	4770      	bx	lr

08000d4a <PendSV_Handler>:
 8000d4a:	b480      	push	{r7}
 8000d4c:	af00      	add	r7, sp, #0
 8000d4e:	bf00      	nop
 8000d50:	46bd      	mov	sp, r7
 8000d52:	bc80      	pop	{r7}
 8000d54:	4770      	bx	lr

08000d56 <SysTick_Handler>:
 8000d56:	b580      	push	{r7, lr}
 8000d58:	af00      	add	r7, sp, #0
 8000d5a:	f000 f96b 	bl	8001034 <HAL_IncTick>
 8000d5e:	bf00      	nop
 8000d60:	bd80      	pop	{r7, pc}
	...

08000d64 <TIM2_IRQHandler>:
 8000d64:	b580      	push	{r7, lr}
 8000d66:	af00      	add	r7, sp, #0
 8000d68:	4802      	ldr	r0, [pc, #8]	; (8000d74 <TIM2_IRQHandler+0x10>)
 8000d6a:	f001 fa1d 	bl	80021a8 <HAL_TIM_IRQHandler>
 8000d6e:	bf00      	nop
 8000d70:	bd80      	pop	{r7, pc}
 8000d72:	bf00      	nop
 8000d74:	20000064 	.word	0x20000064

08000d78 <USART2_IRQHandler>:
 8000d78:	b580      	push	{r7, lr}
 8000d7a:	af00      	add	r7, sp, #0
 8000d7c:	4802      	ldr	r0, [pc, #8]	; (8000d88 <USART2_IRQHandler+0x10>)
 8000d7e:	f001 ffff 	bl	8002d80 <HAL_UART_IRQHandler>
 8000d82:	bf00      	nop
 8000d84:	bd80      	pop	{r7, pc}
 8000d86:	bf00      	nop
 8000d88:	200000f4 	.word	0x200000f4

08000d8c <SystemInit>:
 8000d8c:	b480      	push	{r7}
 8000d8e:	af00      	add	r7, sp, #0
 8000d90:	bf00      	nop
 8000d92:	46bd      	mov	sp, r7
 8000d94:	bc80      	pop	{r7}
 8000d96:	4770      	bx	lr

08000d98 <green_blink>:
//	0	0	off
//	0	1	green
//	1	0	red
//	1	1	yellow
void green_blink()
{
 8000d98:	b580      	push	{r7, lr}
 8000d9a:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8000d9c:	4b08      	ldr	r3, [pc, #32]	; (8000dc0 <green_blink+0x28>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	2b01      	cmp	r3, #1
 8000da2:	d10b      	bne.n	8000dbc <green_blink+0x24>
		setTimer3(BLINK_TIME);
 8000da4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000da8:	f7ff fe60 	bl	8000a6c <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 8000dac:	2108      	movs	r1, #8
 8000dae:	4805      	ldr	r0, [pc, #20]	; (8000dc4 <green_blink+0x2c>)
 8000db0:	f000 fccd 	bl	800174e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 8000db4:	2110      	movs	r1, #16
 8000db6:	4803      	ldr	r0, [pc, #12]	; (8000dc4 <green_blink+0x2c>)
 8000db8:	f000 fcc9 	bl	800174e <HAL_GPIO_TogglePin>
	}
}
 8000dbc:	bf00      	nop
 8000dbe:	bd80      	pop	{r7, pc}
 8000dc0:	20000148 	.word	0x20000148
 8000dc4:	40010c00 	.word	0x40010c00

08000dc8 <red_blink>:
void red_blink()
{
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8000dcc:	4b09      	ldr	r3, [pc, #36]	; (8000df4 <red_blink+0x2c>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	2b01      	cmp	r3, #1
 8000dd2:	d10c      	bne.n	8000dee <red_blink+0x26>
		setTimer3(BLINK_TIME);
 8000dd4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000dd8:	f7ff fe48 	bl	8000a6c <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 8000ddc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000de0:	4805      	ldr	r0, [pc, #20]	; (8000df8 <red_blink+0x30>)
 8000de2:	f000 fcb4 	bl	800174e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 8000de6:	2120      	movs	r1, #32
 8000de8:	4804      	ldr	r0, [pc, #16]	; (8000dfc <red_blink+0x34>)
 8000dea:	f000 fcb0 	bl	800174e <HAL_GPIO_TogglePin>
	}
}
 8000dee:	bf00      	nop
 8000df0:	bd80      	pop	{r7, pc}
 8000df2:	bf00      	nop
 8000df4:	20000148 	.word	0x20000148
 8000df8:	40010800 	.word	0x40010800
 8000dfc:	40010c00 	.word	0x40010c00

08000e00 <yellow_blink>:

void yellow_blink()
{
 8000e00:	b580      	push	{r7, lr}
 8000e02:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 8000e04:	4b0d      	ldr	r3, [pc, #52]	; (8000e3c <yellow_blink+0x3c>)
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	2b01      	cmp	r3, #1
 8000e0a:	d114      	bne.n	8000e36 <yellow_blink+0x36>
		setTimer3(BLINK_TIME);
 8000e0c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000e10:	f7ff fe2c 	bl	8000a6c <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 8000e14:	2108      	movs	r1, #8
 8000e16:	480a      	ldr	r0, [pc, #40]	; (8000e40 <yellow_blink+0x40>)
 8000e18:	f000 fc99 	bl	800174e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 8000e1c:	2110      	movs	r1, #16
 8000e1e:	4808      	ldr	r0, [pc, #32]	; (8000e40 <yellow_blink+0x40>)
 8000e20:	f000 fc95 	bl	800174e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 8000e24:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e28:	4806      	ldr	r0, [pc, #24]	; (8000e44 <yellow_blink+0x44>)
 8000e2a:	f000 fc90 	bl	800174e <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 8000e2e:	2120      	movs	r1, #32
 8000e30:	4803      	ldr	r0, [pc, #12]	; (8000e40 <yellow_blink+0x40>)
 8000e32:	f000 fc8c 	bl	800174e <HAL_GPIO_TogglePin>
	}
}
 8000e36:	bf00      	nop
 8000e38:	bd80      	pop	{r7, pc}
 8000e3a:	bf00      	nop
 8000e3c:	20000148 	.word	0x20000148
 8000e40:	40010c00 	.word	0x40010c00
 8000e44:	40010800 	.word	0x40010800

08000e48 <red1_on>:

//turn the led corresponding to this road on
void red1_on()
{
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 8000e4c:	2201      	movs	r2, #1
 8000e4e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e52:	4805      	ldr	r0, [pc, #20]	; (8000e68 <red1_on+0x20>)
 8000e54:	f000 fc63 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 8000e58:	2200      	movs	r2, #0
 8000e5a:	2108      	movs	r1, #8
 8000e5c:	4803      	ldr	r0, [pc, #12]	; (8000e6c <red1_on+0x24>)
 8000e5e:	f000 fc5e 	bl	800171e <HAL_GPIO_WritePin>
}
 8000e62:	bf00      	nop
 8000e64:	bd80      	pop	{r7, pc}
 8000e66:	bf00      	nop
 8000e68:	40010800 	.word	0x40010800
 8000e6c:	40010c00 	.word	0x40010c00

08000e70 <red2_on>:
void red2_on()
{
 8000e70:	b580      	push	{r7, lr}
 8000e72:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 8000e74:	2201      	movs	r2, #1
 8000e76:	2120      	movs	r1, #32
 8000e78:	4804      	ldr	r0, [pc, #16]	; (8000e8c <red2_on+0x1c>)
 8000e7a:	f000 fc50 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 8000e7e:	2200      	movs	r2, #0
 8000e80:	2110      	movs	r1, #16
 8000e82:	4802      	ldr	r0, [pc, #8]	; (8000e8c <red2_on+0x1c>)
 8000e84:	f000 fc4b 	bl	800171e <HAL_GPIO_WritePin>
}
 8000e88:	bf00      	nop
 8000e8a:	bd80      	pop	{r7, pc}
 8000e8c:	40010c00 	.word	0x40010c00

08000e90 <green1_on>:
void green1_on()
{
 8000e90:	b580      	push	{r7, lr}
 8000e92:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 8000e94:	2200      	movs	r2, #0
 8000e96:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e9a:	4805      	ldr	r0, [pc, #20]	; (8000eb0 <green1_on+0x20>)
 8000e9c:	f000 fc3f 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 8000ea0:	2201      	movs	r2, #1
 8000ea2:	2108      	movs	r1, #8
 8000ea4:	4803      	ldr	r0, [pc, #12]	; (8000eb4 <green1_on+0x24>)
 8000ea6:	f000 fc3a 	bl	800171e <HAL_GPIO_WritePin>
}
 8000eaa:	bf00      	nop
 8000eac:	bd80      	pop	{r7, pc}
 8000eae:	bf00      	nop
 8000eb0:	40010800 	.word	0x40010800
 8000eb4:	40010c00 	.word	0x40010c00

08000eb8 <green2_on>:
void green2_on()
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 8000ebc:	2200      	movs	r2, #0
 8000ebe:	2120      	movs	r1, #32
 8000ec0:	4804      	ldr	r0, [pc, #16]	; (8000ed4 <green2_on+0x1c>)
 8000ec2:	f000 fc2c 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 8000ec6:	2201      	movs	r2, #1
 8000ec8:	2110      	movs	r1, #16
 8000eca:	4802      	ldr	r0, [pc, #8]	; (8000ed4 <green2_on+0x1c>)
 8000ecc:	f000 fc27 	bl	800171e <HAL_GPIO_WritePin>
}
 8000ed0:	bf00      	nop
 8000ed2:	bd80      	pop	{r7, pc}
 8000ed4:	40010c00 	.word	0x40010c00

08000ed8 <yellow1_on>:
void yellow1_on()
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 8000edc:	2201      	movs	r2, #1
 8000ede:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ee2:	4805      	ldr	r0, [pc, #20]	; (8000ef8 <yellow1_on+0x20>)
 8000ee4:	f000 fc1b 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 8000ee8:	2201      	movs	r2, #1
 8000eea:	2108      	movs	r1, #8
 8000eec:	4803      	ldr	r0, [pc, #12]	; (8000efc <yellow1_on+0x24>)
 8000eee:	f000 fc16 	bl	800171e <HAL_GPIO_WritePin>
}
 8000ef2:	bf00      	nop
 8000ef4:	bd80      	pop	{r7, pc}
 8000ef6:	bf00      	nop
 8000ef8:	40010800 	.word	0x40010800
 8000efc:	40010c00 	.word	0x40010c00

08000f00 <yellow2_on>:
void yellow2_on()
{
 8000f00:	b580      	push	{r7, lr}
 8000f02:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 8000f04:	2201      	movs	r2, #1
 8000f06:	2120      	movs	r1, #32
 8000f08:	4804      	ldr	r0, [pc, #16]	; (8000f1c <yellow2_on+0x1c>)
 8000f0a:	f000 fc08 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 8000f0e:	2201      	movs	r2, #1
 8000f10:	2110      	movs	r1, #16
 8000f12:	4802      	ldr	r0, [pc, #8]	; (8000f1c <yellow2_on+0x1c>)
 8000f14:	f000 fc03 	bl	800171e <HAL_GPIO_WritePin>
}
 8000f18:	bf00      	nop
 8000f1a:	bd80      	pop	{r7, pc}
 8000f1c:	40010c00 	.word	0x40010c00

08000f20 <turn_all_led_off>:

//this function is used when error detected
void turn_all_led_off()
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 8000f24:	2200      	movs	r2, #0
 8000f26:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f2a:	480a      	ldr	r0, [pc, #40]	; (8000f54 <turn_all_led_off+0x34>)
 8000f2c:	f000 fbf7 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 8000f30:	2200      	movs	r2, #0
 8000f32:	2108      	movs	r1, #8
 8000f34:	4808      	ldr	r0, [pc, #32]	; (8000f58 <turn_all_led_off+0x38>)
 8000f36:	f000 fbf2 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	2120      	movs	r1, #32
 8000f3e:	4806      	ldr	r0, [pc, #24]	; (8000f58 <turn_all_led_off+0x38>)
 8000f40:	f000 fbed 	bl	800171e <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 8000f44:	2200      	movs	r2, #0
 8000f46:	2110      	movs	r1, #16
 8000f48:	4803      	ldr	r0, [pc, #12]	; (8000f58 <turn_all_led_off+0x38>)
 8000f4a:	f000 fbe8 	bl	800171e <HAL_GPIO_WritePin>
}
 8000f4e:	bf00      	nop
 8000f50:	bd80      	pop	{r7, pc}
 8000f52:	bf00      	nop
 8000f54:	40010800 	.word	0x40010800
 8000f58:	40010c00 	.word	0x40010c00

08000f5c <Reset_Handler>:
 8000f5c:	480c      	ldr	r0, [pc, #48]	; (8000f90 <LoopFillZerobss+0x12>)
 8000f5e:	490d      	ldr	r1, [pc, #52]	; (8000f94 <LoopFillZerobss+0x16>)
 8000f60:	4a0d      	ldr	r2, [pc, #52]	; (8000f98 <LoopFillZerobss+0x1a>)
 8000f62:	2300      	movs	r3, #0
 8000f64:	e002      	b.n	8000f6c <LoopCopyDataInit>

08000f66 <CopyDataInit>:
 8000f66:	58d4      	ldr	r4, [r2, r3]
 8000f68:	50c4      	str	r4, [r0, r3]
 8000f6a:	3304      	adds	r3, #4

08000f6c <LoopCopyDataInit>:
 8000f6c:	18c4      	adds	r4, r0, r3
 8000f6e:	428c      	cmp	r4, r1
 8000f70:	d3f9      	bcc.n	8000f66 <CopyDataInit>
 8000f72:	4a0a      	ldr	r2, [pc, #40]	; (8000f9c <LoopFillZerobss+0x1e>)
 8000f74:	4c0a      	ldr	r4, [pc, #40]	; (8000fa0 <LoopFillZerobss+0x22>)
 8000f76:	2300      	movs	r3, #0
 8000f78:	e001      	b.n	8000f7e <LoopFillZerobss>

08000f7a <FillZerobss>:
 8000f7a:	6013      	str	r3, [r2, #0]
 8000f7c:	3204      	adds	r2, #4

08000f7e <LoopFillZerobss>:
 8000f7e:	42a2      	cmp	r2, r4
 8000f80:	d3fb      	bcc.n	8000f7a <FillZerobss>
 8000f82:	f7ff ff03 	bl	8000d8c <SystemInit>
 8000f86:	f002 faa9 	bl	80034dc <__libc_init_array>
 8000f8a:	f7ff fb85 	bl	8000698 <main>
 8000f8e:	4770      	bx	lr
 8000f90:	20000000 	.word	0x20000000
 8000f94:	20000024 	.word	0x20000024
 8000f98:	0800357c 	.word	0x0800357c
 8000f9c:	20000024 	.word	0x20000024
 8000fa0:	20000154 	.word	0x20000154

08000fa4 <ADC1_2_IRQHandler>:
 8000fa4:	e7fe      	b.n	8000fa4 <ADC1_2_IRQHandler>
	...

08000fa8 <HAL_Init>:
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	af00      	add	r7, sp, #0
 8000fac:	4b08      	ldr	r3, [pc, #32]	; (8000fd0 <HAL_Init+0x28>)
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	4a07      	ldr	r2, [pc, #28]	; (8000fd0 <HAL_Init+0x28>)
 8000fb2:	f043 0310 	orr.w	r3, r3, #16
 8000fb6:	6013      	str	r3, [r2, #0]
 8000fb8:	2003      	movs	r0, #3
 8000fba:	f000 f923 	bl	8001204 <HAL_NVIC_SetPriorityGrouping>
 8000fbe:	200f      	movs	r0, #15
 8000fc0:	f000 f808 	bl	8000fd4 <HAL_InitTick>
 8000fc4:	f7ff fdb8 	bl	8000b38 <HAL_MspInit>
 8000fc8:	2300      	movs	r3, #0
 8000fca:	4618      	mov	r0, r3
 8000fcc:	bd80      	pop	{r7, pc}
 8000fce:	bf00      	nop
 8000fd0:	40022000 	.word	0x40022000

08000fd4 <HAL_InitTick>:
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b082      	sub	sp, #8
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	6078      	str	r0, [r7, #4]
 8000fdc:	4b12      	ldr	r3, [pc, #72]	; (8001028 <HAL_InitTick+0x54>)
 8000fde:	681a      	ldr	r2, [r3, #0]
 8000fe0:	4b12      	ldr	r3, [pc, #72]	; (800102c <HAL_InitTick+0x58>)
 8000fe2:	781b      	ldrb	r3, [r3, #0]
 8000fe4:	4619      	mov	r1, r3
 8000fe6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000fea:	fbb3 f3f1 	udiv	r3, r3, r1
 8000fee:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ff2:	4618      	mov	r0, r3
 8000ff4:	f000 f93b 	bl	800126e <HAL_SYSTICK_Config>
 8000ff8:	4603      	mov	r3, r0
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d001      	beq.n	8001002 <HAL_InitTick+0x2e>
 8000ffe:	2301      	movs	r3, #1
 8001000:	e00e      	b.n	8001020 <HAL_InitTick+0x4c>
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	2b0f      	cmp	r3, #15
 8001006:	d80a      	bhi.n	800101e <HAL_InitTick+0x4a>
 8001008:	2200      	movs	r2, #0
 800100a:	6879      	ldr	r1, [r7, #4]
 800100c:	f04f 30ff 	mov.w	r0, #4294967295
 8001010:	f000 f903 	bl	800121a <HAL_NVIC_SetPriority>
 8001014:	4a06      	ldr	r2, [pc, #24]	; (8001030 <HAL_InitTick+0x5c>)
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	6013      	str	r3, [r2, #0]
 800101a:	2300      	movs	r3, #0
 800101c:	e000      	b.n	8001020 <HAL_InitTick+0x4c>
 800101e:	2301      	movs	r3, #1
 8001020:	4618      	mov	r0, r3
 8001022:	3708      	adds	r7, #8
 8001024:	46bd      	mov	sp, r7
 8001026:	bd80      	pop	{r7, pc}
 8001028:	20000018 	.word	0x20000018
 800102c:	20000020 	.word	0x20000020
 8001030:	2000001c 	.word	0x2000001c

08001034 <HAL_IncTick>:
 8001034:	b480      	push	{r7}
 8001036:	af00      	add	r7, sp, #0
 8001038:	4b05      	ldr	r3, [pc, #20]	; (8001050 <HAL_IncTick+0x1c>)
 800103a:	781b      	ldrb	r3, [r3, #0]
 800103c:	461a      	mov	r2, r3
 800103e:	4b05      	ldr	r3, [pc, #20]	; (8001054 <HAL_IncTick+0x20>)
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	4413      	add	r3, r2
 8001044:	4a03      	ldr	r2, [pc, #12]	; (8001054 <HAL_IncTick+0x20>)
 8001046:	6013      	str	r3, [r2, #0]
 8001048:	bf00      	nop
 800104a:	46bd      	mov	sp, r7
 800104c:	bc80      	pop	{r7}
 800104e:	4770      	bx	lr
 8001050:	20000020 	.word	0x20000020
 8001054:	20000150 	.word	0x20000150

08001058 <HAL_GetTick>:
 8001058:	b480      	push	{r7}
 800105a:	af00      	add	r7, sp, #0
 800105c:	4b02      	ldr	r3, [pc, #8]	; (8001068 <HAL_GetTick+0x10>)
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	4618      	mov	r0, r3
 8001062:	46bd      	mov	sp, r7
 8001064:	bc80      	pop	{r7}
 8001066:	4770      	bx	lr
 8001068:	20000150 	.word	0x20000150

0800106c <__NVIC_SetPriorityGrouping>:
 800106c:	b480      	push	{r7}
 800106e:	b085      	sub	sp, #20
 8001070:	af00      	add	r7, sp, #0
 8001072:	6078      	str	r0, [r7, #4]
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	f003 0307 	and.w	r3, r3, #7
 800107a:	60fb      	str	r3, [r7, #12]
 800107c:	4b0c      	ldr	r3, [pc, #48]	; (80010b0 <__NVIC_SetPriorityGrouping+0x44>)
 800107e:	68db      	ldr	r3, [r3, #12]
 8001080:	60bb      	str	r3, [r7, #8]
 8001082:	68ba      	ldr	r2, [r7, #8]
 8001084:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001088:	4013      	ands	r3, r2
 800108a:	60bb      	str	r3, [r7, #8]
 800108c:	68fb      	ldr	r3, [r7, #12]
 800108e:	021a      	lsls	r2, r3, #8
 8001090:	68bb      	ldr	r3, [r7, #8]
 8001092:	4313      	orrs	r3, r2
 8001094:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001098:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800109c:	60bb      	str	r3, [r7, #8]
 800109e:	4a04      	ldr	r2, [pc, #16]	; (80010b0 <__NVIC_SetPriorityGrouping+0x44>)
 80010a0:	68bb      	ldr	r3, [r7, #8]
 80010a2:	60d3      	str	r3, [r2, #12]
 80010a4:	bf00      	nop
 80010a6:	3714      	adds	r7, #20
 80010a8:	46bd      	mov	sp, r7
 80010aa:	bc80      	pop	{r7}
 80010ac:	4770      	bx	lr
 80010ae:	bf00      	nop
 80010b0:	e000ed00 	.word	0xe000ed00

080010b4 <__NVIC_GetPriorityGrouping>:
 80010b4:	b480      	push	{r7}
 80010b6:	af00      	add	r7, sp, #0
 80010b8:	4b04      	ldr	r3, [pc, #16]	; (80010cc <__NVIC_GetPriorityGrouping+0x18>)
 80010ba:	68db      	ldr	r3, [r3, #12]
 80010bc:	0a1b      	lsrs	r3, r3, #8
 80010be:	f003 0307 	and.w	r3, r3, #7
 80010c2:	4618      	mov	r0, r3
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bc80      	pop	{r7}
 80010c8:	4770      	bx	lr
 80010ca:	bf00      	nop
 80010cc:	e000ed00 	.word	0xe000ed00

080010d0 <__NVIC_EnableIRQ>:
 80010d0:	b480      	push	{r7}
 80010d2:	b083      	sub	sp, #12
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	4603      	mov	r3, r0
 80010d8:	71fb      	strb	r3, [r7, #7]
 80010da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010de:	2b00      	cmp	r3, #0
 80010e0:	db0b      	blt.n	80010fa <__NVIC_EnableIRQ+0x2a>
 80010e2:	79fb      	ldrb	r3, [r7, #7]
 80010e4:	f003 021f 	and.w	r2, r3, #31
 80010e8:	4906      	ldr	r1, [pc, #24]	; (8001104 <__NVIC_EnableIRQ+0x34>)
 80010ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010ee:	095b      	lsrs	r3, r3, #5
 80010f0:	2001      	movs	r0, #1
 80010f2:	fa00 f202 	lsl.w	r2, r0, r2
 80010f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80010fa:	bf00      	nop
 80010fc:	370c      	adds	r7, #12
 80010fe:	46bd      	mov	sp, r7
 8001100:	bc80      	pop	{r7}
 8001102:	4770      	bx	lr
 8001104:	e000e100 	.word	0xe000e100

08001108 <__NVIC_SetPriority>:
 8001108:	b480      	push	{r7}
 800110a:	b083      	sub	sp, #12
 800110c:	af00      	add	r7, sp, #0
 800110e:	4603      	mov	r3, r0
 8001110:	6039      	str	r1, [r7, #0]
 8001112:	71fb      	strb	r3, [r7, #7]
 8001114:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001118:	2b00      	cmp	r3, #0
 800111a:	db0a      	blt.n	8001132 <__NVIC_SetPriority+0x2a>
 800111c:	683b      	ldr	r3, [r7, #0]
 800111e:	b2da      	uxtb	r2, r3
 8001120:	490c      	ldr	r1, [pc, #48]	; (8001154 <__NVIC_SetPriority+0x4c>)
 8001122:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001126:	0112      	lsls	r2, r2, #4
 8001128:	b2d2      	uxtb	r2, r2
 800112a:	440b      	add	r3, r1
 800112c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001130:	e00a      	b.n	8001148 <__NVIC_SetPriority+0x40>
 8001132:	683b      	ldr	r3, [r7, #0]
 8001134:	b2da      	uxtb	r2, r3
 8001136:	4908      	ldr	r1, [pc, #32]	; (8001158 <__NVIC_SetPriority+0x50>)
 8001138:	79fb      	ldrb	r3, [r7, #7]
 800113a:	f003 030f 	and.w	r3, r3, #15
 800113e:	3b04      	subs	r3, #4
 8001140:	0112      	lsls	r2, r2, #4
 8001142:	b2d2      	uxtb	r2, r2
 8001144:	440b      	add	r3, r1
 8001146:	761a      	strb	r2, [r3, #24]
 8001148:	bf00      	nop
 800114a:	370c      	adds	r7, #12
 800114c:	46bd      	mov	sp, r7
 800114e:	bc80      	pop	{r7}
 8001150:	4770      	bx	lr
 8001152:	bf00      	nop
 8001154:	e000e100 	.word	0xe000e100
 8001158:	e000ed00 	.word	0xe000ed00

0800115c <NVIC_EncodePriority>:
 800115c:	b480      	push	{r7}
 800115e:	b089      	sub	sp, #36	; 0x24
 8001160:	af00      	add	r7, sp, #0
 8001162:	60f8      	str	r0, [r7, #12]
 8001164:	60b9      	str	r1, [r7, #8]
 8001166:	607a      	str	r2, [r7, #4]
 8001168:	68fb      	ldr	r3, [r7, #12]
 800116a:	f003 0307 	and.w	r3, r3, #7
 800116e:	61fb      	str	r3, [r7, #28]
 8001170:	69fb      	ldr	r3, [r7, #28]
 8001172:	f1c3 0307 	rsb	r3, r3, #7
 8001176:	2b04      	cmp	r3, #4
 8001178:	bf28      	it	cs
 800117a:	2304      	movcs	r3, #4
 800117c:	61bb      	str	r3, [r7, #24]
 800117e:	69fb      	ldr	r3, [r7, #28]
 8001180:	3304      	adds	r3, #4
 8001182:	2b06      	cmp	r3, #6
 8001184:	d902      	bls.n	800118c <NVIC_EncodePriority+0x30>
 8001186:	69fb      	ldr	r3, [r7, #28]
 8001188:	3b03      	subs	r3, #3
 800118a:	e000      	b.n	800118e <NVIC_EncodePriority+0x32>
 800118c:	2300      	movs	r3, #0
 800118e:	617b      	str	r3, [r7, #20]
 8001190:	f04f 32ff 	mov.w	r2, #4294967295
 8001194:	69bb      	ldr	r3, [r7, #24]
 8001196:	fa02 f303 	lsl.w	r3, r2, r3
 800119a:	43da      	mvns	r2, r3
 800119c:	68bb      	ldr	r3, [r7, #8]
 800119e:	401a      	ands	r2, r3
 80011a0:	697b      	ldr	r3, [r7, #20]
 80011a2:	409a      	lsls	r2, r3
 80011a4:	f04f 31ff 	mov.w	r1, #4294967295
 80011a8:	697b      	ldr	r3, [r7, #20]
 80011aa:	fa01 f303 	lsl.w	r3, r1, r3
 80011ae:	43d9      	mvns	r1, r3
 80011b0:	687b      	ldr	r3, [r7, #4]
 80011b2:	400b      	ands	r3, r1
 80011b4:	4313      	orrs	r3, r2
 80011b6:	4618      	mov	r0, r3
 80011b8:	3724      	adds	r7, #36	; 0x24
 80011ba:	46bd      	mov	sp, r7
 80011bc:	bc80      	pop	{r7}
 80011be:	4770      	bx	lr

080011c0 <SysTick_Config>:
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b082      	sub	sp, #8
 80011c4:	af00      	add	r7, sp, #0
 80011c6:	6078      	str	r0, [r7, #4]
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	3b01      	subs	r3, #1
 80011cc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80011d0:	d301      	bcc.n	80011d6 <SysTick_Config+0x16>
 80011d2:	2301      	movs	r3, #1
 80011d4:	e00f      	b.n	80011f6 <SysTick_Config+0x36>
 80011d6:	4a0a      	ldr	r2, [pc, #40]	; (8001200 <SysTick_Config+0x40>)
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	3b01      	subs	r3, #1
 80011dc:	6053      	str	r3, [r2, #4]
 80011de:	210f      	movs	r1, #15
 80011e0:	f04f 30ff 	mov.w	r0, #4294967295
 80011e4:	f7ff ff90 	bl	8001108 <__NVIC_SetPriority>
 80011e8:	4b05      	ldr	r3, [pc, #20]	; (8001200 <SysTick_Config+0x40>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	609a      	str	r2, [r3, #8]
 80011ee:	4b04      	ldr	r3, [pc, #16]	; (8001200 <SysTick_Config+0x40>)
 80011f0:	2207      	movs	r2, #7
 80011f2:	601a      	str	r2, [r3, #0]
 80011f4:	2300      	movs	r3, #0
 80011f6:	4618      	mov	r0, r3
 80011f8:	3708      	adds	r7, #8
 80011fa:	46bd      	mov	sp, r7
 80011fc:	bd80      	pop	{r7, pc}
 80011fe:	bf00      	nop
 8001200:	e000e010 	.word	0xe000e010

08001204 <HAL_NVIC_SetPriorityGrouping>:
 8001204:	b580      	push	{r7, lr}
 8001206:	b082      	sub	sp, #8
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
 800120c:	6878      	ldr	r0, [r7, #4]
 800120e:	f7ff ff2d 	bl	800106c <__NVIC_SetPriorityGrouping>
 8001212:	bf00      	nop
 8001214:	3708      	adds	r7, #8
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <HAL_NVIC_SetPriority>:
 800121a:	b580      	push	{r7, lr}
 800121c:	b086      	sub	sp, #24
 800121e:	af00      	add	r7, sp, #0
 8001220:	4603      	mov	r3, r0
 8001222:	60b9      	str	r1, [r7, #8]
 8001224:	607a      	str	r2, [r7, #4]
 8001226:	73fb      	strb	r3, [r7, #15]
 8001228:	2300      	movs	r3, #0
 800122a:	617b      	str	r3, [r7, #20]
 800122c:	f7ff ff42 	bl	80010b4 <__NVIC_GetPriorityGrouping>
 8001230:	6178      	str	r0, [r7, #20]
 8001232:	687a      	ldr	r2, [r7, #4]
 8001234:	68b9      	ldr	r1, [r7, #8]
 8001236:	6978      	ldr	r0, [r7, #20]
 8001238:	f7ff ff90 	bl	800115c <NVIC_EncodePriority>
 800123c:	4602      	mov	r2, r0
 800123e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001242:	4611      	mov	r1, r2
 8001244:	4618      	mov	r0, r3
 8001246:	f7ff ff5f 	bl	8001108 <__NVIC_SetPriority>
 800124a:	bf00      	nop
 800124c:	3718      	adds	r7, #24
 800124e:	46bd      	mov	sp, r7
 8001250:	bd80      	pop	{r7, pc}

08001252 <HAL_NVIC_EnableIRQ>:
 8001252:	b580      	push	{r7, lr}
 8001254:	b082      	sub	sp, #8
 8001256:	af00      	add	r7, sp, #0
 8001258:	4603      	mov	r3, r0
 800125a:	71fb      	strb	r3, [r7, #7]
 800125c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001260:	4618      	mov	r0, r3
 8001262:	f7ff ff35 	bl	80010d0 <__NVIC_EnableIRQ>
 8001266:	bf00      	nop
 8001268:	3708      	adds	r7, #8
 800126a:	46bd      	mov	sp, r7
 800126c:	bd80      	pop	{r7, pc}

0800126e <HAL_SYSTICK_Config>:
 800126e:	b580      	push	{r7, lr}
 8001270:	b082      	sub	sp, #8
 8001272:	af00      	add	r7, sp, #0
 8001274:	6078      	str	r0, [r7, #4]
 8001276:	6878      	ldr	r0, [r7, #4]
 8001278:	f7ff ffa2 	bl	80011c0 <SysTick_Config>
 800127c:	4603      	mov	r3, r0
 800127e:	4618      	mov	r0, r3
 8001280:	3708      	adds	r7, #8
 8001282:	46bd      	mov	sp, r7
 8001284:	bd80      	pop	{r7, pc}

08001286 <HAL_DMA_Abort>:
 8001286:	b480      	push	{r7}
 8001288:	b085      	sub	sp, #20
 800128a:	af00      	add	r7, sp, #0
 800128c:	6078      	str	r0, [r7, #4]
 800128e:	2300      	movs	r3, #0
 8001290:	73fb      	strb	r3, [r7, #15]
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001298:	2b02      	cmp	r3, #2
 800129a:	d008      	beq.n	80012ae <HAL_DMA_Abort+0x28>
 800129c:	687b      	ldr	r3, [r7, #4]
 800129e:	2204      	movs	r2, #4
 80012a0:	639a      	str	r2, [r3, #56]	; 0x38
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	2200      	movs	r2, #0
 80012a6:	f883 2020 	strb.w	r2, [r3, #32]
 80012aa:	2301      	movs	r3, #1
 80012ac:	e020      	b.n	80012f0 <HAL_DMA_Abort+0x6a>
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	681a      	ldr	r2, [r3, #0]
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	681b      	ldr	r3, [r3, #0]
 80012b8:	f022 020e 	bic.w	r2, r2, #14
 80012bc:	601a      	str	r2, [r3, #0]
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	681a      	ldr	r2, [r3, #0]
 80012c4:	687b      	ldr	r3, [r7, #4]
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	f022 0201 	bic.w	r2, r2, #1
 80012cc:	601a      	str	r2, [r3, #0]
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80012d6:	2101      	movs	r1, #1
 80012d8:	fa01 f202 	lsl.w	r2, r1, r2
 80012dc:	605a      	str	r2, [r3, #4]
 80012de:	687b      	ldr	r3, [r7, #4]
 80012e0:	2201      	movs	r2, #1
 80012e2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	2200      	movs	r2, #0
 80012ea:	f883 2020 	strb.w	r2, [r3, #32]
 80012ee:	7bfb      	ldrb	r3, [r7, #15]
 80012f0:	4618      	mov	r0, r3
 80012f2:	3714      	adds	r7, #20
 80012f4:	46bd      	mov	sp, r7
 80012f6:	bc80      	pop	{r7}
 80012f8:	4770      	bx	lr
	...

080012fc <HAL_DMA_Abort_IT>:
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b084      	sub	sp, #16
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
 8001304:	2300      	movs	r3, #0
 8001306:	73fb      	strb	r3, [r7, #15]
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800130e:	2b02      	cmp	r3, #2
 8001310:	d005      	beq.n	800131e <HAL_DMA_Abort_IT+0x22>
 8001312:	687b      	ldr	r3, [r7, #4]
 8001314:	2204      	movs	r2, #4
 8001316:	639a      	str	r2, [r3, #56]	; 0x38
 8001318:	2301      	movs	r3, #1
 800131a:	73fb      	strb	r3, [r7, #15]
 800131c:	e051      	b.n	80013c2 <HAL_DMA_Abort_IT+0xc6>
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	681b      	ldr	r3, [r3, #0]
 8001322:	681a      	ldr	r2, [r3, #0]
 8001324:	687b      	ldr	r3, [r7, #4]
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	f022 020e 	bic.w	r2, r2, #14
 800132c:	601a      	str	r2, [r3, #0]
 800132e:	687b      	ldr	r3, [r7, #4]
 8001330:	681b      	ldr	r3, [r3, #0]
 8001332:	681a      	ldr	r2, [r3, #0]
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	f022 0201 	bic.w	r2, r2, #1
 800133c:	601a      	str	r2, [r3, #0]
 800133e:	687b      	ldr	r3, [r7, #4]
 8001340:	681b      	ldr	r3, [r3, #0]
 8001342:	4a22      	ldr	r2, [pc, #136]	; (80013cc <HAL_DMA_Abort_IT+0xd0>)
 8001344:	4293      	cmp	r3, r2
 8001346:	d029      	beq.n	800139c <HAL_DMA_Abort_IT+0xa0>
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	4a20      	ldr	r2, [pc, #128]	; (80013d0 <HAL_DMA_Abort_IT+0xd4>)
 800134e:	4293      	cmp	r3, r2
 8001350:	d022      	beq.n	8001398 <HAL_DMA_Abort_IT+0x9c>
 8001352:	687b      	ldr	r3, [r7, #4]
 8001354:	681b      	ldr	r3, [r3, #0]
 8001356:	4a1f      	ldr	r2, [pc, #124]	; (80013d4 <HAL_DMA_Abort_IT+0xd8>)
 8001358:	4293      	cmp	r3, r2
 800135a:	d01a      	beq.n	8001392 <HAL_DMA_Abort_IT+0x96>
 800135c:	687b      	ldr	r3, [r7, #4]
 800135e:	681b      	ldr	r3, [r3, #0]
 8001360:	4a1d      	ldr	r2, [pc, #116]	; (80013d8 <HAL_DMA_Abort_IT+0xdc>)
 8001362:	4293      	cmp	r3, r2
 8001364:	d012      	beq.n	800138c <HAL_DMA_Abort_IT+0x90>
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	4a1c      	ldr	r2, [pc, #112]	; (80013dc <HAL_DMA_Abort_IT+0xe0>)
 800136c:	4293      	cmp	r3, r2
 800136e:	d00a      	beq.n	8001386 <HAL_DMA_Abort_IT+0x8a>
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	4a1a      	ldr	r2, [pc, #104]	; (80013e0 <HAL_DMA_Abort_IT+0xe4>)
 8001376:	4293      	cmp	r3, r2
 8001378:	d102      	bne.n	8001380 <HAL_DMA_Abort_IT+0x84>
 800137a:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800137e:	e00e      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 8001380:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001384:	e00b      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 8001386:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800138a:	e008      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 800138c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001390:	e005      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 8001392:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001396:	e002      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 8001398:	2310      	movs	r3, #16
 800139a:	e000      	b.n	800139e <HAL_DMA_Abort_IT+0xa2>
 800139c:	2301      	movs	r3, #1
 800139e:	4a11      	ldr	r2, [pc, #68]	; (80013e4 <HAL_DMA_Abort_IT+0xe8>)
 80013a0:	6053      	str	r3, [r2, #4]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	2201      	movs	r2, #1
 80013a6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80013aa:	687b      	ldr	r3, [r7, #4]
 80013ac:	2200      	movs	r2, #0
 80013ae:	f883 2020 	strb.w	r2, [r3, #32]
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	d003      	beq.n	80013c2 <HAL_DMA_Abort_IT+0xc6>
 80013ba:	687b      	ldr	r3, [r7, #4]
 80013bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80013be:	6878      	ldr	r0, [r7, #4]
 80013c0:	4798      	blx	r3
 80013c2:	7bfb      	ldrb	r3, [r7, #15]
 80013c4:	4618      	mov	r0, r3
 80013c6:	3710      	adds	r7, #16
 80013c8:	46bd      	mov	sp, r7
 80013ca:	bd80      	pop	{r7, pc}
 80013cc:	40020008 	.word	0x40020008
 80013d0:	4002001c 	.word	0x4002001c
 80013d4:	40020030 	.word	0x40020030
 80013d8:	40020044 	.word	0x40020044
 80013dc:	40020058 	.word	0x40020058
 80013e0:	4002006c 	.word	0x4002006c
 80013e4:	40020000 	.word	0x40020000

080013e8 <HAL_GPIO_Init>:
 80013e8:	b480      	push	{r7}
 80013ea:	b08b      	sub	sp, #44	; 0x2c
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
 80013f0:	6039      	str	r1, [r7, #0]
 80013f2:	2300      	movs	r3, #0
 80013f4:	627b      	str	r3, [r7, #36]	; 0x24
 80013f6:	2300      	movs	r3, #0
 80013f8:	623b      	str	r3, [r7, #32]
 80013fa:	e169      	b.n	80016d0 <HAL_GPIO_Init+0x2e8>
 80013fc:	2201      	movs	r2, #1
 80013fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001400:	fa02 f303 	lsl.w	r3, r2, r3
 8001404:	61fb      	str	r3, [r7, #28]
 8001406:	683b      	ldr	r3, [r7, #0]
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	69fa      	ldr	r2, [r7, #28]
 800140c:	4013      	ands	r3, r2
 800140e:	61bb      	str	r3, [r7, #24]
 8001410:	69ba      	ldr	r2, [r7, #24]
 8001412:	69fb      	ldr	r3, [r7, #28]
 8001414:	429a      	cmp	r2, r3
 8001416:	f040 8158 	bne.w	80016ca <HAL_GPIO_Init+0x2e2>
 800141a:	683b      	ldr	r3, [r7, #0]
 800141c:	685b      	ldr	r3, [r3, #4]
 800141e:	4a9a      	ldr	r2, [pc, #616]	; (8001688 <HAL_GPIO_Init+0x2a0>)
 8001420:	4293      	cmp	r3, r2
 8001422:	d05e      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 8001424:	4a98      	ldr	r2, [pc, #608]	; (8001688 <HAL_GPIO_Init+0x2a0>)
 8001426:	4293      	cmp	r3, r2
 8001428:	d875      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 800142a:	4a98      	ldr	r2, [pc, #608]	; (800168c <HAL_GPIO_Init+0x2a4>)
 800142c:	4293      	cmp	r3, r2
 800142e:	d058      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 8001430:	4a96      	ldr	r2, [pc, #600]	; (800168c <HAL_GPIO_Init+0x2a4>)
 8001432:	4293      	cmp	r3, r2
 8001434:	d86f      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 8001436:	4a96      	ldr	r2, [pc, #600]	; (8001690 <HAL_GPIO_Init+0x2a8>)
 8001438:	4293      	cmp	r3, r2
 800143a:	d052      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 800143c:	4a94      	ldr	r2, [pc, #592]	; (8001690 <HAL_GPIO_Init+0x2a8>)
 800143e:	4293      	cmp	r3, r2
 8001440:	d869      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 8001442:	4a94      	ldr	r2, [pc, #592]	; (8001694 <HAL_GPIO_Init+0x2ac>)
 8001444:	4293      	cmp	r3, r2
 8001446:	d04c      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 8001448:	4a92      	ldr	r2, [pc, #584]	; (8001694 <HAL_GPIO_Init+0x2ac>)
 800144a:	4293      	cmp	r3, r2
 800144c:	d863      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 800144e:	4a92      	ldr	r2, [pc, #584]	; (8001698 <HAL_GPIO_Init+0x2b0>)
 8001450:	4293      	cmp	r3, r2
 8001452:	d046      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 8001454:	4a90      	ldr	r2, [pc, #576]	; (8001698 <HAL_GPIO_Init+0x2b0>)
 8001456:	4293      	cmp	r3, r2
 8001458:	d85d      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 800145a:	2b12      	cmp	r3, #18
 800145c:	d82a      	bhi.n	80014b4 <HAL_GPIO_Init+0xcc>
 800145e:	2b12      	cmp	r3, #18
 8001460:	d859      	bhi.n	8001516 <HAL_GPIO_Init+0x12e>
 8001462:	a201      	add	r2, pc, #4	; (adr r2, 8001468 <HAL_GPIO_Init+0x80>)
 8001464:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001468:	080014e3 	.word	0x080014e3
 800146c:	080014bd 	.word	0x080014bd
 8001470:	080014cf 	.word	0x080014cf
 8001474:	08001511 	.word	0x08001511
 8001478:	08001517 	.word	0x08001517
 800147c:	08001517 	.word	0x08001517
 8001480:	08001517 	.word	0x08001517
 8001484:	08001517 	.word	0x08001517
 8001488:	08001517 	.word	0x08001517
 800148c:	08001517 	.word	0x08001517
 8001490:	08001517 	.word	0x08001517
 8001494:	08001517 	.word	0x08001517
 8001498:	08001517 	.word	0x08001517
 800149c:	08001517 	.word	0x08001517
 80014a0:	08001517 	.word	0x08001517
 80014a4:	08001517 	.word	0x08001517
 80014a8:	08001517 	.word	0x08001517
 80014ac:	080014c5 	.word	0x080014c5
 80014b0:	080014d9 	.word	0x080014d9
 80014b4:	4a79      	ldr	r2, [pc, #484]	; (800169c <HAL_GPIO_Init+0x2b4>)
 80014b6:	4293      	cmp	r3, r2
 80014b8:	d013      	beq.n	80014e2 <HAL_GPIO_Init+0xfa>
 80014ba:	e02c      	b.n	8001516 <HAL_GPIO_Init+0x12e>
 80014bc:	683b      	ldr	r3, [r7, #0]
 80014be:	68db      	ldr	r3, [r3, #12]
 80014c0:	623b      	str	r3, [r7, #32]
 80014c2:	e029      	b.n	8001518 <HAL_GPIO_Init+0x130>
 80014c4:	683b      	ldr	r3, [r7, #0]
 80014c6:	68db      	ldr	r3, [r3, #12]
 80014c8:	3304      	adds	r3, #4
 80014ca:	623b      	str	r3, [r7, #32]
 80014cc:	e024      	b.n	8001518 <HAL_GPIO_Init+0x130>
 80014ce:	683b      	ldr	r3, [r7, #0]
 80014d0:	68db      	ldr	r3, [r3, #12]
 80014d2:	3308      	adds	r3, #8
 80014d4:	623b      	str	r3, [r7, #32]
 80014d6:	e01f      	b.n	8001518 <HAL_GPIO_Init+0x130>
 80014d8:	683b      	ldr	r3, [r7, #0]
 80014da:	68db      	ldr	r3, [r3, #12]
 80014dc:	330c      	adds	r3, #12
 80014de:	623b      	str	r3, [r7, #32]
 80014e0:	e01a      	b.n	8001518 <HAL_GPIO_Init+0x130>
 80014e2:	683b      	ldr	r3, [r7, #0]
 80014e4:	689b      	ldr	r3, [r3, #8]
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d102      	bne.n	80014f0 <HAL_GPIO_Init+0x108>
 80014ea:	2304      	movs	r3, #4
 80014ec:	623b      	str	r3, [r7, #32]
 80014ee:	e013      	b.n	8001518 <HAL_GPIO_Init+0x130>
 80014f0:	683b      	ldr	r3, [r7, #0]
 80014f2:	689b      	ldr	r3, [r3, #8]
 80014f4:	2b01      	cmp	r3, #1
 80014f6:	d105      	bne.n	8001504 <HAL_GPIO_Init+0x11c>
 80014f8:	2308      	movs	r3, #8
 80014fa:	623b      	str	r3, [r7, #32]
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	69fa      	ldr	r2, [r7, #28]
 8001500:	611a      	str	r2, [r3, #16]
 8001502:	e009      	b.n	8001518 <HAL_GPIO_Init+0x130>
 8001504:	2308      	movs	r3, #8
 8001506:	623b      	str	r3, [r7, #32]
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	69fa      	ldr	r2, [r7, #28]
 800150c:	615a      	str	r2, [r3, #20]
 800150e:	e003      	b.n	8001518 <HAL_GPIO_Init+0x130>
 8001510:	2300      	movs	r3, #0
 8001512:	623b      	str	r3, [r7, #32]
 8001514:	e000      	b.n	8001518 <HAL_GPIO_Init+0x130>
 8001516:	bf00      	nop
 8001518:	69bb      	ldr	r3, [r7, #24]
 800151a:	2bff      	cmp	r3, #255	; 0xff
 800151c:	d801      	bhi.n	8001522 <HAL_GPIO_Init+0x13a>
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	e001      	b.n	8001526 <HAL_GPIO_Init+0x13e>
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	3304      	adds	r3, #4
 8001526:	617b      	str	r3, [r7, #20]
 8001528:	69bb      	ldr	r3, [r7, #24]
 800152a:	2bff      	cmp	r3, #255	; 0xff
 800152c:	d802      	bhi.n	8001534 <HAL_GPIO_Init+0x14c>
 800152e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001530:	009b      	lsls	r3, r3, #2
 8001532:	e002      	b.n	800153a <HAL_GPIO_Init+0x152>
 8001534:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001536:	3b08      	subs	r3, #8
 8001538:	009b      	lsls	r3, r3, #2
 800153a:	613b      	str	r3, [r7, #16]
 800153c:	697b      	ldr	r3, [r7, #20]
 800153e:	681a      	ldr	r2, [r3, #0]
 8001540:	210f      	movs	r1, #15
 8001542:	693b      	ldr	r3, [r7, #16]
 8001544:	fa01 f303 	lsl.w	r3, r1, r3
 8001548:	43db      	mvns	r3, r3
 800154a:	401a      	ands	r2, r3
 800154c:	6a39      	ldr	r1, [r7, #32]
 800154e:	693b      	ldr	r3, [r7, #16]
 8001550:	fa01 f303 	lsl.w	r3, r1, r3
 8001554:	431a      	orrs	r2, r3
 8001556:	697b      	ldr	r3, [r7, #20]
 8001558:	601a      	str	r2, [r3, #0]
 800155a:	683b      	ldr	r3, [r7, #0]
 800155c:	685b      	ldr	r3, [r3, #4]
 800155e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001562:	2b00      	cmp	r3, #0
 8001564:	f000 80b1 	beq.w	80016ca <HAL_GPIO_Init+0x2e2>
 8001568:	4b4d      	ldr	r3, [pc, #308]	; (80016a0 <HAL_GPIO_Init+0x2b8>)
 800156a:	699b      	ldr	r3, [r3, #24]
 800156c:	4a4c      	ldr	r2, [pc, #304]	; (80016a0 <HAL_GPIO_Init+0x2b8>)
 800156e:	f043 0301 	orr.w	r3, r3, #1
 8001572:	6193      	str	r3, [r2, #24]
 8001574:	4b4a      	ldr	r3, [pc, #296]	; (80016a0 <HAL_GPIO_Init+0x2b8>)
 8001576:	699b      	ldr	r3, [r3, #24]
 8001578:	f003 0301 	and.w	r3, r3, #1
 800157c:	60bb      	str	r3, [r7, #8]
 800157e:	68bb      	ldr	r3, [r7, #8]
 8001580:	4a48      	ldr	r2, [pc, #288]	; (80016a4 <HAL_GPIO_Init+0x2bc>)
 8001582:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001584:	089b      	lsrs	r3, r3, #2
 8001586:	3302      	adds	r3, #2
 8001588:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800158c:	60fb      	str	r3, [r7, #12]
 800158e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001590:	f003 0303 	and.w	r3, r3, #3
 8001594:	009b      	lsls	r3, r3, #2
 8001596:	220f      	movs	r2, #15
 8001598:	fa02 f303 	lsl.w	r3, r2, r3
 800159c:	43db      	mvns	r3, r3
 800159e:	68fa      	ldr	r2, [r7, #12]
 80015a0:	4013      	ands	r3, r2
 80015a2:	60fb      	str	r3, [r7, #12]
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	4a40      	ldr	r2, [pc, #256]	; (80016a8 <HAL_GPIO_Init+0x2c0>)
 80015a8:	4293      	cmp	r3, r2
 80015aa:	d013      	beq.n	80015d4 <HAL_GPIO_Init+0x1ec>
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	4a3f      	ldr	r2, [pc, #252]	; (80016ac <HAL_GPIO_Init+0x2c4>)
 80015b0:	4293      	cmp	r3, r2
 80015b2:	d00d      	beq.n	80015d0 <HAL_GPIO_Init+0x1e8>
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	4a3e      	ldr	r2, [pc, #248]	; (80016b0 <HAL_GPIO_Init+0x2c8>)
 80015b8:	4293      	cmp	r3, r2
 80015ba:	d007      	beq.n	80015cc <HAL_GPIO_Init+0x1e4>
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	4a3d      	ldr	r2, [pc, #244]	; (80016b4 <HAL_GPIO_Init+0x2cc>)
 80015c0:	4293      	cmp	r3, r2
 80015c2:	d101      	bne.n	80015c8 <HAL_GPIO_Init+0x1e0>
 80015c4:	2303      	movs	r3, #3
 80015c6:	e006      	b.n	80015d6 <HAL_GPIO_Init+0x1ee>
 80015c8:	2304      	movs	r3, #4
 80015ca:	e004      	b.n	80015d6 <HAL_GPIO_Init+0x1ee>
 80015cc:	2302      	movs	r3, #2
 80015ce:	e002      	b.n	80015d6 <HAL_GPIO_Init+0x1ee>
 80015d0:	2301      	movs	r3, #1
 80015d2:	e000      	b.n	80015d6 <HAL_GPIO_Init+0x1ee>
 80015d4:	2300      	movs	r3, #0
 80015d6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80015d8:	f002 0203 	and.w	r2, r2, #3
 80015dc:	0092      	lsls	r2, r2, #2
 80015de:	4093      	lsls	r3, r2
 80015e0:	68fa      	ldr	r2, [r7, #12]
 80015e2:	4313      	orrs	r3, r2
 80015e4:	60fb      	str	r3, [r7, #12]
 80015e6:	492f      	ldr	r1, [pc, #188]	; (80016a4 <HAL_GPIO_Init+0x2bc>)
 80015e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015ea:	089b      	lsrs	r3, r3, #2
 80015ec:	3302      	adds	r3, #2
 80015ee:	68fa      	ldr	r2, [r7, #12]
 80015f0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80015f4:	683b      	ldr	r3, [r7, #0]
 80015f6:	685b      	ldr	r3, [r3, #4]
 80015f8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	d006      	beq.n	800160e <HAL_GPIO_Init+0x226>
 8001600:	4b2d      	ldr	r3, [pc, #180]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001602:	681a      	ldr	r2, [r3, #0]
 8001604:	492c      	ldr	r1, [pc, #176]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001606:	69bb      	ldr	r3, [r7, #24]
 8001608:	4313      	orrs	r3, r2
 800160a:	600b      	str	r3, [r1, #0]
 800160c:	e006      	b.n	800161c <HAL_GPIO_Init+0x234>
 800160e:	4b2a      	ldr	r3, [pc, #168]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001610:	681a      	ldr	r2, [r3, #0]
 8001612:	69bb      	ldr	r3, [r7, #24]
 8001614:	43db      	mvns	r3, r3
 8001616:	4928      	ldr	r1, [pc, #160]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001618:	4013      	ands	r3, r2
 800161a:	600b      	str	r3, [r1, #0]
 800161c:	683b      	ldr	r3, [r7, #0]
 800161e:	685b      	ldr	r3, [r3, #4]
 8001620:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001624:	2b00      	cmp	r3, #0
 8001626:	d006      	beq.n	8001636 <HAL_GPIO_Init+0x24e>
 8001628:	4b23      	ldr	r3, [pc, #140]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 800162a:	685a      	ldr	r2, [r3, #4]
 800162c:	4922      	ldr	r1, [pc, #136]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 800162e:	69bb      	ldr	r3, [r7, #24]
 8001630:	4313      	orrs	r3, r2
 8001632:	604b      	str	r3, [r1, #4]
 8001634:	e006      	b.n	8001644 <HAL_GPIO_Init+0x25c>
 8001636:	4b20      	ldr	r3, [pc, #128]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001638:	685a      	ldr	r2, [r3, #4]
 800163a:	69bb      	ldr	r3, [r7, #24]
 800163c:	43db      	mvns	r3, r3
 800163e:	491e      	ldr	r1, [pc, #120]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001640:	4013      	ands	r3, r2
 8001642:	604b      	str	r3, [r1, #4]
 8001644:	683b      	ldr	r3, [r7, #0]
 8001646:	685b      	ldr	r3, [r3, #4]
 8001648:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800164c:	2b00      	cmp	r3, #0
 800164e:	d006      	beq.n	800165e <HAL_GPIO_Init+0x276>
 8001650:	4b19      	ldr	r3, [pc, #100]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001652:	689a      	ldr	r2, [r3, #8]
 8001654:	4918      	ldr	r1, [pc, #96]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001656:	69bb      	ldr	r3, [r7, #24]
 8001658:	4313      	orrs	r3, r2
 800165a:	608b      	str	r3, [r1, #8]
 800165c:	e006      	b.n	800166c <HAL_GPIO_Init+0x284>
 800165e:	4b16      	ldr	r3, [pc, #88]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001660:	689a      	ldr	r2, [r3, #8]
 8001662:	69bb      	ldr	r3, [r7, #24]
 8001664:	43db      	mvns	r3, r3
 8001666:	4914      	ldr	r1, [pc, #80]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 8001668:	4013      	ands	r3, r2
 800166a:	608b      	str	r3, [r1, #8]
 800166c:	683b      	ldr	r3, [r7, #0]
 800166e:	685b      	ldr	r3, [r3, #4]
 8001670:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001674:	2b00      	cmp	r3, #0
 8001676:	d021      	beq.n	80016bc <HAL_GPIO_Init+0x2d4>
 8001678:	4b0f      	ldr	r3, [pc, #60]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 800167a:	68da      	ldr	r2, [r3, #12]
 800167c:	490e      	ldr	r1, [pc, #56]	; (80016b8 <HAL_GPIO_Init+0x2d0>)
 800167e:	69bb      	ldr	r3, [r7, #24]
 8001680:	4313      	orrs	r3, r2
 8001682:	60cb      	str	r3, [r1, #12]
 8001684:	e021      	b.n	80016ca <HAL_GPIO_Init+0x2e2>
 8001686:	bf00      	nop
 8001688:	10320000 	.word	0x10320000
 800168c:	10310000 	.word	0x10310000
 8001690:	10220000 	.word	0x10220000
 8001694:	10210000 	.word	0x10210000
 8001698:	10120000 	.word	0x10120000
 800169c:	10110000 	.word	0x10110000
 80016a0:	40021000 	.word	0x40021000
 80016a4:	40010000 	.word	0x40010000
 80016a8:	40010800 	.word	0x40010800
 80016ac:	40010c00 	.word	0x40010c00
 80016b0:	40011000 	.word	0x40011000
 80016b4:	40011400 	.word	0x40011400
 80016b8:	40010400 	.word	0x40010400
 80016bc:	4b0b      	ldr	r3, [pc, #44]	; (80016ec <HAL_GPIO_Init+0x304>)
 80016be:	68da      	ldr	r2, [r3, #12]
 80016c0:	69bb      	ldr	r3, [r7, #24]
 80016c2:	43db      	mvns	r3, r3
 80016c4:	4909      	ldr	r1, [pc, #36]	; (80016ec <HAL_GPIO_Init+0x304>)
 80016c6:	4013      	ands	r3, r2
 80016c8:	60cb      	str	r3, [r1, #12]
 80016ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016cc:	3301      	adds	r3, #1
 80016ce:	627b      	str	r3, [r7, #36]	; 0x24
 80016d0:	683b      	ldr	r3, [r7, #0]
 80016d2:	681a      	ldr	r2, [r3, #0]
 80016d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016d6:	fa22 f303 	lsr.w	r3, r2, r3
 80016da:	2b00      	cmp	r3, #0
 80016dc:	f47f ae8e 	bne.w	80013fc <HAL_GPIO_Init+0x14>
 80016e0:	bf00      	nop
 80016e2:	bf00      	nop
 80016e4:	372c      	adds	r7, #44	; 0x2c
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bc80      	pop	{r7}
 80016ea:	4770      	bx	lr
 80016ec:	40010400 	.word	0x40010400

080016f0 <HAL_GPIO_ReadPin>:
 80016f0:	b480      	push	{r7}
 80016f2:	b085      	sub	sp, #20
 80016f4:	af00      	add	r7, sp, #0
 80016f6:	6078      	str	r0, [r7, #4]
 80016f8:	460b      	mov	r3, r1
 80016fa:	807b      	strh	r3, [r7, #2]
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	689a      	ldr	r2, [r3, #8]
 8001700:	887b      	ldrh	r3, [r7, #2]
 8001702:	4013      	ands	r3, r2
 8001704:	2b00      	cmp	r3, #0
 8001706:	d002      	beq.n	800170e <HAL_GPIO_ReadPin+0x1e>
 8001708:	2301      	movs	r3, #1
 800170a:	73fb      	strb	r3, [r7, #15]
 800170c:	e001      	b.n	8001712 <HAL_GPIO_ReadPin+0x22>
 800170e:	2300      	movs	r3, #0
 8001710:	73fb      	strb	r3, [r7, #15]
 8001712:	7bfb      	ldrb	r3, [r7, #15]
 8001714:	4618      	mov	r0, r3
 8001716:	3714      	adds	r7, #20
 8001718:	46bd      	mov	sp, r7
 800171a:	bc80      	pop	{r7}
 800171c:	4770      	bx	lr

0800171e <HAL_GPIO_WritePin>:
 800171e:	b480      	push	{r7}
 8001720:	b083      	sub	sp, #12
 8001722:	af00      	add	r7, sp, #0
 8001724:	6078      	str	r0, [r7, #4]
 8001726:	460b      	mov	r3, r1
 8001728:	807b      	strh	r3, [r7, #2]
 800172a:	4613      	mov	r3, r2
 800172c:	707b      	strb	r3, [r7, #1]
 800172e:	787b      	ldrb	r3, [r7, #1]
 8001730:	2b00      	cmp	r3, #0
 8001732:	d003      	beq.n	800173c <HAL_GPIO_WritePin+0x1e>
 8001734:	887a      	ldrh	r2, [r7, #2]
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	611a      	str	r2, [r3, #16]
 800173a:	e003      	b.n	8001744 <HAL_GPIO_WritePin+0x26>
 800173c:	887b      	ldrh	r3, [r7, #2]
 800173e:	041a      	lsls	r2, r3, #16
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	611a      	str	r2, [r3, #16]
 8001744:	bf00      	nop
 8001746:	370c      	adds	r7, #12
 8001748:	46bd      	mov	sp, r7
 800174a:	bc80      	pop	{r7}
 800174c:	4770      	bx	lr

0800174e <HAL_GPIO_TogglePin>:
 800174e:	b480      	push	{r7}
 8001750:	b085      	sub	sp, #20
 8001752:	af00      	add	r7, sp, #0
 8001754:	6078      	str	r0, [r7, #4]
 8001756:	460b      	mov	r3, r1
 8001758:	807b      	strh	r3, [r7, #2]
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	68db      	ldr	r3, [r3, #12]
 800175e:	60fb      	str	r3, [r7, #12]
 8001760:	887a      	ldrh	r2, [r7, #2]
 8001762:	68fb      	ldr	r3, [r7, #12]
 8001764:	4013      	ands	r3, r2
 8001766:	041a      	lsls	r2, r3, #16
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	43d9      	mvns	r1, r3
 800176c:	887b      	ldrh	r3, [r7, #2]
 800176e:	400b      	ands	r3, r1
 8001770:	431a      	orrs	r2, r3
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	611a      	str	r2, [r3, #16]
 8001776:	bf00      	nop
 8001778:	3714      	adds	r7, #20
 800177a:	46bd      	mov	sp, r7
 800177c:	bc80      	pop	{r7}
 800177e:	4770      	bx	lr

08001780 <HAL_RCC_OscConfig>:
 8001780:	b580      	push	{r7, lr}
 8001782:	b086      	sub	sp, #24
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	2b00      	cmp	r3, #0
 800178c:	d101      	bne.n	8001792 <HAL_RCC_OscConfig+0x12>
 800178e:	2301      	movs	r3, #1
 8001790:	e272      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	f003 0301 	and.w	r3, r3, #1
 800179a:	2b00      	cmp	r3, #0
 800179c:	f000 8087 	beq.w	80018ae <HAL_RCC_OscConfig+0x12e>
 80017a0:	4b92      	ldr	r3, [pc, #584]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017a2:	685b      	ldr	r3, [r3, #4]
 80017a4:	f003 030c 	and.w	r3, r3, #12
 80017a8:	2b04      	cmp	r3, #4
 80017aa:	d00c      	beq.n	80017c6 <HAL_RCC_OscConfig+0x46>
 80017ac:	4b8f      	ldr	r3, [pc, #572]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017ae:	685b      	ldr	r3, [r3, #4]
 80017b0:	f003 030c 	and.w	r3, r3, #12
 80017b4:	2b08      	cmp	r3, #8
 80017b6:	d112      	bne.n	80017de <HAL_RCC_OscConfig+0x5e>
 80017b8:	4b8c      	ldr	r3, [pc, #560]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017ba:	685b      	ldr	r3, [r3, #4]
 80017bc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80017c0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017c4:	d10b      	bne.n	80017de <HAL_RCC_OscConfig+0x5e>
 80017c6:	4b89      	ldr	r3, [pc, #548]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017c8:	681b      	ldr	r3, [r3, #0]
 80017ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017ce:	2b00      	cmp	r3, #0
 80017d0:	d06c      	beq.n	80018ac <HAL_RCC_OscConfig+0x12c>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	685b      	ldr	r3, [r3, #4]
 80017d6:	2b00      	cmp	r3, #0
 80017d8:	d168      	bne.n	80018ac <HAL_RCC_OscConfig+0x12c>
 80017da:	2301      	movs	r3, #1
 80017dc:	e24c      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 80017de:	687b      	ldr	r3, [r7, #4]
 80017e0:	685b      	ldr	r3, [r3, #4]
 80017e2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017e6:	d106      	bne.n	80017f6 <HAL_RCC_OscConfig+0x76>
 80017e8:	4b80      	ldr	r3, [pc, #512]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017ea:	681b      	ldr	r3, [r3, #0]
 80017ec:	4a7f      	ldr	r2, [pc, #508]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80017ee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80017f2:	6013      	str	r3, [r2, #0]
 80017f4:	e02e      	b.n	8001854 <HAL_RCC_OscConfig+0xd4>
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	685b      	ldr	r3, [r3, #4]
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	d10c      	bne.n	8001818 <HAL_RCC_OscConfig+0x98>
 80017fe:	4b7b      	ldr	r3, [pc, #492]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001800:	681b      	ldr	r3, [r3, #0]
 8001802:	4a7a      	ldr	r2, [pc, #488]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001804:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001808:	6013      	str	r3, [r2, #0]
 800180a:	4b78      	ldr	r3, [pc, #480]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4a77      	ldr	r2, [pc, #476]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001810:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001814:	6013      	str	r3, [r2, #0]
 8001816:	e01d      	b.n	8001854 <HAL_RCC_OscConfig+0xd4>
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	685b      	ldr	r3, [r3, #4]
 800181c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001820:	d10c      	bne.n	800183c <HAL_RCC_OscConfig+0xbc>
 8001822:	4b72      	ldr	r3, [pc, #456]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	4a71      	ldr	r2, [pc, #452]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001828:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800182c:	6013      	str	r3, [r2, #0]
 800182e:	4b6f      	ldr	r3, [pc, #444]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	4a6e      	ldr	r2, [pc, #440]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001834:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001838:	6013      	str	r3, [r2, #0]
 800183a:	e00b      	b.n	8001854 <HAL_RCC_OscConfig+0xd4>
 800183c:	4b6b      	ldr	r3, [pc, #428]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	4a6a      	ldr	r2, [pc, #424]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001842:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001846:	6013      	str	r3, [r2, #0]
 8001848:	4b68      	ldr	r3, [pc, #416]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 800184a:	681b      	ldr	r3, [r3, #0]
 800184c:	4a67      	ldr	r2, [pc, #412]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 800184e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001852:	6013      	str	r3, [r2, #0]
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	685b      	ldr	r3, [r3, #4]
 8001858:	2b00      	cmp	r3, #0
 800185a:	d013      	beq.n	8001884 <HAL_RCC_OscConfig+0x104>
 800185c:	f7ff fbfc 	bl	8001058 <HAL_GetTick>
 8001860:	6138      	str	r0, [r7, #16]
 8001862:	e008      	b.n	8001876 <HAL_RCC_OscConfig+0xf6>
 8001864:	f7ff fbf8 	bl	8001058 <HAL_GetTick>
 8001868:	4602      	mov	r2, r0
 800186a:	693b      	ldr	r3, [r7, #16]
 800186c:	1ad3      	subs	r3, r2, r3
 800186e:	2b64      	cmp	r3, #100	; 0x64
 8001870:	d901      	bls.n	8001876 <HAL_RCC_OscConfig+0xf6>
 8001872:	2303      	movs	r3, #3
 8001874:	e200      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001876:	4b5d      	ldr	r3, [pc, #372]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001878:	681b      	ldr	r3, [r3, #0]
 800187a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800187e:	2b00      	cmp	r3, #0
 8001880:	d0f0      	beq.n	8001864 <HAL_RCC_OscConfig+0xe4>
 8001882:	e014      	b.n	80018ae <HAL_RCC_OscConfig+0x12e>
 8001884:	f7ff fbe8 	bl	8001058 <HAL_GetTick>
 8001888:	6138      	str	r0, [r7, #16]
 800188a:	e008      	b.n	800189e <HAL_RCC_OscConfig+0x11e>
 800188c:	f7ff fbe4 	bl	8001058 <HAL_GetTick>
 8001890:	4602      	mov	r2, r0
 8001892:	693b      	ldr	r3, [r7, #16]
 8001894:	1ad3      	subs	r3, r2, r3
 8001896:	2b64      	cmp	r3, #100	; 0x64
 8001898:	d901      	bls.n	800189e <HAL_RCC_OscConfig+0x11e>
 800189a:	2303      	movs	r3, #3
 800189c:	e1ec      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 800189e:	4b53      	ldr	r3, [pc, #332]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d1f0      	bne.n	800188c <HAL_RCC_OscConfig+0x10c>
 80018aa:	e000      	b.n	80018ae <HAL_RCC_OscConfig+0x12e>
 80018ac:	bf00      	nop
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	f003 0302 	and.w	r3, r3, #2
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d063      	beq.n	8001982 <HAL_RCC_OscConfig+0x202>
 80018ba:	4b4c      	ldr	r3, [pc, #304]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018bc:	685b      	ldr	r3, [r3, #4]
 80018be:	f003 030c 	and.w	r3, r3, #12
 80018c2:	2b00      	cmp	r3, #0
 80018c4:	d00b      	beq.n	80018de <HAL_RCC_OscConfig+0x15e>
 80018c6:	4b49      	ldr	r3, [pc, #292]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018c8:	685b      	ldr	r3, [r3, #4]
 80018ca:	f003 030c 	and.w	r3, r3, #12
 80018ce:	2b08      	cmp	r3, #8
 80018d0:	d11c      	bne.n	800190c <HAL_RCC_OscConfig+0x18c>
 80018d2:	4b46      	ldr	r3, [pc, #280]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018d4:	685b      	ldr	r3, [r3, #4]
 80018d6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018da:	2b00      	cmp	r3, #0
 80018dc:	d116      	bne.n	800190c <HAL_RCC_OscConfig+0x18c>
 80018de:	4b43      	ldr	r3, [pc, #268]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	f003 0302 	and.w	r3, r3, #2
 80018e6:	2b00      	cmp	r3, #0
 80018e8:	d005      	beq.n	80018f6 <HAL_RCC_OscConfig+0x176>
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	691b      	ldr	r3, [r3, #16]
 80018ee:	2b01      	cmp	r3, #1
 80018f0:	d001      	beq.n	80018f6 <HAL_RCC_OscConfig+0x176>
 80018f2:	2301      	movs	r3, #1
 80018f4:	e1c0      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 80018f6:	4b3d      	ldr	r3, [pc, #244]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	695b      	ldr	r3, [r3, #20]
 8001902:	00db      	lsls	r3, r3, #3
 8001904:	4939      	ldr	r1, [pc, #228]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001906:	4313      	orrs	r3, r2
 8001908:	600b      	str	r3, [r1, #0]
 800190a:	e03a      	b.n	8001982 <HAL_RCC_OscConfig+0x202>
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	691b      	ldr	r3, [r3, #16]
 8001910:	2b00      	cmp	r3, #0
 8001912:	d020      	beq.n	8001956 <HAL_RCC_OscConfig+0x1d6>
 8001914:	4b36      	ldr	r3, [pc, #216]	; (80019f0 <HAL_RCC_OscConfig+0x270>)
 8001916:	2201      	movs	r2, #1
 8001918:	601a      	str	r2, [r3, #0]
 800191a:	f7ff fb9d 	bl	8001058 <HAL_GetTick>
 800191e:	6138      	str	r0, [r7, #16]
 8001920:	e008      	b.n	8001934 <HAL_RCC_OscConfig+0x1b4>
 8001922:	f7ff fb99 	bl	8001058 <HAL_GetTick>
 8001926:	4602      	mov	r2, r0
 8001928:	693b      	ldr	r3, [r7, #16]
 800192a:	1ad3      	subs	r3, r2, r3
 800192c:	2b02      	cmp	r3, #2
 800192e:	d901      	bls.n	8001934 <HAL_RCC_OscConfig+0x1b4>
 8001930:	2303      	movs	r3, #3
 8001932:	e1a1      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001934:	4b2d      	ldr	r3, [pc, #180]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	f003 0302 	and.w	r3, r3, #2
 800193c:	2b00      	cmp	r3, #0
 800193e:	d0f0      	beq.n	8001922 <HAL_RCC_OscConfig+0x1a2>
 8001940:	4b2a      	ldr	r3, [pc, #168]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	695b      	ldr	r3, [r3, #20]
 800194c:	00db      	lsls	r3, r3, #3
 800194e:	4927      	ldr	r1, [pc, #156]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001950:	4313      	orrs	r3, r2
 8001952:	600b      	str	r3, [r1, #0]
 8001954:	e015      	b.n	8001982 <HAL_RCC_OscConfig+0x202>
 8001956:	4b26      	ldr	r3, [pc, #152]	; (80019f0 <HAL_RCC_OscConfig+0x270>)
 8001958:	2200      	movs	r2, #0
 800195a:	601a      	str	r2, [r3, #0]
 800195c:	f7ff fb7c 	bl	8001058 <HAL_GetTick>
 8001960:	6138      	str	r0, [r7, #16]
 8001962:	e008      	b.n	8001976 <HAL_RCC_OscConfig+0x1f6>
 8001964:	f7ff fb78 	bl	8001058 <HAL_GetTick>
 8001968:	4602      	mov	r2, r0
 800196a:	693b      	ldr	r3, [r7, #16]
 800196c:	1ad3      	subs	r3, r2, r3
 800196e:	2b02      	cmp	r3, #2
 8001970:	d901      	bls.n	8001976 <HAL_RCC_OscConfig+0x1f6>
 8001972:	2303      	movs	r3, #3
 8001974:	e180      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001976:	4b1d      	ldr	r3, [pc, #116]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	f003 0302 	and.w	r3, r3, #2
 800197e:	2b00      	cmp	r3, #0
 8001980:	d1f0      	bne.n	8001964 <HAL_RCC_OscConfig+0x1e4>
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	681b      	ldr	r3, [r3, #0]
 8001986:	f003 0308 	and.w	r3, r3, #8
 800198a:	2b00      	cmp	r3, #0
 800198c:	d03a      	beq.n	8001a04 <HAL_RCC_OscConfig+0x284>
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	699b      	ldr	r3, [r3, #24]
 8001992:	2b00      	cmp	r3, #0
 8001994:	d019      	beq.n	80019ca <HAL_RCC_OscConfig+0x24a>
 8001996:	4b17      	ldr	r3, [pc, #92]	; (80019f4 <HAL_RCC_OscConfig+0x274>)
 8001998:	2201      	movs	r2, #1
 800199a:	601a      	str	r2, [r3, #0]
 800199c:	f7ff fb5c 	bl	8001058 <HAL_GetTick>
 80019a0:	6138      	str	r0, [r7, #16]
 80019a2:	e008      	b.n	80019b6 <HAL_RCC_OscConfig+0x236>
 80019a4:	f7ff fb58 	bl	8001058 <HAL_GetTick>
 80019a8:	4602      	mov	r2, r0
 80019aa:	693b      	ldr	r3, [r7, #16]
 80019ac:	1ad3      	subs	r3, r2, r3
 80019ae:	2b02      	cmp	r3, #2
 80019b0:	d901      	bls.n	80019b6 <HAL_RCC_OscConfig+0x236>
 80019b2:	2303      	movs	r3, #3
 80019b4:	e160      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 80019b6:	4b0d      	ldr	r3, [pc, #52]	; (80019ec <HAL_RCC_OscConfig+0x26c>)
 80019b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019ba:	f003 0302 	and.w	r3, r3, #2
 80019be:	2b00      	cmp	r3, #0
 80019c0:	d0f0      	beq.n	80019a4 <HAL_RCC_OscConfig+0x224>
 80019c2:	2001      	movs	r0, #1
 80019c4:	f000 fad8 	bl	8001f78 <RCC_Delay>
 80019c8:	e01c      	b.n	8001a04 <HAL_RCC_OscConfig+0x284>
 80019ca:	4b0a      	ldr	r3, [pc, #40]	; (80019f4 <HAL_RCC_OscConfig+0x274>)
 80019cc:	2200      	movs	r2, #0
 80019ce:	601a      	str	r2, [r3, #0]
 80019d0:	f7ff fb42 	bl	8001058 <HAL_GetTick>
 80019d4:	6138      	str	r0, [r7, #16]
 80019d6:	e00f      	b.n	80019f8 <HAL_RCC_OscConfig+0x278>
 80019d8:	f7ff fb3e 	bl	8001058 <HAL_GetTick>
 80019dc:	4602      	mov	r2, r0
 80019de:	693b      	ldr	r3, [r7, #16]
 80019e0:	1ad3      	subs	r3, r2, r3
 80019e2:	2b02      	cmp	r3, #2
 80019e4:	d908      	bls.n	80019f8 <HAL_RCC_OscConfig+0x278>
 80019e6:	2303      	movs	r3, #3
 80019e8:	e146      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 80019ea:	bf00      	nop
 80019ec:	40021000 	.word	0x40021000
 80019f0:	42420000 	.word	0x42420000
 80019f4:	42420480 	.word	0x42420480
 80019f8:	4b92      	ldr	r3, [pc, #584]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 80019fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80019fc:	f003 0302 	and.w	r3, r3, #2
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d1e9      	bne.n	80019d8 <HAL_RCC_OscConfig+0x258>
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	f003 0304 	and.w	r3, r3, #4
 8001a0c:	2b00      	cmp	r3, #0
 8001a0e:	f000 80a6 	beq.w	8001b5e <HAL_RCC_OscConfig+0x3de>
 8001a12:	2300      	movs	r3, #0
 8001a14:	75fb      	strb	r3, [r7, #23]
 8001a16:	4b8b      	ldr	r3, [pc, #556]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a18:	69db      	ldr	r3, [r3, #28]
 8001a1a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d10d      	bne.n	8001a3e <HAL_RCC_OscConfig+0x2be>
 8001a22:	4b88      	ldr	r3, [pc, #544]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a24:	69db      	ldr	r3, [r3, #28]
 8001a26:	4a87      	ldr	r2, [pc, #540]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a2c:	61d3      	str	r3, [r2, #28]
 8001a2e:	4b85      	ldr	r3, [pc, #532]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a30:	69db      	ldr	r3, [r3, #28]
 8001a32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a36:	60bb      	str	r3, [r7, #8]
 8001a38:	68bb      	ldr	r3, [r7, #8]
 8001a3a:	2301      	movs	r3, #1
 8001a3c:	75fb      	strb	r3, [r7, #23]
 8001a3e:	4b82      	ldr	r3, [pc, #520]	; (8001c48 <HAL_RCC_OscConfig+0x4c8>)
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d118      	bne.n	8001a7c <HAL_RCC_OscConfig+0x2fc>
 8001a4a:	4b7f      	ldr	r3, [pc, #508]	; (8001c48 <HAL_RCC_OscConfig+0x4c8>)
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	4a7e      	ldr	r2, [pc, #504]	; (8001c48 <HAL_RCC_OscConfig+0x4c8>)
 8001a50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a54:	6013      	str	r3, [r2, #0]
 8001a56:	f7ff faff 	bl	8001058 <HAL_GetTick>
 8001a5a:	6138      	str	r0, [r7, #16]
 8001a5c:	e008      	b.n	8001a70 <HAL_RCC_OscConfig+0x2f0>
 8001a5e:	f7ff fafb 	bl	8001058 <HAL_GetTick>
 8001a62:	4602      	mov	r2, r0
 8001a64:	693b      	ldr	r3, [r7, #16]
 8001a66:	1ad3      	subs	r3, r2, r3
 8001a68:	2b64      	cmp	r3, #100	; 0x64
 8001a6a:	d901      	bls.n	8001a70 <HAL_RCC_OscConfig+0x2f0>
 8001a6c:	2303      	movs	r3, #3
 8001a6e:	e103      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001a70:	4b75      	ldr	r3, [pc, #468]	; (8001c48 <HAL_RCC_OscConfig+0x4c8>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d0f0      	beq.n	8001a5e <HAL_RCC_OscConfig+0x2de>
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	68db      	ldr	r3, [r3, #12]
 8001a80:	2b01      	cmp	r3, #1
 8001a82:	d106      	bne.n	8001a92 <HAL_RCC_OscConfig+0x312>
 8001a84:	4b6f      	ldr	r3, [pc, #444]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a86:	6a1b      	ldr	r3, [r3, #32]
 8001a88:	4a6e      	ldr	r2, [pc, #440]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a8a:	f043 0301 	orr.w	r3, r3, #1
 8001a8e:	6213      	str	r3, [r2, #32]
 8001a90:	e02d      	b.n	8001aee <HAL_RCC_OscConfig+0x36e>
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	68db      	ldr	r3, [r3, #12]
 8001a96:	2b00      	cmp	r3, #0
 8001a98:	d10c      	bne.n	8001ab4 <HAL_RCC_OscConfig+0x334>
 8001a9a:	4b6a      	ldr	r3, [pc, #424]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001a9c:	6a1b      	ldr	r3, [r3, #32]
 8001a9e:	4a69      	ldr	r2, [pc, #420]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001aa0:	f023 0301 	bic.w	r3, r3, #1
 8001aa4:	6213      	str	r3, [r2, #32]
 8001aa6:	4b67      	ldr	r3, [pc, #412]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001aa8:	6a1b      	ldr	r3, [r3, #32]
 8001aaa:	4a66      	ldr	r2, [pc, #408]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001aac:	f023 0304 	bic.w	r3, r3, #4
 8001ab0:	6213      	str	r3, [r2, #32]
 8001ab2:	e01c      	b.n	8001aee <HAL_RCC_OscConfig+0x36e>
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	68db      	ldr	r3, [r3, #12]
 8001ab8:	2b05      	cmp	r3, #5
 8001aba:	d10c      	bne.n	8001ad6 <HAL_RCC_OscConfig+0x356>
 8001abc:	4b61      	ldr	r3, [pc, #388]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001abe:	6a1b      	ldr	r3, [r3, #32]
 8001ac0:	4a60      	ldr	r2, [pc, #384]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001ac2:	f043 0304 	orr.w	r3, r3, #4
 8001ac6:	6213      	str	r3, [r2, #32]
 8001ac8:	4b5e      	ldr	r3, [pc, #376]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001aca:	6a1b      	ldr	r3, [r3, #32]
 8001acc:	4a5d      	ldr	r2, [pc, #372]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001ace:	f043 0301 	orr.w	r3, r3, #1
 8001ad2:	6213      	str	r3, [r2, #32]
 8001ad4:	e00b      	b.n	8001aee <HAL_RCC_OscConfig+0x36e>
 8001ad6:	4b5b      	ldr	r3, [pc, #364]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001ad8:	6a1b      	ldr	r3, [r3, #32]
 8001ada:	4a5a      	ldr	r2, [pc, #360]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001adc:	f023 0301 	bic.w	r3, r3, #1
 8001ae0:	6213      	str	r3, [r2, #32]
 8001ae2:	4b58      	ldr	r3, [pc, #352]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001ae4:	6a1b      	ldr	r3, [r3, #32]
 8001ae6:	4a57      	ldr	r2, [pc, #348]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001ae8:	f023 0304 	bic.w	r3, r3, #4
 8001aec:	6213      	str	r3, [r2, #32]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	68db      	ldr	r3, [r3, #12]
 8001af2:	2b00      	cmp	r3, #0
 8001af4:	d015      	beq.n	8001b22 <HAL_RCC_OscConfig+0x3a2>
 8001af6:	f7ff faaf 	bl	8001058 <HAL_GetTick>
 8001afa:	6138      	str	r0, [r7, #16]
 8001afc:	e00a      	b.n	8001b14 <HAL_RCC_OscConfig+0x394>
 8001afe:	f7ff faab 	bl	8001058 <HAL_GetTick>
 8001b02:	4602      	mov	r2, r0
 8001b04:	693b      	ldr	r3, [r7, #16]
 8001b06:	1ad3      	subs	r3, r2, r3
 8001b08:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b0c:	4293      	cmp	r3, r2
 8001b0e:	d901      	bls.n	8001b14 <HAL_RCC_OscConfig+0x394>
 8001b10:	2303      	movs	r3, #3
 8001b12:	e0b1      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001b14:	4b4b      	ldr	r3, [pc, #300]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b16:	6a1b      	ldr	r3, [r3, #32]
 8001b18:	f003 0302 	and.w	r3, r3, #2
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	d0ee      	beq.n	8001afe <HAL_RCC_OscConfig+0x37e>
 8001b20:	e014      	b.n	8001b4c <HAL_RCC_OscConfig+0x3cc>
 8001b22:	f7ff fa99 	bl	8001058 <HAL_GetTick>
 8001b26:	6138      	str	r0, [r7, #16]
 8001b28:	e00a      	b.n	8001b40 <HAL_RCC_OscConfig+0x3c0>
 8001b2a:	f7ff fa95 	bl	8001058 <HAL_GetTick>
 8001b2e:	4602      	mov	r2, r0
 8001b30:	693b      	ldr	r3, [r7, #16]
 8001b32:	1ad3      	subs	r3, r2, r3
 8001b34:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b38:	4293      	cmp	r3, r2
 8001b3a:	d901      	bls.n	8001b40 <HAL_RCC_OscConfig+0x3c0>
 8001b3c:	2303      	movs	r3, #3
 8001b3e:	e09b      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001b40:	4b40      	ldr	r3, [pc, #256]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b42:	6a1b      	ldr	r3, [r3, #32]
 8001b44:	f003 0302 	and.w	r3, r3, #2
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d1ee      	bne.n	8001b2a <HAL_RCC_OscConfig+0x3aa>
 8001b4c:	7dfb      	ldrb	r3, [r7, #23]
 8001b4e:	2b01      	cmp	r3, #1
 8001b50:	d105      	bne.n	8001b5e <HAL_RCC_OscConfig+0x3de>
 8001b52:	4b3c      	ldr	r3, [pc, #240]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b54:	69db      	ldr	r3, [r3, #28]
 8001b56:	4a3b      	ldr	r2, [pc, #236]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b58:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001b5c:	61d3      	str	r3, [r2, #28]
 8001b5e:	687b      	ldr	r3, [r7, #4]
 8001b60:	69db      	ldr	r3, [r3, #28]
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	f000 8087 	beq.w	8001c76 <HAL_RCC_OscConfig+0x4f6>
 8001b68:	4b36      	ldr	r3, [pc, #216]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b6a:	685b      	ldr	r3, [r3, #4]
 8001b6c:	f003 030c 	and.w	r3, r3, #12
 8001b70:	2b08      	cmp	r3, #8
 8001b72:	d061      	beq.n	8001c38 <HAL_RCC_OscConfig+0x4b8>
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	69db      	ldr	r3, [r3, #28]
 8001b78:	2b02      	cmp	r3, #2
 8001b7a:	d146      	bne.n	8001c0a <HAL_RCC_OscConfig+0x48a>
 8001b7c:	4b33      	ldr	r3, [pc, #204]	; (8001c4c <HAL_RCC_OscConfig+0x4cc>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	601a      	str	r2, [r3, #0]
 8001b82:	f7ff fa69 	bl	8001058 <HAL_GetTick>
 8001b86:	6138      	str	r0, [r7, #16]
 8001b88:	e008      	b.n	8001b9c <HAL_RCC_OscConfig+0x41c>
 8001b8a:	f7ff fa65 	bl	8001058 <HAL_GetTick>
 8001b8e:	4602      	mov	r2, r0
 8001b90:	693b      	ldr	r3, [r7, #16]
 8001b92:	1ad3      	subs	r3, r2, r3
 8001b94:	2b02      	cmp	r3, #2
 8001b96:	d901      	bls.n	8001b9c <HAL_RCC_OscConfig+0x41c>
 8001b98:	2303      	movs	r3, #3
 8001b9a:	e06d      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001b9c:	4b29      	ldr	r3, [pc, #164]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ba4:	2b00      	cmp	r3, #0
 8001ba6:	d1f0      	bne.n	8001b8a <HAL_RCC_OscConfig+0x40a>
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	6a1b      	ldr	r3, [r3, #32]
 8001bac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001bb0:	d108      	bne.n	8001bc4 <HAL_RCC_OscConfig+0x444>
 8001bb2:	4b24      	ldr	r3, [pc, #144]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001bb4:	685b      	ldr	r3, [r3, #4]
 8001bb6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	689b      	ldr	r3, [r3, #8]
 8001bbe:	4921      	ldr	r1, [pc, #132]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001bc0:	4313      	orrs	r3, r2
 8001bc2:	604b      	str	r3, [r1, #4]
 8001bc4:	4b1f      	ldr	r3, [pc, #124]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001bc6:	685b      	ldr	r3, [r3, #4]
 8001bc8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	6a19      	ldr	r1, [r3, #32]
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001bd4:	430b      	orrs	r3, r1
 8001bd6:	491b      	ldr	r1, [pc, #108]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001bd8:	4313      	orrs	r3, r2
 8001bda:	604b      	str	r3, [r1, #4]
 8001bdc:	4b1b      	ldr	r3, [pc, #108]	; (8001c4c <HAL_RCC_OscConfig+0x4cc>)
 8001bde:	2201      	movs	r2, #1
 8001be0:	601a      	str	r2, [r3, #0]
 8001be2:	f7ff fa39 	bl	8001058 <HAL_GetTick>
 8001be6:	6138      	str	r0, [r7, #16]
 8001be8:	e008      	b.n	8001bfc <HAL_RCC_OscConfig+0x47c>
 8001bea:	f7ff fa35 	bl	8001058 <HAL_GetTick>
 8001bee:	4602      	mov	r2, r0
 8001bf0:	693b      	ldr	r3, [r7, #16]
 8001bf2:	1ad3      	subs	r3, r2, r3
 8001bf4:	2b02      	cmp	r3, #2
 8001bf6:	d901      	bls.n	8001bfc <HAL_RCC_OscConfig+0x47c>
 8001bf8:	2303      	movs	r3, #3
 8001bfa:	e03d      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001bfc:	4b11      	ldr	r3, [pc, #68]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	d0f0      	beq.n	8001bea <HAL_RCC_OscConfig+0x46a>
 8001c08:	e035      	b.n	8001c76 <HAL_RCC_OscConfig+0x4f6>
 8001c0a:	4b10      	ldr	r3, [pc, #64]	; (8001c4c <HAL_RCC_OscConfig+0x4cc>)
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	601a      	str	r2, [r3, #0]
 8001c10:	f7ff fa22 	bl	8001058 <HAL_GetTick>
 8001c14:	6138      	str	r0, [r7, #16]
 8001c16:	e008      	b.n	8001c2a <HAL_RCC_OscConfig+0x4aa>
 8001c18:	f7ff fa1e 	bl	8001058 <HAL_GetTick>
 8001c1c:	4602      	mov	r2, r0
 8001c1e:	693b      	ldr	r3, [r7, #16]
 8001c20:	1ad3      	subs	r3, r2, r3
 8001c22:	2b02      	cmp	r3, #2
 8001c24:	d901      	bls.n	8001c2a <HAL_RCC_OscConfig+0x4aa>
 8001c26:	2303      	movs	r3, #3
 8001c28:	e026      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001c2a:	4b06      	ldr	r3, [pc, #24]	; (8001c44 <HAL_RCC_OscConfig+0x4c4>)
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c32:	2b00      	cmp	r3, #0
 8001c34:	d1f0      	bne.n	8001c18 <HAL_RCC_OscConfig+0x498>
 8001c36:	e01e      	b.n	8001c76 <HAL_RCC_OscConfig+0x4f6>
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	69db      	ldr	r3, [r3, #28]
 8001c3c:	2b01      	cmp	r3, #1
 8001c3e:	d107      	bne.n	8001c50 <HAL_RCC_OscConfig+0x4d0>
 8001c40:	2301      	movs	r3, #1
 8001c42:	e019      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001c44:	40021000 	.word	0x40021000
 8001c48:	40007000 	.word	0x40007000
 8001c4c:	42420060 	.word	0x42420060
 8001c50:	4b0b      	ldr	r3, [pc, #44]	; (8001c80 <HAL_RCC_OscConfig+0x500>)
 8001c52:	685b      	ldr	r3, [r3, #4]
 8001c54:	60fb      	str	r3, [r7, #12]
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	6a1b      	ldr	r3, [r3, #32]
 8001c60:	429a      	cmp	r2, r3
 8001c62:	d106      	bne.n	8001c72 <HAL_RCC_OscConfig+0x4f2>
 8001c64:	68fb      	ldr	r3, [r7, #12]
 8001c66:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c6e:	429a      	cmp	r2, r3
 8001c70:	d001      	beq.n	8001c76 <HAL_RCC_OscConfig+0x4f6>
 8001c72:	2301      	movs	r3, #1
 8001c74:	e000      	b.n	8001c78 <HAL_RCC_OscConfig+0x4f8>
 8001c76:	2300      	movs	r3, #0
 8001c78:	4618      	mov	r0, r3
 8001c7a:	3718      	adds	r7, #24
 8001c7c:	46bd      	mov	sp, r7
 8001c7e:	bd80      	pop	{r7, pc}
 8001c80:	40021000 	.word	0x40021000

08001c84 <HAL_RCC_ClockConfig>:
 8001c84:	b580      	push	{r7, lr}
 8001c86:	b084      	sub	sp, #16
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	6078      	str	r0, [r7, #4]
 8001c8c:	6039      	str	r1, [r7, #0]
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	2b00      	cmp	r3, #0
 8001c92:	d101      	bne.n	8001c98 <HAL_RCC_ClockConfig+0x14>
 8001c94:	2301      	movs	r3, #1
 8001c96:	e0d0      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001c98:	4b6a      	ldr	r3, [pc, #424]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	f003 0307 	and.w	r3, r3, #7
 8001ca0:	683a      	ldr	r2, [r7, #0]
 8001ca2:	429a      	cmp	r2, r3
 8001ca4:	d910      	bls.n	8001cc8 <HAL_RCC_ClockConfig+0x44>
 8001ca6:	4b67      	ldr	r3, [pc, #412]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	f023 0207 	bic.w	r2, r3, #7
 8001cae:	4965      	ldr	r1, [pc, #404]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001cb0:	683b      	ldr	r3, [r7, #0]
 8001cb2:	4313      	orrs	r3, r2
 8001cb4:	600b      	str	r3, [r1, #0]
 8001cb6:	4b63      	ldr	r3, [pc, #396]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001cb8:	681b      	ldr	r3, [r3, #0]
 8001cba:	f003 0307 	and.w	r3, r3, #7
 8001cbe:	683a      	ldr	r2, [r7, #0]
 8001cc0:	429a      	cmp	r2, r3
 8001cc2:	d001      	beq.n	8001cc8 <HAL_RCC_ClockConfig+0x44>
 8001cc4:	2301      	movs	r3, #1
 8001cc6:	e0b8      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	f003 0302 	and.w	r3, r3, #2
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d020      	beq.n	8001d16 <HAL_RCC_ClockConfig+0x92>
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	f003 0304 	and.w	r3, r3, #4
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d005      	beq.n	8001cec <HAL_RCC_ClockConfig+0x68>
 8001ce0:	4b59      	ldr	r3, [pc, #356]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001ce2:	685b      	ldr	r3, [r3, #4]
 8001ce4:	4a58      	ldr	r2, [pc, #352]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001ce6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001cea:	6053      	str	r3, [r2, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	f003 0308 	and.w	r3, r3, #8
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	d005      	beq.n	8001d04 <HAL_RCC_ClockConfig+0x80>
 8001cf8:	4b53      	ldr	r3, [pc, #332]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001cfa:	685b      	ldr	r3, [r3, #4]
 8001cfc:	4a52      	ldr	r2, [pc, #328]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001cfe:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001d02:	6053      	str	r3, [r2, #4]
 8001d04:	4b50      	ldr	r3, [pc, #320]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d06:	685b      	ldr	r3, [r3, #4]
 8001d08:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	689b      	ldr	r3, [r3, #8]
 8001d10:	494d      	ldr	r1, [pc, #308]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d12:	4313      	orrs	r3, r2
 8001d14:	604b      	str	r3, [r1, #4]
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	f003 0301 	and.w	r3, r3, #1
 8001d1e:	2b00      	cmp	r3, #0
 8001d20:	d040      	beq.n	8001da4 <HAL_RCC_ClockConfig+0x120>
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	685b      	ldr	r3, [r3, #4]
 8001d26:	2b01      	cmp	r3, #1
 8001d28:	d107      	bne.n	8001d3a <HAL_RCC_ClockConfig+0xb6>
 8001d2a:	4b47      	ldr	r3, [pc, #284]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d115      	bne.n	8001d62 <HAL_RCC_ClockConfig+0xde>
 8001d36:	2301      	movs	r3, #1
 8001d38:	e07f      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001d3a:	687b      	ldr	r3, [r7, #4]
 8001d3c:	685b      	ldr	r3, [r3, #4]
 8001d3e:	2b02      	cmp	r3, #2
 8001d40:	d107      	bne.n	8001d52 <HAL_RCC_ClockConfig+0xce>
 8001d42:	4b41      	ldr	r3, [pc, #260]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d44:	681b      	ldr	r3, [r3, #0]
 8001d46:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001d4a:	2b00      	cmp	r3, #0
 8001d4c:	d109      	bne.n	8001d62 <HAL_RCC_ClockConfig+0xde>
 8001d4e:	2301      	movs	r3, #1
 8001d50:	e073      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001d52:	4b3d      	ldr	r3, [pc, #244]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	f003 0302 	and.w	r3, r3, #2
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d101      	bne.n	8001d62 <HAL_RCC_ClockConfig+0xde>
 8001d5e:	2301      	movs	r3, #1
 8001d60:	e06b      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001d62:	4b39      	ldr	r3, [pc, #228]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d64:	685b      	ldr	r3, [r3, #4]
 8001d66:	f023 0203 	bic.w	r2, r3, #3
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	685b      	ldr	r3, [r3, #4]
 8001d6e:	4936      	ldr	r1, [pc, #216]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d70:	4313      	orrs	r3, r2
 8001d72:	604b      	str	r3, [r1, #4]
 8001d74:	f7ff f970 	bl	8001058 <HAL_GetTick>
 8001d78:	60f8      	str	r0, [r7, #12]
 8001d7a:	e00a      	b.n	8001d92 <HAL_RCC_ClockConfig+0x10e>
 8001d7c:	f7ff f96c 	bl	8001058 <HAL_GetTick>
 8001d80:	4602      	mov	r2, r0
 8001d82:	68fb      	ldr	r3, [r7, #12]
 8001d84:	1ad3      	subs	r3, r2, r3
 8001d86:	f241 3288 	movw	r2, #5000	; 0x1388
 8001d8a:	4293      	cmp	r3, r2
 8001d8c:	d901      	bls.n	8001d92 <HAL_RCC_ClockConfig+0x10e>
 8001d8e:	2303      	movs	r3, #3
 8001d90:	e053      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001d92:	4b2d      	ldr	r3, [pc, #180]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001d94:	685b      	ldr	r3, [r3, #4]
 8001d96:	f003 020c 	and.w	r2, r3, #12
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	685b      	ldr	r3, [r3, #4]
 8001d9e:	009b      	lsls	r3, r3, #2
 8001da0:	429a      	cmp	r2, r3
 8001da2:	d1eb      	bne.n	8001d7c <HAL_RCC_ClockConfig+0xf8>
 8001da4:	4b27      	ldr	r3, [pc, #156]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	f003 0307 	and.w	r3, r3, #7
 8001dac:	683a      	ldr	r2, [r7, #0]
 8001dae:	429a      	cmp	r2, r3
 8001db0:	d210      	bcs.n	8001dd4 <HAL_RCC_ClockConfig+0x150>
 8001db2:	4b24      	ldr	r3, [pc, #144]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	f023 0207 	bic.w	r2, r3, #7
 8001dba:	4922      	ldr	r1, [pc, #136]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001dbc:	683b      	ldr	r3, [r7, #0]
 8001dbe:	4313      	orrs	r3, r2
 8001dc0:	600b      	str	r3, [r1, #0]
 8001dc2:	4b20      	ldr	r3, [pc, #128]	; (8001e44 <HAL_RCC_ClockConfig+0x1c0>)
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f003 0307 	and.w	r3, r3, #7
 8001dca:	683a      	ldr	r2, [r7, #0]
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	d001      	beq.n	8001dd4 <HAL_RCC_ClockConfig+0x150>
 8001dd0:	2301      	movs	r3, #1
 8001dd2:	e032      	b.n	8001e3a <HAL_RCC_ClockConfig+0x1b6>
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	f003 0304 	and.w	r3, r3, #4
 8001ddc:	2b00      	cmp	r3, #0
 8001dde:	d008      	beq.n	8001df2 <HAL_RCC_ClockConfig+0x16e>
 8001de0:	4b19      	ldr	r3, [pc, #100]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001de2:	685b      	ldr	r3, [r3, #4]
 8001de4:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001de8:	687b      	ldr	r3, [r7, #4]
 8001dea:	68db      	ldr	r3, [r3, #12]
 8001dec:	4916      	ldr	r1, [pc, #88]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001dee:	4313      	orrs	r3, r2
 8001df0:	604b      	str	r3, [r1, #4]
 8001df2:	687b      	ldr	r3, [r7, #4]
 8001df4:	681b      	ldr	r3, [r3, #0]
 8001df6:	f003 0308 	and.w	r3, r3, #8
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d009      	beq.n	8001e12 <HAL_RCC_ClockConfig+0x18e>
 8001dfe:	4b12      	ldr	r3, [pc, #72]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001e00:	685b      	ldr	r3, [r3, #4]
 8001e02:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001e06:	687b      	ldr	r3, [r7, #4]
 8001e08:	691b      	ldr	r3, [r3, #16]
 8001e0a:	00db      	lsls	r3, r3, #3
 8001e0c:	490e      	ldr	r1, [pc, #56]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001e0e:	4313      	orrs	r3, r2
 8001e10:	604b      	str	r3, [r1, #4]
 8001e12:	f000 f821 	bl	8001e58 <HAL_RCC_GetSysClockFreq>
 8001e16:	4602      	mov	r2, r0
 8001e18:	4b0b      	ldr	r3, [pc, #44]	; (8001e48 <HAL_RCC_ClockConfig+0x1c4>)
 8001e1a:	685b      	ldr	r3, [r3, #4]
 8001e1c:	091b      	lsrs	r3, r3, #4
 8001e1e:	f003 030f 	and.w	r3, r3, #15
 8001e22:	490a      	ldr	r1, [pc, #40]	; (8001e4c <HAL_RCC_ClockConfig+0x1c8>)
 8001e24:	5ccb      	ldrb	r3, [r1, r3]
 8001e26:	fa22 f303 	lsr.w	r3, r2, r3
 8001e2a:	4a09      	ldr	r2, [pc, #36]	; (8001e50 <HAL_RCC_ClockConfig+0x1cc>)
 8001e2c:	6013      	str	r3, [r2, #0]
 8001e2e:	4b09      	ldr	r3, [pc, #36]	; (8001e54 <HAL_RCC_ClockConfig+0x1d0>)
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	4618      	mov	r0, r3
 8001e34:	f7ff f8ce 	bl	8000fd4 <HAL_InitTick>
 8001e38:	2300      	movs	r3, #0
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	3710      	adds	r7, #16
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bd80      	pop	{r7, pc}
 8001e42:	bf00      	nop
 8001e44:	40022000 	.word	0x40022000
 8001e48:	40021000 	.word	0x40021000
 8001e4c:	0800355c 	.word	0x0800355c
 8001e50:	20000018 	.word	0x20000018
 8001e54:	2000001c 	.word	0x2000001c

08001e58 <HAL_RCC_GetSysClockFreq>:
 8001e58:	b490      	push	{r4, r7}
 8001e5a:	b08a      	sub	sp, #40	; 0x28
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	4b29      	ldr	r3, [pc, #164]	; (8001f04 <HAL_RCC_GetSysClockFreq+0xac>)
 8001e60:	1d3c      	adds	r4, r7, #4
 8001e62:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001e64:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001e68:	f240 2301 	movw	r3, #513	; 0x201
 8001e6c:	803b      	strh	r3, [r7, #0]
 8001e6e:	2300      	movs	r3, #0
 8001e70:	61fb      	str	r3, [r7, #28]
 8001e72:	2300      	movs	r3, #0
 8001e74:	61bb      	str	r3, [r7, #24]
 8001e76:	2300      	movs	r3, #0
 8001e78:	627b      	str	r3, [r7, #36]	; 0x24
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	617b      	str	r3, [r7, #20]
 8001e7e:	2300      	movs	r3, #0
 8001e80:	623b      	str	r3, [r7, #32]
 8001e82:	4b21      	ldr	r3, [pc, #132]	; (8001f08 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001e84:	685b      	ldr	r3, [r3, #4]
 8001e86:	61fb      	str	r3, [r7, #28]
 8001e88:	69fb      	ldr	r3, [r7, #28]
 8001e8a:	f003 030c 	and.w	r3, r3, #12
 8001e8e:	2b04      	cmp	r3, #4
 8001e90:	d002      	beq.n	8001e98 <HAL_RCC_GetSysClockFreq+0x40>
 8001e92:	2b08      	cmp	r3, #8
 8001e94:	d003      	beq.n	8001e9e <HAL_RCC_GetSysClockFreq+0x46>
 8001e96:	e02b      	b.n	8001ef0 <HAL_RCC_GetSysClockFreq+0x98>
 8001e98:	4b1c      	ldr	r3, [pc, #112]	; (8001f0c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001e9a:	623b      	str	r3, [r7, #32]
 8001e9c:	e02b      	b.n	8001ef6 <HAL_RCC_GetSysClockFreq+0x9e>
 8001e9e:	69fb      	ldr	r3, [r7, #28]
 8001ea0:	0c9b      	lsrs	r3, r3, #18
 8001ea2:	f003 030f 	and.w	r3, r3, #15
 8001ea6:	3328      	adds	r3, #40	; 0x28
 8001ea8:	443b      	add	r3, r7
 8001eaa:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001eae:	617b      	str	r3, [r7, #20]
 8001eb0:	69fb      	ldr	r3, [r7, #28]
 8001eb2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001eb6:	2b00      	cmp	r3, #0
 8001eb8:	d012      	beq.n	8001ee0 <HAL_RCC_GetSysClockFreq+0x88>
 8001eba:	4b13      	ldr	r3, [pc, #76]	; (8001f08 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001ebc:	685b      	ldr	r3, [r3, #4]
 8001ebe:	0c5b      	lsrs	r3, r3, #17
 8001ec0:	f003 0301 	and.w	r3, r3, #1
 8001ec4:	3328      	adds	r3, #40	; 0x28
 8001ec6:	443b      	add	r3, r7
 8001ec8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001ecc:	61bb      	str	r3, [r7, #24]
 8001ece:	697b      	ldr	r3, [r7, #20]
 8001ed0:	4a0e      	ldr	r2, [pc, #56]	; (8001f0c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ed2:	fb03 f202 	mul.w	r2, r3, r2
 8001ed6:	69bb      	ldr	r3, [r7, #24]
 8001ed8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001edc:	627b      	str	r3, [r7, #36]	; 0x24
 8001ede:	e004      	b.n	8001eea <HAL_RCC_GetSysClockFreq+0x92>
 8001ee0:	697b      	ldr	r3, [r7, #20]
 8001ee2:	4a0b      	ldr	r2, [pc, #44]	; (8001f10 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001ee4:	fb02 f303 	mul.w	r3, r2, r3
 8001ee8:	627b      	str	r3, [r7, #36]	; 0x24
 8001eea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eec:	623b      	str	r3, [r7, #32]
 8001eee:	e002      	b.n	8001ef6 <HAL_RCC_GetSysClockFreq+0x9e>
 8001ef0:	4b06      	ldr	r3, [pc, #24]	; (8001f0c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001ef2:	623b      	str	r3, [r7, #32]
 8001ef4:	bf00      	nop
 8001ef6:	6a3b      	ldr	r3, [r7, #32]
 8001ef8:	4618      	mov	r0, r3
 8001efa:	3728      	adds	r7, #40	; 0x28
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bc90      	pop	{r4, r7}
 8001f00:	4770      	bx	lr
 8001f02:	bf00      	nop
 8001f04:	0800354c 	.word	0x0800354c
 8001f08:	40021000 	.word	0x40021000
 8001f0c:	007a1200 	.word	0x007a1200
 8001f10:	003d0900 	.word	0x003d0900

08001f14 <HAL_RCC_GetHCLKFreq>:
 8001f14:	b480      	push	{r7}
 8001f16:	af00      	add	r7, sp, #0
 8001f18:	4b02      	ldr	r3, [pc, #8]	; (8001f24 <HAL_RCC_GetHCLKFreq+0x10>)
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	4618      	mov	r0, r3
 8001f1e:	46bd      	mov	sp, r7
 8001f20:	bc80      	pop	{r7}
 8001f22:	4770      	bx	lr
 8001f24:	20000018 	.word	0x20000018

08001f28 <HAL_RCC_GetPCLK1Freq>:
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	f7ff fff2 	bl	8001f14 <HAL_RCC_GetHCLKFreq>
 8001f30:	4602      	mov	r2, r0
 8001f32:	4b05      	ldr	r3, [pc, #20]	; (8001f48 <HAL_RCC_GetPCLK1Freq+0x20>)
 8001f34:	685b      	ldr	r3, [r3, #4]
 8001f36:	0a1b      	lsrs	r3, r3, #8
 8001f38:	f003 0307 	and.w	r3, r3, #7
 8001f3c:	4903      	ldr	r1, [pc, #12]	; (8001f4c <HAL_RCC_GetPCLK1Freq+0x24>)
 8001f3e:	5ccb      	ldrb	r3, [r1, r3]
 8001f40:	fa22 f303 	lsr.w	r3, r2, r3
 8001f44:	4618      	mov	r0, r3
 8001f46:	bd80      	pop	{r7, pc}
 8001f48:	40021000 	.word	0x40021000
 8001f4c:	0800356c 	.word	0x0800356c

08001f50 <HAL_RCC_GetPCLK2Freq>:
 8001f50:	b580      	push	{r7, lr}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	f7ff ffde 	bl	8001f14 <HAL_RCC_GetHCLKFreq>
 8001f58:	4602      	mov	r2, r0
 8001f5a:	4b05      	ldr	r3, [pc, #20]	; (8001f70 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001f5c:	685b      	ldr	r3, [r3, #4]
 8001f5e:	0adb      	lsrs	r3, r3, #11
 8001f60:	f003 0307 	and.w	r3, r3, #7
 8001f64:	4903      	ldr	r1, [pc, #12]	; (8001f74 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001f66:	5ccb      	ldrb	r3, [r1, r3]
 8001f68:	fa22 f303 	lsr.w	r3, r2, r3
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	bd80      	pop	{r7, pc}
 8001f70:	40021000 	.word	0x40021000
 8001f74:	0800356c 	.word	0x0800356c

08001f78 <RCC_Delay>:
 8001f78:	b480      	push	{r7}
 8001f7a:	b085      	sub	sp, #20
 8001f7c:	af00      	add	r7, sp, #0
 8001f7e:	6078      	str	r0, [r7, #4]
 8001f80:	4b0a      	ldr	r3, [pc, #40]	; (8001fac <RCC_Delay+0x34>)
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4a0a      	ldr	r2, [pc, #40]	; (8001fb0 <RCC_Delay+0x38>)
 8001f86:	fba2 2303 	umull	r2, r3, r2, r3
 8001f8a:	0a5b      	lsrs	r3, r3, #9
 8001f8c:	687a      	ldr	r2, [r7, #4]
 8001f8e:	fb02 f303 	mul.w	r3, r2, r3
 8001f92:	60fb      	str	r3, [r7, #12]
 8001f94:	bf00      	nop
 8001f96:	68fb      	ldr	r3, [r7, #12]
 8001f98:	1e5a      	subs	r2, r3, #1
 8001f9a:	60fa      	str	r2, [r7, #12]
 8001f9c:	2b00      	cmp	r3, #0
 8001f9e:	d1f9      	bne.n	8001f94 <RCC_Delay+0x1c>
 8001fa0:	bf00      	nop
 8001fa2:	bf00      	nop
 8001fa4:	3714      	adds	r7, #20
 8001fa6:	46bd      	mov	sp, r7
 8001fa8:	bc80      	pop	{r7}
 8001faa:	4770      	bx	lr
 8001fac:	20000018 	.word	0x20000018
 8001fb0:	10624dd3 	.word	0x10624dd3

08001fb4 <HAL_TIM_Base_Init>:
 8001fb4:	b580      	push	{r7, lr}
 8001fb6:	b082      	sub	sp, #8
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	6078      	str	r0, [r7, #4]
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d101      	bne.n	8001fc6 <HAL_TIM_Base_Init+0x12>
 8001fc2:	2301      	movs	r3, #1
 8001fc4:	e041      	b.n	800204a <HAL_TIM_Base_Init+0x96>
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001fcc:	b2db      	uxtb	r3, r3
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	d106      	bne.n	8001fe0 <HAL_TIM_Base_Init+0x2c>
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	2200      	movs	r2, #0
 8001fd6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001fda:	6878      	ldr	r0, [r7, #4]
 8001fdc:	f7fe fdde 	bl	8000b9c <HAL_TIM_Base_MspInit>
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	2202      	movs	r2, #2
 8001fe4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681a      	ldr	r2, [r3, #0]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	3304      	adds	r3, #4
 8001ff0:	4619      	mov	r1, r3
 8001ff2:	4610      	mov	r0, r2
 8001ff4:	f000 fb86 	bl	8002704 <TIM_Base_SetConfig>
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	2201      	movs	r2, #1
 8001ffc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	2201      	movs	r2, #1
 8002004:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	2201      	movs	r2, #1
 800200c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	2201      	movs	r2, #1
 8002014:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	2201      	movs	r2, #1
 800201c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	2201      	movs	r2, #1
 8002024:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	2201      	movs	r2, #1
 800202c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	2201      	movs	r2, #1
 8002034:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	2201      	movs	r2, #1
 800203c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002040:	687b      	ldr	r3, [r7, #4]
 8002042:	2201      	movs	r2, #1
 8002044:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002048:	2300      	movs	r3, #0
 800204a:	4618      	mov	r0, r3
 800204c:	3708      	adds	r7, #8
 800204e:	46bd      	mov	sp, r7
 8002050:	bd80      	pop	{r7, pc}
	...

08002054 <HAL_TIM_Base_Start_IT>:
 8002054:	b480      	push	{r7}
 8002056:	b085      	sub	sp, #20
 8002058:	af00      	add	r7, sp, #0
 800205a:	6078      	str	r0, [r7, #4]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002062:	b2db      	uxtb	r3, r3
 8002064:	2b01      	cmp	r3, #1
 8002066:	d001      	beq.n	800206c <HAL_TIM_Base_Start_IT+0x18>
 8002068:	2301      	movs	r3, #1
 800206a:	e03a      	b.n	80020e2 <HAL_TIM_Base_Start_IT+0x8e>
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	2202      	movs	r2, #2
 8002070:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	68da      	ldr	r2, [r3, #12]
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	f042 0201 	orr.w	r2, r2, #1
 8002082:	60da      	str	r2, [r3, #12]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	4a18      	ldr	r2, [pc, #96]	; (80020ec <HAL_TIM_Base_Start_IT+0x98>)
 800208a:	4293      	cmp	r3, r2
 800208c:	d00e      	beq.n	80020ac <HAL_TIM_Base_Start_IT+0x58>
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002096:	d009      	beq.n	80020ac <HAL_TIM_Base_Start_IT+0x58>
 8002098:	687b      	ldr	r3, [r7, #4]
 800209a:	681b      	ldr	r3, [r3, #0]
 800209c:	4a14      	ldr	r2, [pc, #80]	; (80020f0 <HAL_TIM_Base_Start_IT+0x9c>)
 800209e:	4293      	cmp	r3, r2
 80020a0:	d004      	beq.n	80020ac <HAL_TIM_Base_Start_IT+0x58>
 80020a2:	687b      	ldr	r3, [r7, #4]
 80020a4:	681b      	ldr	r3, [r3, #0]
 80020a6:	4a13      	ldr	r2, [pc, #76]	; (80020f4 <HAL_TIM_Base_Start_IT+0xa0>)
 80020a8:	4293      	cmp	r3, r2
 80020aa:	d111      	bne.n	80020d0 <HAL_TIM_Base_Start_IT+0x7c>
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	689b      	ldr	r3, [r3, #8]
 80020b2:	f003 0307 	and.w	r3, r3, #7
 80020b6:	60fb      	str	r3, [r7, #12]
 80020b8:	68fb      	ldr	r3, [r7, #12]
 80020ba:	2b06      	cmp	r3, #6
 80020bc:	d010      	beq.n	80020e0 <HAL_TIM_Base_Start_IT+0x8c>
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	681a      	ldr	r2, [r3, #0]
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	f042 0201 	orr.w	r2, r2, #1
 80020cc:	601a      	str	r2, [r3, #0]
 80020ce:	e007      	b.n	80020e0 <HAL_TIM_Base_Start_IT+0x8c>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	681a      	ldr	r2, [r3, #0]
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	f042 0201 	orr.w	r2, r2, #1
 80020de:	601a      	str	r2, [r3, #0]
 80020e0:	2300      	movs	r3, #0
 80020e2:	4618      	mov	r0, r3
 80020e4:	3714      	adds	r7, #20
 80020e6:	46bd      	mov	sp, r7
 80020e8:	bc80      	pop	{r7}
 80020ea:	4770      	bx	lr
 80020ec:	40012c00 	.word	0x40012c00
 80020f0:	40000400 	.word	0x40000400
 80020f4:	40000800 	.word	0x40000800

080020f8 <HAL_TIM_PWM_Init>:
 80020f8:	b580      	push	{r7, lr}
 80020fa:	b082      	sub	sp, #8
 80020fc:	af00      	add	r7, sp, #0
 80020fe:	6078      	str	r0, [r7, #4]
 8002100:	687b      	ldr	r3, [r7, #4]
 8002102:	2b00      	cmp	r3, #0
 8002104:	d101      	bne.n	800210a <HAL_TIM_PWM_Init+0x12>
 8002106:	2301      	movs	r3, #1
 8002108:	e041      	b.n	800218e <HAL_TIM_PWM_Init+0x96>
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002110:	b2db      	uxtb	r3, r3
 8002112:	2b00      	cmp	r3, #0
 8002114:	d106      	bne.n	8002124 <HAL_TIM_PWM_Init+0x2c>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	2200      	movs	r2, #0
 800211a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800211e:	6878      	ldr	r0, [r7, #4]
 8002120:	f000 f839 	bl	8002196 <HAL_TIM_PWM_MspInit>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	2202      	movs	r2, #2
 8002128:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	681a      	ldr	r2, [r3, #0]
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	3304      	adds	r3, #4
 8002134:	4619      	mov	r1, r3
 8002136:	4610      	mov	r0, r2
 8002138:	f000 fae4 	bl	8002704 <TIM_Base_SetConfig>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	2201      	movs	r2, #1
 8002140:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	2201      	movs	r2, #1
 8002148:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	2201      	movs	r2, #1
 8002150:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	2201      	movs	r2, #1
 8002158:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	2201      	movs	r2, #1
 8002160:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	2201      	movs	r2, #1
 8002168:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	2201      	movs	r2, #1
 8002170:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	2201      	movs	r2, #1
 8002178:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	2201      	movs	r2, #1
 8002180:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	2201      	movs	r2, #1
 8002188:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800218c:	2300      	movs	r3, #0
 800218e:	4618      	mov	r0, r3
 8002190:	3708      	adds	r7, #8
 8002192:	46bd      	mov	sp, r7
 8002194:	bd80      	pop	{r7, pc}

08002196 <HAL_TIM_PWM_MspInit>:
 8002196:	b480      	push	{r7}
 8002198:	b083      	sub	sp, #12
 800219a:	af00      	add	r7, sp, #0
 800219c:	6078      	str	r0, [r7, #4]
 800219e:	bf00      	nop
 80021a0:	370c      	adds	r7, #12
 80021a2:	46bd      	mov	sp, r7
 80021a4:	bc80      	pop	{r7}
 80021a6:	4770      	bx	lr

080021a8 <HAL_TIM_IRQHandler>:
 80021a8:	b580      	push	{r7, lr}
 80021aa:	b082      	sub	sp, #8
 80021ac:	af00      	add	r7, sp, #0
 80021ae:	6078      	str	r0, [r7, #4]
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	691b      	ldr	r3, [r3, #16]
 80021b6:	f003 0302 	and.w	r3, r3, #2
 80021ba:	2b02      	cmp	r3, #2
 80021bc:	d122      	bne.n	8002204 <HAL_TIM_IRQHandler+0x5c>
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	681b      	ldr	r3, [r3, #0]
 80021c2:	68db      	ldr	r3, [r3, #12]
 80021c4:	f003 0302 	and.w	r3, r3, #2
 80021c8:	2b02      	cmp	r3, #2
 80021ca:	d11b      	bne.n	8002204 <HAL_TIM_IRQHandler+0x5c>
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	681b      	ldr	r3, [r3, #0]
 80021d0:	f06f 0202 	mvn.w	r2, #2
 80021d4:	611a      	str	r2, [r3, #16]
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	2201      	movs	r2, #1
 80021da:	771a      	strb	r2, [r3, #28]
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	681b      	ldr	r3, [r3, #0]
 80021e0:	699b      	ldr	r3, [r3, #24]
 80021e2:	f003 0303 	and.w	r3, r3, #3
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d003      	beq.n	80021f2 <HAL_TIM_IRQHandler+0x4a>
 80021ea:	6878      	ldr	r0, [r7, #4]
 80021ec:	f000 fa6f 	bl	80026ce <HAL_TIM_IC_CaptureCallback>
 80021f0:	e005      	b.n	80021fe <HAL_TIM_IRQHandler+0x56>
 80021f2:	6878      	ldr	r0, [r7, #4]
 80021f4:	f000 fa62 	bl	80026bc <HAL_TIM_OC_DelayElapsedCallback>
 80021f8:	6878      	ldr	r0, [r7, #4]
 80021fa:	f000 fa71 	bl	80026e0 <HAL_TIM_PWM_PulseFinishedCallback>
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	2200      	movs	r2, #0
 8002202:	771a      	strb	r2, [r3, #28]
 8002204:	687b      	ldr	r3, [r7, #4]
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	691b      	ldr	r3, [r3, #16]
 800220a:	f003 0304 	and.w	r3, r3, #4
 800220e:	2b04      	cmp	r3, #4
 8002210:	d122      	bne.n	8002258 <HAL_TIM_IRQHandler+0xb0>
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	68db      	ldr	r3, [r3, #12]
 8002218:	f003 0304 	and.w	r3, r3, #4
 800221c:	2b04      	cmp	r3, #4
 800221e:	d11b      	bne.n	8002258 <HAL_TIM_IRQHandler+0xb0>
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	f06f 0204 	mvn.w	r2, #4
 8002228:	611a      	str	r2, [r3, #16]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	2202      	movs	r2, #2
 800222e:	771a      	strb	r2, [r3, #28]
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	699b      	ldr	r3, [r3, #24]
 8002236:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800223a:	2b00      	cmp	r3, #0
 800223c:	d003      	beq.n	8002246 <HAL_TIM_IRQHandler+0x9e>
 800223e:	6878      	ldr	r0, [r7, #4]
 8002240:	f000 fa45 	bl	80026ce <HAL_TIM_IC_CaptureCallback>
 8002244:	e005      	b.n	8002252 <HAL_TIM_IRQHandler+0xaa>
 8002246:	6878      	ldr	r0, [r7, #4]
 8002248:	f000 fa38 	bl	80026bc <HAL_TIM_OC_DelayElapsedCallback>
 800224c:	6878      	ldr	r0, [r7, #4]
 800224e:	f000 fa47 	bl	80026e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	2200      	movs	r2, #0
 8002256:	771a      	strb	r2, [r3, #28]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	691b      	ldr	r3, [r3, #16]
 800225e:	f003 0308 	and.w	r3, r3, #8
 8002262:	2b08      	cmp	r3, #8
 8002264:	d122      	bne.n	80022ac <HAL_TIM_IRQHandler+0x104>
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	68db      	ldr	r3, [r3, #12]
 800226c:	f003 0308 	and.w	r3, r3, #8
 8002270:	2b08      	cmp	r3, #8
 8002272:	d11b      	bne.n	80022ac <HAL_TIM_IRQHandler+0x104>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	f06f 0208 	mvn.w	r2, #8
 800227c:	611a      	str	r2, [r3, #16]
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	2204      	movs	r2, #4
 8002282:	771a      	strb	r2, [r3, #28]
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	69db      	ldr	r3, [r3, #28]
 800228a:	f003 0303 	and.w	r3, r3, #3
 800228e:	2b00      	cmp	r3, #0
 8002290:	d003      	beq.n	800229a <HAL_TIM_IRQHandler+0xf2>
 8002292:	6878      	ldr	r0, [r7, #4]
 8002294:	f000 fa1b 	bl	80026ce <HAL_TIM_IC_CaptureCallback>
 8002298:	e005      	b.n	80022a6 <HAL_TIM_IRQHandler+0xfe>
 800229a:	6878      	ldr	r0, [r7, #4]
 800229c:	f000 fa0e 	bl	80026bc <HAL_TIM_OC_DelayElapsedCallback>
 80022a0:	6878      	ldr	r0, [r7, #4]
 80022a2:	f000 fa1d 	bl	80026e0 <HAL_TIM_PWM_PulseFinishedCallback>
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	2200      	movs	r2, #0
 80022aa:	771a      	strb	r2, [r3, #28]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	681b      	ldr	r3, [r3, #0]
 80022b0:	691b      	ldr	r3, [r3, #16]
 80022b2:	f003 0310 	and.w	r3, r3, #16
 80022b6:	2b10      	cmp	r3, #16
 80022b8:	d122      	bne.n	8002300 <HAL_TIM_IRQHandler+0x158>
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	68db      	ldr	r3, [r3, #12]
 80022c0:	f003 0310 	and.w	r3, r3, #16
 80022c4:	2b10      	cmp	r3, #16
 80022c6:	d11b      	bne.n	8002300 <HAL_TIM_IRQHandler+0x158>
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f06f 0210 	mvn.w	r2, #16
 80022d0:	611a      	str	r2, [r3, #16]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	2208      	movs	r2, #8
 80022d6:	771a      	strb	r2, [r3, #28]
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	69db      	ldr	r3, [r3, #28]
 80022de:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d003      	beq.n	80022ee <HAL_TIM_IRQHandler+0x146>
 80022e6:	6878      	ldr	r0, [r7, #4]
 80022e8:	f000 f9f1 	bl	80026ce <HAL_TIM_IC_CaptureCallback>
 80022ec:	e005      	b.n	80022fa <HAL_TIM_IRQHandler+0x152>
 80022ee:	6878      	ldr	r0, [r7, #4]
 80022f0:	f000 f9e4 	bl	80026bc <HAL_TIM_OC_DelayElapsedCallback>
 80022f4:	6878      	ldr	r0, [r7, #4]
 80022f6:	f000 f9f3 	bl	80026e0 <HAL_TIM_PWM_PulseFinishedCallback>
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	2200      	movs	r2, #0
 80022fe:	771a      	strb	r2, [r3, #28]
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	691b      	ldr	r3, [r3, #16]
 8002306:	f003 0301 	and.w	r3, r3, #1
 800230a:	2b01      	cmp	r3, #1
 800230c:	d10e      	bne.n	800232c <HAL_TIM_IRQHandler+0x184>
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	68db      	ldr	r3, [r3, #12]
 8002314:	f003 0301 	and.w	r3, r3, #1
 8002318:	2b01      	cmp	r3, #1
 800231a:	d107      	bne.n	800232c <HAL_TIM_IRQHandler+0x184>
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	f06f 0201 	mvn.w	r2, #1
 8002324:	611a      	str	r2, [r3, #16]
 8002326:	6878      	ldr	r0, [r7, #4]
 8002328:	f7fe fbfa 	bl	8000b20 <HAL_TIM_PeriodElapsedCallback>
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	691b      	ldr	r3, [r3, #16]
 8002332:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002336:	2b80      	cmp	r3, #128	; 0x80
 8002338:	d10e      	bne.n	8002358 <HAL_TIM_IRQHandler+0x1b0>
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	68db      	ldr	r3, [r3, #12]
 8002340:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002344:	2b80      	cmp	r3, #128	; 0x80
 8002346:	d107      	bne.n	8002358 <HAL_TIM_IRQHandler+0x1b0>
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002350:	611a      	str	r2, [r3, #16]
 8002352:	6878      	ldr	r0, [r7, #4]
 8002354:	f000 fcbd 	bl	8002cd2 <HAL_TIMEx_BreakCallback>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	681b      	ldr	r3, [r3, #0]
 800235c:	691b      	ldr	r3, [r3, #16]
 800235e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002362:	2b40      	cmp	r3, #64	; 0x40
 8002364:	d10e      	bne.n	8002384 <HAL_TIM_IRQHandler+0x1dc>
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	681b      	ldr	r3, [r3, #0]
 800236a:	68db      	ldr	r3, [r3, #12]
 800236c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002370:	2b40      	cmp	r3, #64	; 0x40
 8002372:	d107      	bne.n	8002384 <HAL_TIM_IRQHandler+0x1dc>
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800237c:	611a      	str	r2, [r3, #16]
 800237e:	6878      	ldr	r0, [r7, #4]
 8002380:	f000 f9b7 	bl	80026f2 <HAL_TIM_TriggerCallback>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	691b      	ldr	r3, [r3, #16]
 800238a:	f003 0320 	and.w	r3, r3, #32
 800238e:	2b20      	cmp	r3, #32
 8002390:	d10e      	bne.n	80023b0 <HAL_TIM_IRQHandler+0x208>
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	68db      	ldr	r3, [r3, #12]
 8002398:	f003 0320 	and.w	r3, r3, #32
 800239c:	2b20      	cmp	r3, #32
 800239e:	d107      	bne.n	80023b0 <HAL_TIM_IRQHandler+0x208>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f06f 0220 	mvn.w	r2, #32
 80023a8:	611a      	str	r2, [r3, #16]
 80023aa:	6878      	ldr	r0, [r7, #4]
 80023ac:	f000 fc88 	bl	8002cc0 <HAL_TIMEx_CommutCallback>
 80023b0:	bf00      	nop
 80023b2:	3708      	adds	r7, #8
 80023b4:	46bd      	mov	sp, r7
 80023b6:	bd80      	pop	{r7, pc}

080023b8 <HAL_TIM_PWM_ConfigChannel>:
 80023b8:	b580      	push	{r7, lr}
 80023ba:	b084      	sub	sp, #16
 80023bc:	af00      	add	r7, sp, #0
 80023be:	60f8      	str	r0, [r7, #12]
 80023c0:	60b9      	str	r1, [r7, #8]
 80023c2:	607a      	str	r2, [r7, #4]
 80023c4:	68fb      	ldr	r3, [r7, #12]
 80023c6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80023ca:	2b01      	cmp	r3, #1
 80023cc:	d101      	bne.n	80023d2 <HAL_TIM_PWM_ConfigChannel+0x1a>
 80023ce:	2302      	movs	r3, #2
 80023d0:	e0ac      	b.n	800252c <HAL_TIM_PWM_ConfigChannel+0x174>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	2201      	movs	r2, #1
 80023d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	2b0c      	cmp	r3, #12
 80023de:	f200 809f 	bhi.w	8002520 <HAL_TIM_PWM_ConfigChannel+0x168>
 80023e2:	a201      	add	r2, pc, #4	; (adr r2, 80023e8 <HAL_TIM_PWM_ConfigChannel+0x30>)
 80023e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023e8:	0800241d 	.word	0x0800241d
 80023ec:	08002521 	.word	0x08002521
 80023f0:	08002521 	.word	0x08002521
 80023f4:	08002521 	.word	0x08002521
 80023f8:	0800245d 	.word	0x0800245d
 80023fc:	08002521 	.word	0x08002521
 8002400:	08002521 	.word	0x08002521
 8002404:	08002521 	.word	0x08002521
 8002408:	0800249f 	.word	0x0800249f
 800240c:	08002521 	.word	0x08002521
 8002410:	08002521 	.word	0x08002521
 8002414:	08002521 	.word	0x08002521
 8002418:	080024df 	.word	0x080024df
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	68b9      	ldr	r1, [r7, #8]
 8002422:	4618      	mov	r0, r3
 8002424:	f000 f9d0 	bl	80027c8 <TIM_OC1_SetConfig>
 8002428:	68fb      	ldr	r3, [r7, #12]
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	699a      	ldr	r2, [r3, #24]
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	f042 0208 	orr.w	r2, r2, #8
 8002436:	619a      	str	r2, [r3, #24]
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	699a      	ldr	r2, [r3, #24]
 800243e:	68fb      	ldr	r3, [r7, #12]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	f022 0204 	bic.w	r2, r2, #4
 8002446:	619a      	str	r2, [r3, #24]
 8002448:	68fb      	ldr	r3, [r7, #12]
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	6999      	ldr	r1, [r3, #24]
 800244e:	68bb      	ldr	r3, [r7, #8]
 8002450:	691a      	ldr	r2, [r3, #16]
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	430a      	orrs	r2, r1
 8002458:	619a      	str	r2, [r3, #24]
 800245a:	e062      	b.n	8002522 <HAL_TIM_PWM_ConfigChannel+0x16a>
 800245c:	68fb      	ldr	r3, [r7, #12]
 800245e:	681b      	ldr	r3, [r3, #0]
 8002460:	68b9      	ldr	r1, [r7, #8]
 8002462:	4618      	mov	r0, r3
 8002464:	f000 fa16 	bl	8002894 <TIM_OC2_SetConfig>
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	699a      	ldr	r2, [r3, #24]
 800246e:	68fb      	ldr	r3, [r7, #12]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002476:	619a      	str	r2, [r3, #24]
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	699a      	ldr	r2, [r3, #24]
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002486:	619a      	str	r2, [r3, #24]
 8002488:	68fb      	ldr	r3, [r7, #12]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	6999      	ldr	r1, [r3, #24]
 800248e:	68bb      	ldr	r3, [r7, #8]
 8002490:	691b      	ldr	r3, [r3, #16]
 8002492:	021a      	lsls	r2, r3, #8
 8002494:	68fb      	ldr	r3, [r7, #12]
 8002496:	681b      	ldr	r3, [r3, #0]
 8002498:	430a      	orrs	r2, r1
 800249a:	619a      	str	r2, [r3, #24]
 800249c:	e041      	b.n	8002522 <HAL_TIM_PWM_ConfigChannel+0x16a>
 800249e:	68fb      	ldr	r3, [r7, #12]
 80024a0:	681b      	ldr	r3, [r3, #0]
 80024a2:	68b9      	ldr	r1, [r7, #8]
 80024a4:	4618      	mov	r0, r3
 80024a6:	f000 fa5f 	bl	8002968 <TIM_OC3_SetConfig>
 80024aa:	68fb      	ldr	r3, [r7, #12]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	69da      	ldr	r2, [r3, #28]
 80024b0:	68fb      	ldr	r3, [r7, #12]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	f042 0208 	orr.w	r2, r2, #8
 80024b8:	61da      	str	r2, [r3, #28]
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	69da      	ldr	r2, [r3, #28]
 80024c0:	68fb      	ldr	r3, [r7, #12]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	f022 0204 	bic.w	r2, r2, #4
 80024c8:	61da      	str	r2, [r3, #28]
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	69d9      	ldr	r1, [r3, #28]
 80024d0:	68bb      	ldr	r3, [r7, #8]
 80024d2:	691a      	ldr	r2, [r3, #16]
 80024d4:	68fb      	ldr	r3, [r7, #12]
 80024d6:	681b      	ldr	r3, [r3, #0]
 80024d8:	430a      	orrs	r2, r1
 80024da:	61da      	str	r2, [r3, #28]
 80024dc:	e021      	b.n	8002522 <HAL_TIM_PWM_ConfigChannel+0x16a>
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	68b9      	ldr	r1, [r7, #8]
 80024e4:	4618      	mov	r0, r3
 80024e6:	f000 faa9 	bl	8002a3c <TIM_OC4_SetConfig>
 80024ea:	68fb      	ldr	r3, [r7, #12]
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	69da      	ldr	r2, [r3, #28]
 80024f0:	68fb      	ldr	r3, [r7, #12]
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80024f8:	61da      	str	r2, [r3, #28]
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	69da      	ldr	r2, [r3, #28]
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002508:	61da      	str	r2, [r3, #28]
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	681b      	ldr	r3, [r3, #0]
 800250e:	69d9      	ldr	r1, [r3, #28]
 8002510:	68bb      	ldr	r3, [r7, #8]
 8002512:	691b      	ldr	r3, [r3, #16]
 8002514:	021a      	lsls	r2, r3, #8
 8002516:	68fb      	ldr	r3, [r7, #12]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	430a      	orrs	r2, r1
 800251c:	61da      	str	r2, [r3, #28]
 800251e:	e000      	b.n	8002522 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002520:	bf00      	nop
 8002522:	68fb      	ldr	r3, [r7, #12]
 8002524:	2200      	movs	r2, #0
 8002526:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800252a:	2300      	movs	r3, #0
 800252c:	4618      	mov	r0, r3
 800252e:	3710      	adds	r7, #16
 8002530:	46bd      	mov	sp, r7
 8002532:	bd80      	pop	{r7, pc}

08002534 <HAL_TIM_ConfigClockSource>:
 8002534:	b580      	push	{r7, lr}
 8002536:	b084      	sub	sp, #16
 8002538:	af00      	add	r7, sp, #0
 800253a:	6078      	str	r0, [r7, #4]
 800253c:	6039      	str	r1, [r7, #0]
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002544:	2b01      	cmp	r3, #1
 8002546:	d101      	bne.n	800254c <HAL_TIM_ConfigClockSource+0x18>
 8002548:	2302      	movs	r3, #2
 800254a:	e0b3      	b.n	80026b4 <HAL_TIM_ConfigClockSource+0x180>
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2201      	movs	r2, #1
 8002550:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	2202      	movs	r2, #2
 8002558:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	689b      	ldr	r3, [r3, #8]
 8002562:	60fb      	str	r3, [r7, #12]
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800256a:	60fb      	str	r3, [r7, #12]
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002572:	60fb      	str	r3, [r7, #12]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	68fa      	ldr	r2, [r7, #12]
 800257a:	609a      	str	r2, [r3, #8]
 800257c:	683b      	ldr	r3, [r7, #0]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002584:	d03e      	beq.n	8002604 <HAL_TIM_ConfigClockSource+0xd0>
 8002586:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800258a:	f200 8087 	bhi.w	800269c <HAL_TIM_ConfigClockSource+0x168>
 800258e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002592:	f000 8085 	beq.w	80026a0 <HAL_TIM_ConfigClockSource+0x16c>
 8002596:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800259a:	d87f      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 800259c:	2b70      	cmp	r3, #112	; 0x70
 800259e:	d01a      	beq.n	80025d6 <HAL_TIM_ConfigClockSource+0xa2>
 80025a0:	2b70      	cmp	r3, #112	; 0x70
 80025a2:	d87b      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025a4:	2b60      	cmp	r3, #96	; 0x60
 80025a6:	d050      	beq.n	800264a <HAL_TIM_ConfigClockSource+0x116>
 80025a8:	2b60      	cmp	r3, #96	; 0x60
 80025aa:	d877      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025ac:	2b50      	cmp	r3, #80	; 0x50
 80025ae:	d03c      	beq.n	800262a <HAL_TIM_ConfigClockSource+0xf6>
 80025b0:	2b50      	cmp	r3, #80	; 0x50
 80025b2:	d873      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025b4:	2b40      	cmp	r3, #64	; 0x40
 80025b6:	d058      	beq.n	800266a <HAL_TIM_ConfigClockSource+0x136>
 80025b8:	2b40      	cmp	r3, #64	; 0x40
 80025ba:	d86f      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025bc:	2b30      	cmp	r3, #48	; 0x30
 80025be:	d064      	beq.n	800268a <HAL_TIM_ConfigClockSource+0x156>
 80025c0:	2b30      	cmp	r3, #48	; 0x30
 80025c2:	d86b      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025c4:	2b20      	cmp	r3, #32
 80025c6:	d060      	beq.n	800268a <HAL_TIM_ConfigClockSource+0x156>
 80025c8:	2b20      	cmp	r3, #32
 80025ca:	d867      	bhi.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	d05c      	beq.n	800268a <HAL_TIM_ConfigClockSource+0x156>
 80025d0:	2b10      	cmp	r3, #16
 80025d2:	d05a      	beq.n	800268a <HAL_TIM_ConfigClockSource+0x156>
 80025d4:	e062      	b.n	800269c <HAL_TIM_ConfigClockSource+0x168>
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	6818      	ldr	r0, [r3, #0]
 80025da:	683b      	ldr	r3, [r7, #0]
 80025dc:	6899      	ldr	r1, [r3, #8]
 80025de:	683b      	ldr	r3, [r7, #0]
 80025e0:	685a      	ldr	r2, [r3, #4]
 80025e2:	683b      	ldr	r3, [r7, #0]
 80025e4:	68db      	ldr	r3, [r3, #12]
 80025e6:	f000 faee 	bl	8002bc6 <TIM_ETR_SetConfig>
 80025ea:	687b      	ldr	r3, [r7, #4]
 80025ec:	681b      	ldr	r3, [r3, #0]
 80025ee:	689b      	ldr	r3, [r3, #8]
 80025f0:	60fb      	str	r3, [r7, #12]
 80025f2:	68fb      	ldr	r3, [r7, #12]
 80025f4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80025f8:	60fb      	str	r3, [r7, #12]
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	68fa      	ldr	r2, [r7, #12]
 8002600:	609a      	str	r2, [r3, #8]
 8002602:	e04e      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	6818      	ldr	r0, [r3, #0]
 8002608:	683b      	ldr	r3, [r7, #0]
 800260a:	6899      	ldr	r1, [r3, #8]
 800260c:	683b      	ldr	r3, [r7, #0]
 800260e:	685a      	ldr	r2, [r3, #4]
 8002610:	683b      	ldr	r3, [r7, #0]
 8002612:	68db      	ldr	r3, [r3, #12]
 8002614:	f000 fad7 	bl	8002bc6 <TIM_ETR_SetConfig>
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	689a      	ldr	r2, [r3, #8]
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002626:	609a      	str	r2, [r3, #8]
 8002628:	e03b      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	6818      	ldr	r0, [r3, #0]
 800262e:	683b      	ldr	r3, [r7, #0]
 8002630:	6859      	ldr	r1, [r3, #4]
 8002632:	683b      	ldr	r3, [r7, #0]
 8002634:	68db      	ldr	r3, [r3, #12]
 8002636:	461a      	mov	r2, r3
 8002638:	f000 fa4e 	bl	8002ad8 <TIM_TI1_ConfigInputStage>
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	2150      	movs	r1, #80	; 0x50
 8002642:	4618      	mov	r0, r3
 8002644:	f000 faa5 	bl	8002b92 <TIM_ITRx_SetConfig>
 8002648:	e02b      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	6818      	ldr	r0, [r3, #0]
 800264e:	683b      	ldr	r3, [r7, #0]
 8002650:	6859      	ldr	r1, [r3, #4]
 8002652:	683b      	ldr	r3, [r7, #0]
 8002654:	68db      	ldr	r3, [r3, #12]
 8002656:	461a      	mov	r2, r3
 8002658:	f000 fa6c 	bl	8002b34 <TIM_TI2_ConfigInputStage>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	2160      	movs	r1, #96	; 0x60
 8002662:	4618      	mov	r0, r3
 8002664:	f000 fa95 	bl	8002b92 <TIM_ITRx_SetConfig>
 8002668:	e01b      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	6818      	ldr	r0, [r3, #0]
 800266e:	683b      	ldr	r3, [r7, #0]
 8002670:	6859      	ldr	r1, [r3, #4]
 8002672:	683b      	ldr	r3, [r7, #0]
 8002674:	68db      	ldr	r3, [r3, #12]
 8002676:	461a      	mov	r2, r3
 8002678:	f000 fa2e 	bl	8002ad8 <TIM_TI1_ConfigInputStage>
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	681b      	ldr	r3, [r3, #0]
 8002680:	2140      	movs	r1, #64	; 0x40
 8002682:	4618      	mov	r0, r3
 8002684:	f000 fa85 	bl	8002b92 <TIM_ITRx_SetConfig>
 8002688:	e00b      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	681a      	ldr	r2, [r3, #0]
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	4619      	mov	r1, r3
 8002694:	4610      	mov	r0, r2
 8002696:	f000 fa7c 	bl	8002b92 <TIM_ITRx_SetConfig>
 800269a:	e002      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 800269c:	bf00      	nop
 800269e:	e000      	b.n	80026a2 <HAL_TIM_ConfigClockSource+0x16e>
 80026a0:	bf00      	nop
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	2201      	movs	r2, #1
 80026a6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	2200      	movs	r2, #0
 80026ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026b2:	2300      	movs	r3, #0
 80026b4:	4618      	mov	r0, r3
 80026b6:	3710      	adds	r7, #16
 80026b8:	46bd      	mov	sp, r7
 80026ba:	bd80      	pop	{r7, pc}

080026bc <HAL_TIM_OC_DelayElapsedCallback>:
 80026bc:	b480      	push	{r7}
 80026be:	b083      	sub	sp, #12
 80026c0:	af00      	add	r7, sp, #0
 80026c2:	6078      	str	r0, [r7, #4]
 80026c4:	bf00      	nop
 80026c6:	370c      	adds	r7, #12
 80026c8:	46bd      	mov	sp, r7
 80026ca:	bc80      	pop	{r7}
 80026cc:	4770      	bx	lr

080026ce <HAL_TIM_IC_CaptureCallback>:
 80026ce:	b480      	push	{r7}
 80026d0:	b083      	sub	sp, #12
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
 80026d6:	bf00      	nop
 80026d8:	370c      	adds	r7, #12
 80026da:	46bd      	mov	sp, r7
 80026dc:	bc80      	pop	{r7}
 80026de:	4770      	bx	lr

080026e0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80026e0:	b480      	push	{r7}
 80026e2:	b083      	sub	sp, #12
 80026e4:	af00      	add	r7, sp, #0
 80026e6:	6078      	str	r0, [r7, #4]
 80026e8:	bf00      	nop
 80026ea:	370c      	adds	r7, #12
 80026ec:	46bd      	mov	sp, r7
 80026ee:	bc80      	pop	{r7}
 80026f0:	4770      	bx	lr

080026f2 <HAL_TIM_TriggerCallback>:
 80026f2:	b480      	push	{r7}
 80026f4:	b083      	sub	sp, #12
 80026f6:	af00      	add	r7, sp, #0
 80026f8:	6078      	str	r0, [r7, #4]
 80026fa:	bf00      	nop
 80026fc:	370c      	adds	r7, #12
 80026fe:	46bd      	mov	sp, r7
 8002700:	bc80      	pop	{r7}
 8002702:	4770      	bx	lr

08002704 <TIM_Base_SetConfig>:
 8002704:	b480      	push	{r7}
 8002706:	b085      	sub	sp, #20
 8002708:	af00      	add	r7, sp, #0
 800270a:	6078      	str	r0, [r7, #4]
 800270c:	6039      	str	r1, [r7, #0]
 800270e:	687b      	ldr	r3, [r7, #4]
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	60fb      	str	r3, [r7, #12]
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	4a29      	ldr	r2, [pc, #164]	; (80027bc <TIM_Base_SetConfig+0xb8>)
 8002718:	4293      	cmp	r3, r2
 800271a:	d00b      	beq.n	8002734 <TIM_Base_SetConfig+0x30>
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002722:	d007      	beq.n	8002734 <TIM_Base_SetConfig+0x30>
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	4a26      	ldr	r2, [pc, #152]	; (80027c0 <TIM_Base_SetConfig+0xbc>)
 8002728:	4293      	cmp	r3, r2
 800272a:	d003      	beq.n	8002734 <TIM_Base_SetConfig+0x30>
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	4a25      	ldr	r2, [pc, #148]	; (80027c4 <TIM_Base_SetConfig+0xc0>)
 8002730:	4293      	cmp	r3, r2
 8002732:	d108      	bne.n	8002746 <TIM_Base_SetConfig+0x42>
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800273a:	60fb      	str	r3, [r7, #12]
 800273c:	683b      	ldr	r3, [r7, #0]
 800273e:	685b      	ldr	r3, [r3, #4]
 8002740:	68fa      	ldr	r2, [r7, #12]
 8002742:	4313      	orrs	r3, r2
 8002744:	60fb      	str	r3, [r7, #12]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	4a1c      	ldr	r2, [pc, #112]	; (80027bc <TIM_Base_SetConfig+0xb8>)
 800274a:	4293      	cmp	r3, r2
 800274c:	d00b      	beq.n	8002766 <TIM_Base_SetConfig+0x62>
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002754:	d007      	beq.n	8002766 <TIM_Base_SetConfig+0x62>
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	4a19      	ldr	r2, [pc, #100]	; (80027c0 <TIM_Base_SetConfig+0xbc>)
 800275a:	4293      	cmp	r3, r2
 800275c:	d003      	beq.n	8002766 <TIM_Base_SetConfig+0x62>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	4a18      	ldr	r2, [pc, #96]	; (80027c4 <TIM_Base_SetConfig+0xc0>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d108      	bne.n	8002778 <TIM_Base_SetConfig+0x74>
 8002766:	68fb      	ldr	r3, [r7, #12]
 8002768:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800276c:	60fb      	str	r3, [r7, #12]
 800276e:	683b      	ldr	r3, [r7, #0]
 8002770:	68db      	ldr	r3, [r3, #12]
 8002772:	68fa      	ldr	r2, [r7, #12]
 8002774:	4313      	orrs	r3, r2
 8002776:	60fb      	str	r3, [r7, #12]
 8002778:	68fb      	ldr	r3, [r7, #12]
 800277a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800277e:	683b      	ldr	r3, [r7, #0]
 8002780:	695b      	ldr	r3, [r3, #20]
 8002782:	4313      	orrs	r3, r2
 8002784:	60fb      	str	r3, [r7, #12]
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	68fa      	ldr	r2, [r7, #12]
 800278a:	601a      	str	r2, [r3, #0]
 800278c:	683b      	ldr	r3, [r7, #0]
 800278e:	689a      	ldr	r2, [r3, #8]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	62da      	str	r2, [r3, #44]	; 0x2c
 8002794:	683b      	ldr	r3, [r7, #0]
 8002796:	681a      	ldr	r2, [r3, #0]
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	629a      	str	r2, [r3, #40]	; 0x28
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	4a07      	ldr	r2, [pc, #28]	; (80027bc <TIM_Base_SetConfig+0xb8>)
 80027a0:	4293      	cmp	r3, r2
 80027a2:	d103      	bne.n	80027ac <TIM_Base_SetConfig+0xa8>
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	691a      	ldr	r2, [r3, #16]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	631a      	str	r2, [r3, #48]	; 0x30
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	2201      	movs	r2, #1
 80027b0:	615a      	str	r2, [r3, #20]
 80027b2:	bf00      	nop
 80027b4:	3714      	adds	r7, #20
 80027b6:	46bd      	mov	sp, r7
 80027b8:	bc80      	pop	{r7}
 80027ba:	4770      	bx	lr
 80027bc:	40012c00 	.word	0x40012c00
 80027c0:	40000400 	.word	0x40000400
 80027c4:	40000800 	.word	0x40000800

080027c8 <TIM_OC1_SetConfig>:
 80027c8:	b480      	push	{r7}
 80027ca:	b087      	sub	sp, #28
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	6078      	str	r0, [r7, #4]
 80027d0:	6039      	str	r1, [r7, #0]
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	6a1b      	ldr	r3, [r3, #32]
 80027d6:	f023 0201 	bic.w	r2, r3, #1
 80027da:	687b      	ldr	r3, [r7, #4]
 80027dc:	621a      	str	r2, [r3, #32]
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	6a1b      	ldr	r3, [r3, #32]
 80027e2:	617b      	str	r3, [r7, #20]
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	685b      	ldr	r3, [r3, #4]
 80027e8:	613b      	str	r3, [r7, #16]
 80027ea:	687b      	ldr	r3, [r7, #4]
 80027ec:	699b      	ldr	r3, [r3, #24]
 80027ee:	60fb      	str	r3, [r7, #12]
 80027f0:	68fb      	ldr	r3, [r7, #12]
 80027f2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80027f6:	60fb      	str	r3, [r7, #12]
 80027f8:	68fb      	ldr	r3, [r7, #12]
 80027fa:	f023 0303 	bic.w	r3, r3, #3
 80027fe:	60fb      	str	r3, [r7, #12]
 8002800:	683b      	ldr	r3, [r7, #0]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	68fa      	ldr	r2, [r7, #12]
 8002806:	4313      	orrs	r3, r2
 8002808:	60fb      	str	r3, [r7, #12]
 800280a:	697b      	ldr	r3, [r7, #20]
 800280c:	f023 0302 	bic.w	r3, r3, #2
 8002810:	617b      	str	r3, [r7, #20]
 8002812:	683b      	ldr	r3, [r7, #0]
 8002814:	689b      	ldr	r3, [r3, #8]
 8002816:	697a      	ldr	r2, [r7, #20]
 8002818:	4313      	orrs	r3, r2
 800281a:	617b      	str	r3, [r7, #20]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	4a1c      	ldr	r2, [pc, #112]	; (8002890 <TIM_OC1_SetConfig+0xc8>)
 8002820:	4293      	cmp	r3, r2
 8002822:	d10c      	bne.n	800283e <TIM_OC1_SetConfig+0x76>
 8002824:	697b      	ldr	r3, [r7, #20]
 8002826:	f023 0308 	bic.w	r3, r3, #8
 800282a:	617b      	str	r3, [r7, #20]
 800282c:	683b      	ldr	r3, [r7, #0]
 800282e:	68db      	ldr	r3, [r3, #12]
 8002830:	697a      	ldr	r2, [r7, #20]
 8002832:	4313      	orrs	r3, r2
 8002834:	617b      	str	r3, [r7, #20]
 8002836:	697b      	ldr	r3, [r7, #20]
 8002838:	f023 0304 	bic.w	r3, r3, #4
 800283c:	617b      	str	r3, [r7, #20]
 800283e:	687b      	ldr	r3, [r7, #4]
 8002840:	4a13      	ldr	r2, [pc, #76]	; (8002890 <TIM_OC1_SetConfig+0xc8>)
 8002842:	4293      	cmp	r3, r2
 8002844:	d111      	bne.n	800286a <TIM_OC1_SetConfig+0xa2>
 8002846:	693b      	ldr	r3, [r7, #16]
 8002848:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800284c:	613b      	str	r3, [r7, #16]
 800284e:	693b      	ldr	r3, [r7, #16]
 8002850:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8002854:	613b      	str	r3, [r7, #16]
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	695b      	ldr	r3, [r3, #20]
 800285a:	693a      	ldr	r2, [r7, #16]
 800285c:	4313      	orrs	r3, r2
 800285e:	613b      	str	r3, [r7, #16]
 8002860:	683b      	ldr	r3, [r7, #0]
 8002862:	699b      	ldr	r3, [r3, #24]
 8002864:	693a      	ldr	r2, [r7, #16]
 8002866:	4313      	orrs	r3, r2
 8002868:	613b      	str	r3, [r7, #16]
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	693a      	ldr	r2, [r7, #16]
 800286e:	605a      	str	r2, [r3, #4]
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	68fa      	ldr	r2, [r7, #12]
 8002874:	619a      	str	r2, [r3, #24]
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	685a      	ldr	r2, [r3, #4]
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	635a      	str	r2, [r3, #52]	; 0x34
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	697a      	ldr	r2, [r7, #20]
 8002882:	621a      	str	r2, [r3, #32]
 8002884:	bf00      	nop
 8002886:	371c      	adds	r7, #28
 8002888:	46bd      	mov	sp, r7
 800288a:	bc80      	pop	{r7}
 800288c:	4770      	bx	lr
 800288e:	bf00      	nop
 8002890:	40012c00 	.word	0x40012c00

08002894 <TIM_OC2_SetConfig>:
 8002894:	b480      	push	{r7}
 8002896:	b087      	sub	sp, #28
 8002898:	af00      	add	r7, sp, #0
 800289a:	6078      	str	r0, [r7, #4]
 800289c:	6039      	str	r1, [r7, #0]
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	6a1b      	ldr	r3, [r3, #32]
 80028a2:	f023 0210 	bic.w	r2, r3, #16
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	621a      	str	r2, [r3, #32]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	6a1b      	ldr	r3, [r3, #32]
 80028ae:	617b      	str	r3, [r7, #20]
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	685b      	ldr	r3, [r3, #4]
 80028b4:	613b      	str	r3, [r7, #16]
 80028b6:	687b      	ldr	r3, [r7, #4]
 80028b8:	699b      	ldr	r3, [r3, #24]
 80028ba:	60fb      	str	r3, [r7, #12]
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80028c2:	60fb      	str	r3, [r7, #12]
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80028ca:	60fb      	str	r3, [r7, #12]
 80028cc:	683b      	ldr	r3, [r7, #0]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	021b      	lsls	r3, r3, #8
 80028d2:	68fa      	ldr	r2, [r7, #12]
 80028d4:	4313      	orrs	r3, r2
 80028d6:	60fb      	str	r3, [r7, #12]
 80028d8:	697b      	ldr	r3, [r7, #20]
 80028da:	f023 0320 	bic.w	r3, r3, #32
 80028de:	617b      	str	r3, [r7, #20]
 80028e0:	683b      	ldr	r3, [r7, #0]
 80028e2:	689b      	ldr	r3, [r3, #8]
 80028e4:	011b      	lsls	r3, r3, #4
 80028e6:	697a      	ldr	r2, [r7, #20]
 80028e8:	4313      	orrs	r3, r2
 80028ea:	617b      	str	r3, [r7, #20]
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	4a1d      	ldr	r2, [pc, #116]	; (8002964 <TIM_OC2_SetConfig+0xd0>)
 80028f0:	4293      	cmp	r3, r2
 80028f2:	d10d      	bne.n	8002910 <TIM_OC2_SetConfig+0x7c>
 80028f4:	697b      	ldr	r3, [r7, #20]
 80028f6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80028fa:	617b      	str	r3, [r7, #20]
 80028fc:	683b      	ldr	r3, [r7, #0]
 80028fe:	68db      	ldr	r3, [r3, #12]
 8002900:	011b      	lsls	r3, r3, #4
 8002902:	697a      	ldr	r2, [r7, #20]
 8002904:	4313      	orrs	r3, r2
 8002906:	617b      	str	r3, [r7, #20]
 8002908:	697b      	ldr	r3, [r7, #20]
 800290a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800290e:	617b      	str	r3, [r7, #20]
 8002910:	687b      	ldr	r3, [r7, #4]
 8002912:	4a14      	ldr	r2, [pc, #80]	; (8002964 <TIM_OC2_SetConfig+0xd0>)
 8002914:	4293      	cmp	r3, r2
 8002916:	d113      	bne.n	8002940 <TIM_OC2_SetConfig+0xac>
 8002918:	693b      	ldr	r3, [r7, #16]
 800291a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800291e:	613b      	str	r3, [r7, #16]
 8002920:	693b      	ldr	r3, [r7, #16]
 8002922:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8002926:	613b      	str	r3, [r7, #16]
 8002928:	683b      	ldr	r3, [r7, #0]
 800292a:	695b      	ldr	r3, [r3, #20]
 800292c:	009b      	lsls	r3, r3, #2
 800292e:	693a      	ldr	r2, [r7, #16]
 8002930:	4313      	orrs	r3, r2
 8002932:	613b      	str	r3, [r7, #16]
 8002934:	683b      	ldr	r3, [r7, #0]
 8002936:	699b      	ldr	r3, [r3, #24]
 8002938:	009b      	lsls	r3, r3, #2
 800293a:	693a      	ldr	r2, [r7, #16]
 800293c:	4313      	orrs	r3, r2
 800293e:	613b      	str	r3, [r7, #16]
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	693a      	ldr	r2, [r7, #16]
 8002944:	605a      	str	r2, [r3, #4]
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	68fa      	ldr	r2, [r7, #12]
 800294a:	619a      	str	r2, [r3, #24]
 800294c:	683b      	ldr	r3, [r7, #0]
 800294e:	685a      	ldr	r2, [r3, #4]
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	639a      	str	r2, [r3, #56]	; 0x38
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	697a      	ldr	r2, [r7, #20]
 8002958:	621a      	str	r2, [r3, #32]
 800295a:	bf00      	nop
 800295c:	371c      	adds	r7, #28
 800295e:	46bd      	mov	sp, r7
 8002960:	bc80      	pop	{r7}
 8002962:	4770      	bx	lr
 8002964:	40012c00 	.word	0x40012c00

08002968 <TIM_OC3_SetConfig>:
 8002968:	b480      	push	{r7}
 800296a:	b087      	sub	sp, #28
 800296c:	af00      	add	r7, sp, #0
 800296e:	6078      	str	r0, [r7, #4]
 8002970:	6039      	str	r1, [r7, #0]
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	6a1b      	ldr	r3, [r3, #32]
 8002976:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	621a      	str	r2, [r3, #32]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	6a1b      	ldr	r3, [r3, #32]
 8002982:	617b      	str	r3, [r7, #20]
 8002984:	687b      	ldr	r3, [r7, #4]
 8002986:	685b      	ldr	r3, [r3, #4]
 8002988:	613b      	str	r3, [r7, #16]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	69db      	ldr	r3, [r3, #28]
 800298e:	60fb      	str	r3, [r7, #12]
 8002990:	68fb      	ldr	r3, [r7, #12]
 8002992:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002996:	60fb      	str	r3, [r7, #12]
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	f023 0303 	bic.w	r3, r3, #3
 800299e:	60fb      	str	r3, [r7, #12]
 80029a0:	683b      	ldr	r3, [r7, #0]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	68fa      	ldr	r2, [r7, #12]
 80029a6:	4313      	orrs	r3, r2
 80029a8:	60fb      	str	r3, [r7, #12]
 80029aa:	697b      	ldr	r3, [r7, #20]
 80029ac:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80029b0:	617b      	str	r3, [r7, #20]
 80029b2:	683b      	ldr	r3, [r7, #0]
 80029b4:	689b      	ldr	r3, [r3, #8]
 80029b6:	021b      	lsls	r3, r3, #8
 80029b8:	697a      	ldr	r2, [r7, #20]
 80029ba:	4313      	orrs	r3, r2
 80029bc:	617b      	str	r3, [r7, #20]
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	4a1d      	ldr	r2, [pc, #116]	; (8002a38 <TIM_OC3_SetConfig+0xd0>)
 80029c2:	4293      	cmp	r3, r2
 80029c4:	d10d      	bne.n	80029e2 <TIM_OC3_SetConfig+0x7a>
 80029c6:	697b      	ldr	r3, [r7, #20]
 80029c8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80029cc:	617b      	str	r3, [r7, #20]
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	68db      	ldr	r3, [r3, #12]
 80029d2:	021b      	lsls	r3, r3, #8
 80029d4:	697a      	ldr	r2, [r7, #20]
 80029d6:	4313      	orrs	r3, r2
 80029d8:	617b      	str	r3, [r7, #20]
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80029e0:	617b      	str	r3, [r7, #20]
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	4a14      	ldr	r2, [pc, #80]	; (8002a38 <TIM_OC3_SetConfig+0xd0>)
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d113      	bne.n	8002a12 <TIM_OC3_SetConfig+0xaa>
 80029ea:	693b      	ldr	r3, [r7, #16]
 80029ec:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80029f0:	613b      	str	r3, [r7, #16]
 80029f2:	693b      	ldr	r3, [r7, #16]
 80029f4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80029f8:	613b      	str	r3, [r7, #16]
 80029fa:	683b      	ldr	r3, [r7, #0]
 80029fc:	695b      	ldr	r3, [r3, #20]
 80029fe:	011b      	lsls	r3, r3, #4
 8002a00:	693a      	ldr	r2, [r7, #16]
 8002a02:	4313      	orrs	r3, r2
 8002a04:	613b      	str	r3, [r7, #16]
 8002a06:	683b      	ldr	r3, [r7, #0]
 8002a08:	699b      	ldr	r3, [r3, #24]
 8002a0a:	011b      	lsls	r3, r3, #4
 8002a0c:	693a      	ldr	r2, [r7, #16]
 8002a0e:	4313      	orrs	r3, r2
 8002a10:	613b      	str	r3, [r7, #16]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	693a      	ldr	r2, [r7, #16]
 8002a16:	605a      	str	r2, [r3, #4]
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	68fa      	ldr	r2, [r7, #12]
 8002a1c:	61da      	str	r2, [r3, #28]
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	685a      	ldr	r2, [r3, #4]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	63da      	str	r2, [r3, #60]	; 0x3c
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	697a      	ldr	r2, [r7, #20]
 8002a2a:	621a      	str	r2, [r3, #32]
 8002a2c:	bf00      	nop
 8002a2e:	371c      	adds	r7, #28
 8002a30:	46bd      	mov	sp, r7
 8002a32:	bc80      	pop	{r7}
 8002a34:	4770      	bx	lr
 8002a36:	bf00      	nop
 8002a38:	40012c00 	.word	0x40012c00

08002a3c <TIM_OC4_SetConfig>:
 8002a3c:	b480      	push	{r7}
 8002a3e:	b087      	sub	sp, #28
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	6078      	str	r0, [r7, #4]
 8002a44:	6039      	str	r1, [r7, #0]
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	6a1b      	ldr	r3, [r3, #32]
 8002a4a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	621a      	str	r2, [r3, #32]
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	6a1b      	ldr	r3, [r3, #32]
 8002a56:	613b      	str	r3, [r7, #16]
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	685b      	ldr	r3, [r3, #4]
 8002a5c:	617b      	str	r3, [r7, #20]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	69db      	ldr	r3, [r3, #28]
 8002a62:	60fb      	str	r3, [r7, #12]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002a6a:	60fb      	str	r3, [r7, #12]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002a72:	60fb      	str	r3, [r7, #12]
 8002a74:	683b      	ldr	r3, [r7, #0]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	021b      	lsls	r3, r3, #8
 8002a7a:	68fa      	ldr	r2, [r7, #12]
 8002a7c:	4313      	orrs	r3, r2
 8002a7e:	60fb      	str	r3, [r7, #12]
 8002a80:	693b      	ldr	r3, [r7, #16]
 8002a82:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002a86:	613b      	str	r3, [r7, #16]
 8002a88:	683b      	ldr	r3, [r7, #0]
 8002a8a:	689b      	ldr	r3, [r3, #8]
 8002a8c:	031b      	lsls	r3, r3, #12
 8002a8e:	693a      	ldr	r2, [r7, #16]
 8002a90:	4313      	orrs	r3, r2
 8002a92:	613b      	str	r3, [r7, #16]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	4a0f      	ldr	r2, [pc, #60]	; (8002ad4 <TIM_OC4_SetConfig+0x98>)
 8002a98:	4293      	cmp	r3, r2
 8002a9a:	d109      	bne.n	8002ab0 <TIM_OC4_SetConfig+0x74>
 8002a9c:	697b      	ldr	r3, [r7, #20]
 8002a9e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002aa2:	617b      	str	r3, [r7, #20]
 8002aa4:	683b      	ldr	r3, [r7, #0]
 8002aa6:	695b      	ldr	r3, [r3, #20]
 8002aa8:	019b      	lsls	r3, r3, #6
 8002aaa:	697a      	ldr	r2, [r7, #20]
 8002aac:	4313      	orrs	r3, r2
 8002aae:	617b      	str	r3, [r7, #20]
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	697a      	ldr	r2, [r7, #20]
 8002ab4:	605a      	str	r2, [r3, #4]
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	68fa      	ldr	r2, [r7, #12]
 8002aba:	61da      	str	r2, [r3, #28]
 8002abc:	683b      	ldr	r3, [r7, #0]
 8002abe:	685a      	ldr	r2, [r3, #4]
 8002ac0:	687b      	ldr	r3, [r7, #4]
 8002ac2:	641a      	str	r2, [r3, #64]	; 0x40
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	693a      	ldr	r2, [r7, #16]
 8002ac8:	621a      	str	r2, [r3, #32]
 8002aca:	bf00      	nop
 8002acc:	371c      	adds	r7, #28
 8002ace:	46bd      	mov	sp, r7
 8002ad0:	bc80      	pop	{r7}
 8002ad2:	4770      	bx	lr
 8002ad4:	40012c00 	.word	0x40012c00

08002ad8 <TIM_TI1_ConfigInputStage>:
 8002ad8:	b480      	push	{r7}
 8002ada:	b087      	sub	sp, #28
 8002adc:	af00      	add	r7, sp, #0
 8002ade:	60f8      	str	r0, [r7, #12]
 8002ae0:	60b9      	str	r1, [r7, #8]
 8002ae2:	607a      	str	r2, [r7, #4]
 8002ae4:	68fb      	ldr	r3, [r7, #12]
 8002ae6:	6a1b      	ldr	r3, [r3, #32]
 8002ae8:	617b      	str	r3, [r7, #20]
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	6a1b      	ldr	r3, [r3, #32]
 8002aee:	f023 0201 	bic.w	r2, r3, #1
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	621a      	str	r2, [r3, #32]
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	699b      	ldr	r3, [r3, #24]
 8002afa:	613b      	str	r3, [r7, #16]
 8002afc:	693b      	ldr	r3, [r7, #16]
 8002afe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002b02:	613b      	str	r3, [r7, #16]
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	011b      	lsls	r3, r3, #4
 8002b08:	693a      	ldr	r2, [r7, #16]
 8002b0a:	4313      	orrs	r3, r2
 8002b0c:	613b      	str	r3, [r7, #16]
 8002b0e:	697b      	ldr	r3, [r7, #20]
 8002b10:	f023 030a 	bic.w	r3, r3, #10
 8002b14:	617b      	str	r3, [r7, #20]
 8002b16:	697a      	ldr	r2, [r7, #20]
 8002b18:	68bb      	ldr	r3, [r7, #8]
 8002b1a:	4313      	orrs	r3, r2
 8002b1c:	617b      	str	r3, [r7, #20]
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	693a      	ldr	r2, [r7, #16]
 8002b22:	619a      	str	r2, [r3, #24]
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	697a      	ldr	r2, [r7, #20]
 8002b28:	621a      	str	r2, [r3, #32]
 8002b2a:	bf00      	nop
 8002b2c:	371c      	adds	r7, #28
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	bc80      	pop	{r7}
 8002b32:	4770      	bx	lr

08002b34 <TIM_TI2_ConfigInputStage>:
 8002b34:	b480      	push	{r7}
 8002b36:	b087      	sub	sp, #28
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	607a      	str	r2, [r7, #4]
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	6a1b      	ldr	r3, [r3, #32]
 8002b44:	f023 0210 	bic.w	r2, r3, #16
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	621a      	str	r2, [r3, #32]
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	699b      	ldr	r3, [r3, #24]
 8002b50:	617b      	str	r3, [r7, #20]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	6a1b      	ldr	r3, [r3, #32]
 8002b56:	613b      	str	r3, [r7, #16]
 8002b58:	697b      	ldr	r3, [r7, #20]
 8002b5a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8002b5e:	617b      	str	r3, [r7, #20]
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	031b      	lsls	r3, r3, #12
 8002b64:	697a      	ldr	r2, [r7, #20]
 8002b66:	4313      	orrs	r3, r2
 8002b68:	617b      	str	r3, [r7, #20]
 8002b6a:	693b      	ldr	r3, [r7, #16]
 8002b6c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8002b70:	613b      	str	r3, [r7, #16]
 8002b72:	68bb      	ldr	r3, [r7, #8]
 8002b74:	011b      	lsls	r3, r3, #4
 8002b76:	693a      	ldr	r2, [r7, #16]
 8002b78:	4313      	orrs	r3, r2
 8002b7a:	613b      	str	r3, [r7, #16]
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	697a      	ldr	r2, [r7, #20]
 8002b80:	619a      	str	r2, [r3, #24]
 8002b82:	68fb      	ldr	r3, [r7, #12]
 8002b84:	693a      	ldr	r2, [r7, #16]
 8002b86:	621a      	str	r2, [r3, #32]
 8002b88:	bf00      	nop
 8002b8a:	371c      	adds	r7, #28
 8002b8c:	46bd      	mov	sp, r7
 8002b8e:	bc80      	pop	{r7}
 8002b90:	4770      	bx	lr

08002b92 <TIM_ITRx_SetConfig>:
 8002b92:	b480      	push	{r7}
 8002b94:	b085      	sub	sp, #20
 8002b96:	af00      	add	r7, sp, #0
 8002b98:	6078      	str	r0, [r7, #4]
 8002b9a:	6039      	str	r1, [r7, #0]
 8002b9c:	687b      	ldr	r3, [r7, #4]
 8002b9e:	689b      	ldr	r3, [r3, #8]
 8002ba0:	60fb      	str	r3, [r7, #12]
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ba8:	60fb      	str	r3, [r7, #12]
 8002baa:	683a      	ldr	r2, [r7, #0]
 8002bac:	68fb      	ldr	r3, [r7, #12]
 8002bae:	4313      	orrs	r3, r2
 8002bb0:	f043 0307 	orr.w	r3, r3, #7
 8002bb4:	60fb      	str	r3, [r7, #12]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	68fa      	ldr	r2, [r7, #12]
 8002bba:	609a      	str	r2, [r3, #8]
 8002bbc:	bf00      	nop
 8002bbe:	3714      	adds	r7, #20
 8002bc0:	46bd      	mov	sp, r7
 8002bc2:	bc80      	pop	{r7}
 8002bc4:	4770      	bx	lr

08002bc6 <TIM_ETR_SetConfig>:
 8002bc6:	b480      	push	{r7}
 8002bc8:	b087      	sub	sp, #28
 8002bca:	af00      	add	r7, sp, #0
 8002bcc:	60f8      	str	r0, [r7, #12]
 8002bce:	60b9      	str	r1, [r7, #8]
 8002bd0:	607a      	str	r2, [r7, #4]
 8002bd2:	603b      	str	r3, [r7, #0]
 8002bd4:	68fb      	ldr	r3, [r7, #12]
 8002bd6:	689b      	ldr	r3, [r3, #8]
 8002bd8:	617b      	str	r3, [r7, #20]
 8002bda:	697b      	ldr	r3, [r7, #20]
 8002bdc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002be0:	617b      	str	r3, [r7, #20]
 8002be2:	683b      	ldr	r3, [r7, #0]
 8002be4:	021a      	lsls	r2, r3, #8
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	431a      	orrs	r2, r3
 8002bea:	68bb      	ldr	r3, [r7, #8]
 8002bec:	4313      	orrs	r3, r2
 8002bee:	697a      	ldr	r2, [r7, #20]
 8002bf0:	4313      	orrs	r3, r2
 8002bf2:	617b      	str	r3, [r7, #20]
 8002bf4:	68fb      	ldr	r3, [r7, #12]
 8002bf6:	697a      	ldr	r2, [r7, #20]
 8002bf8:	609a      	str	r2, [r3, #8]
 8002bfa:	bf00      	nop
 8002bfc:	371c      	adds	r7, #28
 8002bfe:	46bd      	mov	sp, r7
 8002c00:	bc80      	pop	{r7}
 8002c02:	4770      	bx	lr

08002c04 <HAL_TIMEx_MasterConfigSynchronization>:
 8002c04:	b480      	push	{r7}
 8002c06:	b085      	sub	sp, #20
 8002c08:	af00      	add	r7, sp, #0
 8002c0a:	6078      	str	r0, [r7, #4]
 8002c0c:	6039      	str	r1, [r7, #0]
 8002c0e:	687b      	ldr	r3, [r7, #4]
 8002c10:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c14:	2b01      	cmp	r3, #1
 8002c16:	d101      	bne.n	8002c1c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002c18:	2302      	movs	r3, #2
 8002c1a:	e046      	b.n	8002caa <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8002c1c:	687b      	ldr	r3, [r7, #4]
 8002c1e:	2201      	movs	r2, #1
 8002c20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c24:	687b      	ldr	r3, [r7, #4]
 8002c26:	2202      	movs	r2, #2
 8002c28:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	685b      	ldr	r3, [r3, #4]
 8002c32:	60fb      	str	r3, [r7, #12]
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	689b      	ldr	r3, [r3, #8]
 8002c3a:	60bb      	str	r3, [r7, #8]
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002c42:	60fb      	str	r3, [r7, #12]
 8002c44:	683b      	ldr	r3, [r7, #0]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	68fa      	ldr	r2, [r7, #12]
 8002c4a:	4313      	orrs	r3, r2
 8002c4c:	60fb      	str	r3, [r7, #12]
 8002c4e:	687b      	ldr	r3, [r7, #4]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	68fa      	ldr	r2, [r7, #12]
 8002c54:	605a      	str	r2, [r3, #4]
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	4a16      	ldr	r2, [pc, #88]	; (8002cb4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8002c5c:	4293      	cmp	r3, r2
 8002c5e:	d00e      	beq.n	8002c7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002c68:	d009      	beq.n	8002c7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	4a12      	ldr	r2, [pc, #72]	; (8002cb8 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8002c70:	4293      	cmp	r3, r2
 8002c72:	d004      	beq.n	8002c7e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	4a10      	ldr	r2, [pc, #64]	; (8002cbc <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8002c7a:	4293      	cmp	r3, r2
 8002c7c:	d10c      	bne.n	8002c98 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8002c7e:	68bb      	ldr	r3, [r7, #8]
 8002c80:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002c84:	60bb      	str	r3, [r7, #8]
 8002c86:	683b      	ldr	r3, [r7, #0]
 8002c88:	685b      	ldr	r3, [r3, #4]
 8002c8a:	68ba      	ldr	r2, [r7, #8]
 8002c8c:	4313      	orrs	r3, r2
 8002c8e:	60bb      	str	r3, [r7, #8]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	68ba      	ldr	r2, [r7, #8]
 8002c96:	609a      	str	r2, [r3, #8]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	2200      	movs	r2, #0
 8002ca4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ca8:	2300      	movs	r3, #0
 8002caa:	4618      	mov	r0, r3
 8002cac:	3714      	adds	r7, #20
 8002cae:	46bd      	mov	sp, r7
 8002cb0:	bc80      	pop	{r7}
 8002cb2:	4770      	bx	lr
 8002cb4:	40012c00 	.word	0x40012c00
 8002cb8:	40000400 	.word	0x40000400
 8002cbc:	40000800 	.word	0x40000800

08002cc0 <HAL_TIMEx_CommutCallback>:
 8002cc0:	b480      	push	{r7}
 8002cc2:	b083      	sub	sp, #12
 8002cc4:	af00      	add	r7, sp, #0
 8002cc6:	6078      	str	r0, [r7, #4]
 8002cc8:	bf00      	nop
 8002cca:	370c      	adds	r7, #12
 8002ccc:	46bd      	mov	sp, r7
 8002cce:	bc80      	pop	{r7}
 8002cd0:	4770      	bx	lr

08002cd2 <HAL_TIMEx_BreakCallback>:
 8002cd2:	b480      	push	{r7}
 8002cd4:	b083      	sub	sp, #12
 8002cd6:	af00      	add	r7, sp, #0
 8002cd8:	6078      	str	r0, [r7, #4]
 8002cda:	bf00      	nop
 8002cdc:	370c      	adds	r7, #12
 8002cde:	46bd      	mov	sp, r7
 8002ce0:	bc80      	pop	{r7}
 8002ce2:	4770      	bx	lr

08002ce4 <HAL_UART_Init>:
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	b082      	sub	sp, #8
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
 8002cec:	687b      	ldr	r3, [r7, #4]
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d101      	bne.n	8002cf6 <HAL_UART_Init+0x12>
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	e03f      	b.n	8002d76 <HAL_UART_Init+0x92>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002cfc:	b2db      	uxtb	r3, r3
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d106      	bne.n	8002d10 <HAL_UART_Init+0x2c>
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	2200      	movs	r2, #0
 8002d06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d0a:	6878      	ldr	r0, [r7, #4]
 8002d0c:	f7fd ffb0 	bl	8000c70 <HAL_UART_MspInit>
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	2224      	movs	r2, #36	; 0x24
 8002d14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	681b      	ldr	r3, [r3, #0]
 8002d1c:	68da      	ldr	r2, [r3, #12]
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002d26:	60da      	str	r2, [r3, #12]
 8002d28:	6878      	ldr	r0, [r7, #4]
 8002d2a:	f000 fb49 	bl	80033c0 <UART_SetConfig>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	691a      	ldr	r2, [r3, #16]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8002d3c:	611a      	str	r2, [r3, #16]
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	695a      	ldr	r2, [r3, #20]
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8002d4c:	615a      	str	r2, [r3, #20]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	68da      	ldr	r2, [r3, #12]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8002d5c:	60da      	str	r2, [r3, #12]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	2200      	movs	r2, #0
 8002d62:	641a      	str	r2, [r3, #64]	; 0x40
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	2220      	movs	r2, #32
 8002d68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	2220      	movs	r2, #32
 8002d70:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d74:	2300      	movs	r3, #0
 8002d76:	4618      	mov	r0, r3
 8002d78:	3708      	adds	r7, #8
 8002d7a:	46bd      	mov	sp, r7
 8002d7c:	bd80      	pop	{r7, pc}
	...

08002d80 <HAL_UART_IRQHandler>:
 8002d80:	b580      	push	{r7, lr}
 8002d82:	b08a      	sub	sp, #40	; 0x28
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	681b      	ldr	r3, [r3, #0]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	627b      	str	r3, [r7, #36]	; 0x24
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	68db      	ldr	r3, [r3, #12]
 8002d96:	623b      	str	r3, [r7, #32]
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	695b      	ldr	r3, [r3, #20]
 8002d9e:	61fb      	str	r3, [r7, #28]
 8002da0:	2300      	movs	r3, #0
 8002da2:	61bb      	str	r3, [r7, #24]
 8002da4:	2300      	movs	r3, #0
 8002da6:	617b      	str	r3, [r7, #20]
 8002da8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002daa:	f003 030f 	and.w	r3, r3, #15
 8002dae:	61bb      	str	r3, [r7, #24]
 8002db0:	69bb      	ldr	r3, [r7, #24]
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d10d      	bne.n	8002dd2 <HAL_UART_IRQHandler+0x52>
 8002db6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002db8:	f003 0320 	and.w	r3, r3, #32
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d008      	beq.n	8002dd2 <HAL_UART_IRQHandler+0x52>
 8002dc0:	6a3b      	ldr	r3, [r7, #32]
 8002dc2:	f003 0320 	and.w	r3, r3, #32
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d003      	beq.n	8002dd2 <HAL_UART_IRQHandler+0x52>
 8002dca:	6878      	ldr	r0, [r7, #4]
 8002dcc:	f000 fa4f 	bl	800326e <UART_Receive_IT>
 8002dd0:	e17b      	b.n	80030ca <HAL_UART_IRQHandler+0x34a>
 8002dd2:	69bb      	ldr	r3, [r7, #24]
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	f000 80b1 	beq.w	8002f3c <HAL_UART_IRQHandler+0x1bc>
 8002dda:	69fb      	ldr	r3, [r7, #28]
 8002ddc:	f003 0301 	and.w	r3, r3, #1
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d105      	bne.n	8002df0 <HAL_UART_IRQHandler+0x70>
 8002de4:	6a3b      	ldr	r3, [r7, #32]
 8002de6:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	f000 80a6 	beq.w	8002f3c <HAL_UART_IRQHandler+0x1bc>
 8002df0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002df2:	f003 0301 	and.w	r3, r3, #1
 8002df6:	2b00      	cmp	r3, #0
 8002df8:	d00a      	beq.n	8002e10 <HAL_UART_IRQHandler+0x90>
 8002dfa:	6a3b      	ldr	r3, [r7, #32]
 8002dfc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d005      	beq.n	8002e10 <HAL_UART_IRQHandler+0x90>
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e08:	f043 0201 	orr.w	r2, r3, #1
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	641a      	str	r2, [r3, #64]	; 0x40
 8002e10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e12:	f003 0304 	and.w	r3, r3, #4
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d00a      	beq.n	8002e30 <HAL_UART_IRQHandler+0xb0>
 8002e1a:	69fb      	ldr	r3, [r7, #28]
 8002e1c:	f003 0301 	and.w	r3, r3, #1
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d005      	beq.n	8002e30 <HAL_UART_IRQHandler+0xb0>
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e28:	f043 0202 	orr.w	r2, r3, #2
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	641a      	str	r2, [r3, #64]	; 0x40
 8002e30:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e32:	f003 0302 	and.w	r3, r3, #2
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d00a      	beq.n	8002e50 <HAL_UART_IRQHandler+0xd0>
 8002e3a:	69fb      	ldr	r3, [r7, #28]
 8002e3c:	f003 0301 	and.w	r3, r3, #1
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d005      	beq.n	8002e50 <HAL_UART_IRQHandler+0xd0>
 8002e44:	687b      	ldr	r3, [r7, #4]
 8002e46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e48:	f043 0204 	orr.w	r2, r3, #4
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	641a      	str	r2, [r3, #64]	; 0x40
 8002e50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e52:	f003 0308 	and.w	r3, r3, #8
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d00f      	beq.n	8002e7a <HAL_UART_IRQHandler+0xfa>
 8002e5a:	6a3b      	ldr	r3, [r7, #32]
 8002e5c:	f003 0320 	and.w	r3, r3, #32
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	d104      	bne.n	8002e6e <HAL_UART_IRQHandler+0xee>
 8002e64:	69fb      	ldr	r3, [r7, #28]
 8002e66:	f003 0301 	and.w	r3, r3, #1
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d005      	beq.n	8002e7a <HAL_UART_IRQHandler+0xfa>
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e72:	f043 0208 	orr.w	r2, r3, #8
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	641a      	str	r2, [r3, #64]	; 0x40
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	f000 811e 	beq.w	80030c0 <HAL_UART_IRQHandler+0x340>
 8002e84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e86:	f003 0320 	and.w	r3, r3, #32
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d007      	beq.n	8002e9e <HAL_UART_IRQHandler+0x11e>
 8002e8e:	6a3b      	ldr	r3, [r7, #32]
 8002e90:	f003 0320 	and.w	r3, r3, #32
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d002      	beq.n	8002e9e <HAL_UART_IRQHandler+0x11e>
 8002e98:	6878      	ldr	r0, [r7, #4]
 8002e9a:	f000 f9e8 	bl	800326e <UART_Receive_IT>
 8002e9e:	687b      	ldr	r3, [r7, #4]
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	695b      	ldr	r3, [r3, #20]
 8002ea4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	bf14      	ite	ne
 8002eac:	2301      	movne	r3, #1
 8002eae:	2300      	moveq	r3, #0
 8002eb0:	b2db      	uxtb	r3, r3
 8002eb2:	617b      	str	r3, [r7, #20]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eb8:	f003 0308 	and.w	r3, r3, #8
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d102      	bne.n	8002ec6 <HAL_UART_IRQHandler+0x146>
 8002ec0:	697b      	ldr	r3, [r7, #20]
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d031      	beq.n	8002f2a <HAL_UART_IRQHandler+0x1aa>
 8002ec6:	6878      	ldr	r0, [r7, #4]
 8002ec8:	f000 f92a 	bl	8003120 <UART_EndRxTransfer>
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	695b      	ldr	r3, [r3, #20]
 8002ed2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d023      	beq.n	8002f22 <HAL_UART_IRQHandler+0x1a2>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	695a      	ldr	r2, [r3, #20]
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002ee8:	615a      	str	r2, [r3, #20]
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d013      	beq.n	8002f1a <HAL_UART_IRQHandler+0x19a>
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ef6:	4a76      	ldr	r2, [pc, #472]	; (80030d0 <HAL_UART_IRQHandler+0x350>)
 8002ef8:	635a      	str	r2, [r3, #52]	; 0x34
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002efe:	4618      	mov	r0, r3
 8002f00:	f7fe f9fc 	bl	80012fc <HAL_DMA_Abort_IT>
 8002f04:	4603      	mov	r3, r0
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	d016      	beq.n	8002f38 <HAL_UART_IRQHandler+0x1b8>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f10:	687a      	ldr	r2, [r7, #4]
 8002f12:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8002f14:	4610      	mov	r0, r2
 8002f16:	4798      	blx	r3
 8002f18:	e00e      	b.n	8002f38 <HAL_UART_IRQHandler+0x1b8>
 8002f1a:	6878      	ldr	r0, [r7, #4]
 8002f1c:	f000 f8ec 	bl	80030f8 <HAL_UART_ErrorCallback>
 8002f20:	e00a      	b.n	8002f38 <HAL_UART_IRQHandler+0x1b8>
 8002f22:	6878      	ldr	r0, [r7, #4]
 8002f24:	f000 f8e8 	bl	80030f8 <HAL_UART_ErrorCallback>
 8002f28:	e006      	b.n	8002f38 <HAL_UART_IRQHandler+0x1b8>
 8002f2a:	6878      	ldr	r0, [r7, #4]
 8002f2c:	f000 f8e4 	bl	80030f8 <HAL_UART_ErrorCallback>
 8002f30:	687b      	ldr	r3, [r7, #4]
 8002f32:	2200      	movs	r2, #0
 8002f34:	641a      	str	r2, [r3, #64]	; 0x40
 8002f36:	e0c3      	b.n	80030c0 <HAL_UART_IRQHandler+0x340>
 8002f38:	bf00      	nop
 8002f3a:	e0c1      	b.n	80030c0 <HAL_UART_IRQHandler+0x340>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f40:	2b01      	cmp	r3, #1
 8002f42:	f040 80a1 	bne.w	8003088 <HAL_UART_IRQHandler+0x308>
 8002f46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f48:	f003 0310 	and.w	r3, r3, #16
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	f000 809b 	beq.w	8003088 <HAL_UART_IRQHandler+0x308>
 8002f52:	6a3b      	ldr	r3, [r7, #32]
 8002f54:	f003 0310 	and.w	r3, r3, #16
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	f000 8095 	beq.w	8003088 <HAL_UART_IRQHandler+0x308>
 8002f5e:	2300      	movs	r3, #0
 8002f60:	60fb      	str	r3, [r7, #12]
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	60fb      	str	r3, [r7, #12]
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	685b      	ldr	r3, [r3, #4]
 8002f70:	60fb      	str	r3, [r7, #12]
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	695b      	ldr	r3, [r3, #20]
 8002f7a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d04e      	beq.n	8003020 <HAL_UART_IRQHandler+0x2a0>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	685b      	ldr	r3, [r3, #4]
 8002f8a:	823b      	strh	r3, [r7, #16]
 8002f8c:	8a3b      	ldrh	r3, [r7, #16]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	f000 8098 	beq.w	80030c4 <HAL_UART_IRQHandler+0x344>
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8002f98:	8a3a      	ldrh	r2, [r7, #16]
 8002f9a:	429a      	cmp	r2, r3
 8002f9c:	f080 8092 	bcs.w	80030c4 <HAL_UART_IRQHandler+0x344>
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	8a3a      	ldrh	r2, [r7, #16]
 8002fa4:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002faa:	699b      	ldr	r3, [r3, #24]
 8002fac:	2b20      	cmp	r3, #32
 8002fae:	d02b      	beq.n	8003008 <HAL_UART_IRQHandler+0x288>
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	68da      	ldr	r2, [r3, #12]
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002fbe:	60da      	str	r2, [r3, #12]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	681b      	ldr	r3, [r3, #0]
 8002fc4:	695a      	ldr	r2, [r3, #20]
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	f022 0201 	bic.w	r2, r2, #1
 8002fce:	615a      	str	r2, [r3, #20]
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	681b      	ldr	r3, [r3, #0]
 8002fd4:	695a      	ldr	r2, [r3, #20]
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002fde:	615a      	str	r2, [r3, #20]
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	2220      	movs	r2, #32
 8002fe4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	2200      	movs	r2, #0
 8002fec:	631a      	str	r2, [r3, #48]	; 0x30
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	68da      	ldr	r2, [r3, #12]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	681b      	ldr	r3, [r3, #0]
 8002ff8:	f022 0210 	bic.w	r2, r2, #16
 8002ffc:	60da      	str	r2, [r3, #12]
 8002ffe:	687b      	ldr	r3, [r7, #4]
 8003000:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003002:	4618      	mov	r0, r3
 8003004:	f7fe f93f 	bl	8001286 <HAL_DMA_Abort>
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003010:	b29b      	uxth	r3, r3
 8003012:	1ad3      	subs	r3, r2, r3
 8003014:	b29b      	uxth	r3, r3
 8003016:	4619      	mov	r1, r3
 8003018:	6878      	ldr	r0, [r7, #4]
 800301a:	f000 f876 	bl	800310a <HAL_UARTEx_RxEventCallback>
 800301e:	e051      	b.n	80030c4 <HAL_UART_IRQHandler+0x344>
 8003020:	687b      	ldr	r3, [r7, #4]
 8003022:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003028:	b29b      	uxth	r3, r3
 800302a:	1ad3      	subs	r3, r2, r3
 800302c:	827b      	strh	r3, [r7, #18]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003032:	b29b      	uxth	r3, r3
 8003034:	2b00      	cmp	r3, #0
 8003036:	d047      	beq.n	80030c8 <HAL_UART_IRQHandler+0x348>
 8003038:	8a7b      	ldrh	r3, [r7, #18]
 800303a:	2b00      	cmp	r3, #0
 800303c:	d044      	beq.n	80030c8 <HAL_UART_IRQHandler+0x348>
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	68da      	ldr	r2, [r3, #12]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800304c:	60da      	str	r2, [r3, #12]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	695a      	ldr	r2, [r3, #20]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	f022 0201 	bic.w	r2, r2, #1
 800305c:	615a      	str	r2, [r3, #20]
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	2220      	movs	r2, #32
 8003062:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	2200      	movs	r2, #0
 800306a:	631a      	str	r2, [r3, #48]	; 0x30
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	68da      	ldr	r2, [r3, #12]
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	f022 0210 	bic.w	r2, r2, #16
 800307a:	60da      	str	r2, [r3, #12]
 800307c:	8a7b      	ldrh	r3, [r7, #18]
 800307e:	4619      	mov	r1, r3
 8003080:	6878      	ldr	r0, [r7, #4]
 8003082:	f000 f842 	bl	800310a <HAL_UARTEx_RxEventCallback>
 8003086:	e01f      	b.n	80030c8 <HAL_UART_IRQHandler+0x348>
 8003088:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800308a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800308e:	2b00      	cmp	r3, #0
 8003090:	d008      	beq.n	80030a4 <HAL_UART_IRQHandler+0x324>
 8003092:	6a3b      	ldr	r3, [r7, #32]
 8003094:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003098:	2b00      	cmp	r3, #0
 800309a:	d003      	beq.n	80030a4 <HAL_UART_IRQHandler+0x324>
 800309c:	6878      	ldr	r0, [r7, #4]
 800309e:	f000 f87f 	bl	80031a0 <UART_Transmit_IT>
 80030a2:	e012      	b.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d00d      	beq.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030ae:	6a3b      	ldr	r3, [r7, #32]
 80030b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d008      	beq.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030b8:	6878      	ldr	r0, [r7, #4]
 80030ba:	f000 f8c0 	bl	800323e <UART_EndTransmit_IT>
 80030be:	e004      	b.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030c0:	bf00      	nop
 80030c2:	e002      	b.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030c4:	bf00      	nop
 80030c6:	e000      	b.n	80030ca <HAL_UART_IRQHandler+0x34a>
 80030c8:	bf00      	nop
 80030ca:	3728      	adds	r7, #40	; 0x28
 80030cc:	46bd      	mov	sp, r7
 80030ce:	bd80      	pop	{r7, pc}
 80030d0:	08003179 	.word	0x08003179

080030d4 <HAL_UART_TxCpltCallback>:
 80030d4:	b480      	push	{r7}
 80030d6:	b083      	sub	sp, #12
 80030d8:	af00      	add	r7, sp, #0
 80030da:	6078      	str	r0, [r7, #4]
 80030dc:	bf00      	nop
 80030de:	370c      	adds	r7, #12
 80030e0:	46bd      	mov	sp, r7
 80030e2:	bc80      	pop	{r7}
 80030e4:	4770      	bx	lr

080030e6 <HAL_UART_RxCpltCallback>:
 80030e6:	b480      	push	{r7}
 80030e8:	b083      	sub	sp, #12
 80030ea:	af00      	add	r7, sp, #0
 80030ec:	6078      	str	r0, [r7, #4]
 80030ee:	bf00      	nop
 80030f0:	370c      	adds	r7, #12
 80030f2:	46bd      	mov	sp, r7
 80030f4:	bc80      	pop	{r7}
 80030f6:	4770      	bx	lr

080030f8 <HAL_UART_ErrorCallback>:
 80030f8:	b480      	push	{r7}
 80030fa:	b083      	sub	sp, #12
 80030fc:	af00      	add	r7, sp, #0
 80030fe:	6078      	str	r0, [r7, #4]
 8003100:	bf00      	nop
 8003102:	370c      	adds	r7, #12
 8003104:	46bd      	mov	sp, r7
 8003106:	bc80      	pop	{r7}
 8003108:	4770      	bx	lr

0800310a <HAL_UARTEx_RxEventCallback>:
 800310a:	b480      	push	{r7}
 800310c:	b083      	sub	sp, #12
 800310e:	af00      	add	r7, sp, #0
 8003110:	6078      	str	r0, [r7, #4]
 8003112:	460b      	mov	r3, r1
 8003114:	807b      	strh	r3, [r7, #2]
 8003116:	bf00      	nop
 8003118:	370c      	adds	r7, #12
 800311a:	46bd      	mov	sp, r7
 800311c:	bc80      	pop	{r7}
 800311e:	4770      	bx	lr

08003120 <UART_EndRxTransfer>:
 8003120:	b480      	push	{r7}
 8003122:	b083      	sub	sp, #12
 8003124:	af00      	add	r7, sp, #0
 8003126:	6078      	str	r0, [r7, #4]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	68da      	ldr	r2, [r3, #12]
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003136:	60da      	str	r2, [r3, #12]
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	695a      	ldr	r2, [r3, #20]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	f022 0201 	bic.w	r2, r2, #1
 8003146:	615a      	str	r2, [r3, #20]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800314c:	2b01      	cmp	r3, #1
 800314e:	d107      	bne.n	8003160 <UART_EndRxTransfer+0x40>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	68da      	ldr	r2, [r3, #12]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f022 0210 	bic.w	r2, r2, #16
 800315e:	60da      	str	r2, [r3, #12]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	2220      	movs	r2, #32
 8003164:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	2200      	movs	r2, #0
 800316c:	631a      	str	r2, [r3, #48]	; 0x30
 800316e:	bf00      	nop
 8003170:	370c      	adds	r7, #12
 8003172:	46bd      	mov	sp, r7
 8003174:	bc80      	pop	{r7}
 8003176:	4770      	bx	lr

08003178 <UART_DMAAbortOnError>:
 8003178:	b580      	push	{r7, lr}
 800317a:	b084      	sub	sp, #16
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003184:	60fb      	str	r3, [r7, #12]
 8003186:	68fb      	ldr	r3, [r7, #12]
 8003188:	2200      	movs	r2, #0
 800318a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	2200      	movs	r2, #0
 8003190:	84da      	strh	r2, [r3, #38]	; 0x26
 8003192:	68f8      	ldr	r0, [r7, #12]
 8003194:	f7ff ffb0 	bl	80030f8 <HAL_UART_ErrorCallback>
 8003198:	bf00      	nop
 800319a:	3710      	adds	r7, #16
 800319c:	46bd      	mov	sp, r7
 800319e:	bd80      	pop	{r7, pc}

080031a0 <UART_Transmit_IT>:
 80031a0:	b480      	push	{r7}
 80031a2:	b085      	sub	sp, #20
 80031a4:	af00      	add	r7, sp, #0
 80031a6:	6078      	str	r0, [r7, #4]
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80031ae:	b2db      	uxtb	r3, r3
 80031b0:	2b21      	cmp	r3, #33	; 0x21
 80031b2:	d13e      	bne.n	8003232 <UART_Transmit_IT+0x92>
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	689b      	ldr	r3, [r3, #8]
 80031b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80031bc:	d114      	bne.n	80031e8 <UART_Transmit_IT+0x48>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	691b      	ldr	r3, [r3, #16]
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d110      	bne.n	80031e8 <UART_Transmit_IT+0x48>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	6a1b      	ldr	r3, [r3, #32]
 80031ca:	60fb      	str	r3, [r7, #12]
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	881b      	ldrh	r3, [r3, #0]
 80031d0:	461a      	mov	r2, r3
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80031da:	605a      	str	r2, [r3, #4]
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	6a1b      	ldr	r3, [r3, #32]
 80031e0:	1c9a      	adds	r2, r3, #2
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	621a      	str	r2, [r3, #32]
 80031e6:	e008      	b.n	80031fa <UART_Transmit_IT+0x5a>
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	6a1b      	ldr	r3, [r3, #32]
 80031ec:	1c59      	adds	r1, r3, #1
 80031ee:	687a      	ldr	r2, [r7, #4]
 80031f0:	6211      	str	r1, [r2, #32]
 80031f2:	781a      	ldrb	r2, [r3, #0]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	605a      	str	r2, [r3, #4]
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80031fe:	b29b      	uxth	r3, r3
 8003200:	3b01      	subs	r3, #1
 8003202:	b29b      	uxth	r3, r3
 8003204:	687a      	ldr	r2, [r7, #4]
 8003206:	4619      	mov	r1, r3
 8003208:	84d1      	strh	r1, [r2, #38]	; 0x26
 800320a:	2b00      	cmp	r3, #0
 800320c:	d10f      	bne.n	800322e <UART_Transmit_IT+0x8e>
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	68da      	ldr	r2, [r3, #12]
 8003214:	687b      	ldr	r3, [r7, #4]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800321c:	60da      	str	r2, [r3, #12]
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	681b      	ldr	r3, [r3, #0]
 8003222:	68da      	ldr	r2, [r3, #12]
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800322c:	60da      	str	r2, [r3, #12]
 800322e:	2300      	movs	r3, #0
 8003230:	e000      	b.n	8003234 <UART_Transmit_IT+0x94>
 8003232:	2302      	movs	r3, #2
 8003234:	4618      	mov	r0, r3
 8003236:	3714      	adds	r7, #20
 8003238:	46bd      	mov	sp, r7
 800323a:	bc80      	pop	{r7}
 800323c:	4770      	bx	lr

0800323e <UART_EndTransmit_IT>:
 800323e:	b580      	push	{r7, lr}
 8003240:	b082      	sub	sp, #8
 8003242:	af00      	add	r7, sp, #0
 8003244:	6078      	str	r0, [r7, #4]
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	68da      	ldr	r2, [r3, #12]
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003254:	60da      	str	r2, [r3, #12]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	2220      	movs	r2, #32
 800325a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800325e:	6878      	ldr	r0, [r7, #4]
 8003260:	f7ff ff38 	bl	80030d4 <HAL_UART_TxCpltCallback>
 8003264:	2300      	movs	r3, #0
 8003266:	4618      	mov	r0, r3
 8003268:	3708      	adds	r7, #8
 800326a:	46bd      	mov	sp, r7
 800326c:	bd80      	pop	{r7, pc}

0800326e <UART_Receive_IT>:
 800326e:	b580      	push	{r7, lr}
 8003270:	b086      	sub	sp, #24
 8003272:	af00      	add	r7, sp, #0
 8003274:	6078      	str	r0, [r7, #4]
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800327c:	b2db      	uxtb	r3, r3
 800327e:	2b22      	cmp	r3, #34	; 0x22
 8003280:	f040 8099 	bne.w	80033b6 <UART_Receive_IT+0x148>
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	689b      	ldr	r3, [r3, #8]
 8003288:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800328c:	d117      	bne.n	80032be <UART_Receive_IT+0x50>
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	691b      	ldr	r3, [r3, #16]
 8003292:	2b00      	cmp	r3, #0
 8003294:	d113      	bne.n	80032be <UART_Receive_IT+0x50>
 8003296:	2300      	movs	r3, #0
 8003298:	617b      	str	r3, [r7, #20]
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800329e:	613b      	str	r3, [r7, #16]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	685b      	ldr	r3, [r3, #4]
 80032a6:	b29b      	uxth	r3, r3
 80032a8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80032ac:	b29a      	uxth	r2, r3
 80032ae:	693b      	ldr	r3, [r7, #16]
 80032b0:	801a      	strh	r2, [r3, #0]
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80032b6:	1c9a      	adds	r2, r3, #2
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	629a      	str	r2, [r3, #40]	; 0x28
 80032bc:	e026      	b.n	800330c <UART_Receive_IT+0x9e>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80032c2:	617b      	str	r3, [r7, #20]
 80032c4:	2300      	movs	r3, #0
 80032c6:	613b      	str	r3, [r7, #16]
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	689b      	ldr	r3, [r3, #8]
 80032cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80032d0:	d007      	beq.n	80032e2 <UART_Receive_IT+0x74>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	689b      	ldr	r3, [r3, #8]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d10a      	bne.n	80032f0 <UART_Receive_IT+0x82>
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	691b      	ldr	r3, [r3, #16]
 80032de:	2b00      	cmp	r3, #0
 80032e0:	d106      	bne.n	80032f0 <UART_Receive_IT+0x82>
 80032e2:	687b      	ldr	r3, [r7, #4]
 80032e4:	681b      	ldr	r3, [r3, #0]
 80032e6:	685b      	ldr	r3, [r3, #4]
 80032e8:	b2da      	uxtb	r2, r3
 80032ea:	697b      	ldr	r3, [r7, #20]
 80032ec:	701a      	strb	r2, [r3, #0]
 80032ee:	e008      	b.n	8003302 <UART_Receive_IT+0x94>
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	685b      	ldr	r3, [r3, #4]
 80032f6:	b2db      	uxtb	r3, r3
 80032f8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80032fc:	b2da      	uxtb	r2, r3
 80032fe:	697b      	ldr	r3, [r7, #20]
 8003300:	701a      	strb	r2, [r3, #0]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003306:	1c5a      	adds	r2, r3, #1
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	629a      	str	r2, [r3, #40]	; 0x28
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003310:	b29b      	uxth	r3, r3
 8003312:	3b01      	subs	r3, #1
 8003314:	b29b      	uxth	r3, r3
 8003316:	687a      	ldr	r2, [r7, #4]
 8003318:	4619      	mov	r1, r3
 800331a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800331c:	2b00      	cmp	r3, #0
 800331e:	d148      	bne.n	80033b2 <UART_Receive_IT+0x144>
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	68da      	ldr	r2, [r3, #12]
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f022 0220 	bic.w	r2, r2, #32
 800332e:	60da      	str	r2, [r3, #12]
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	68da      	ldr	r2, [r3, #12]
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800333e:	60da      	str	r2, [r3, #12]
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	695a      	ldr	r2, [r3, #20]
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	f022 0201 	bic.w	r2, r2, #1
 800334e:	615a      	str	r2, [r3, #20]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	2220      	movs	r2, #32
 8003354:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800335c:	2b01      	cmp	r3, #1
 800335e:	d123      	bne.n	80033a8 <UART_Receive_IT+0x13a>
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	2200      	movs	r2, #0
 8003364:	631a      	str	r2, [r3, #48]	; 0x30
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	68da      	ldr	r2, [r3, #12]
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	681b      	ldr	r3, [r3, #0]
 8003370:	f022 0210 	bic.w	r2, r2, #16
 8003374:	60da      	str	r2, [r3, #12]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	f003 0310 	and.w	r3, r3, #16
 8003380:	2b10      	cmp	r3, #16
 8003382:	d10a      	bne.n	800339a <UART_Receive_IT+0x12c>
 8003384:	2300      	movs	r3, #0
 8003386:	60fb      	str	r3, [r7, #12]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	60fb      	str	r3, [r7, #12]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	681b      	ldr	r3, [r3, #0]
 8003394:	685b      	ldr	r3, [r3, #4]
 8003396:	60fb      	str	r3, [r7, #12]
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800339e:	4619      	mov	r1, r3
 80033a0:	6878      	ldr	r0, [r7, #4]
 80033a2:	f7ff feb2 	bl	800310a <HAL_UARTEx_RxEventCallback>
 80033a6:	e002      	b.n	80033ae <UART_Receive_IT+0x140>
 80033a8:	6878      	ldr	r0, [r7, #4]
 80033aa:	f7ff fe9c 	bl	80030e6 <HAL_UART_RxCpltCallback>
 80033ae:	2300      	movs	r3, #0
 80033b0:	e002      	b.n	80033b8 <UART_Receive_IT+0x14a>
 80033b2:	2300      	movs	r3, #0
 80033b4:	e000      	b.n	80033b8 <UART_Receive_IT+0x14a>
 80033b6:	2302      	movs	r3, #2
 80033b8:	4618      	mov	r0, r3
 80033ba:	3718      	adds	r7, #24
 80033bc:	46bd      	mov	sp, r7
 80033be:	bd80      	pop	{r7, pc}

080033c0 <UART_SetConfig>:
 80033c0:	b580      	push	{r7, lr}
 80033c2:	b084      	sub	sp, #16
 80033c4:	af00      	add	r7, sp, #0
 80033c6:	6078      	str	r0, [r7, #4]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	691b      	ldr	r3, [r3, #16]
 80033ce:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	68da      	ldr	r2, [r3, #12]
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	430a      	orrs	r2, r1
 80033dc:	611a      	str	r2, [r3, #16]
 80033de:	687b      	ldr	r3, [r7, #4]
 80033e0:	689a      	ldr	r2, [r3, #8]
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	691b      	ldr	r3, [r3, #16]
 80033e6:	431a      	orrs	r2, r3
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	695b      	ldr	r3, [r3, #20]
 80033ec:	4313      	orrs	r3, r2
 80033ee:	60bb      	str	r3, [r7, #8]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	68db      	ldr	r3, [r3, #12]
 80033f6:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80033fa:	f023 030c 	bic.w	r3, r3, #12
 80033fe:	687a      	ldr	r2, [r7, #4]
 8003400:	6812      	ldr	r2, [r2, #0]
 8003402:	68b9      	ldr	r1, [r7, #8]
 8003404:	430b      	orrs	r3, r1
 8003406:	60d3      	str	r3, [r2, #12]
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	695b      	ldr	r3, [r3, #20]
 800340e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	699a      	ldr	r2, [r3, #24]
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	681b      	ldr	r3, [r3, #0]
 800341a:	430a      	orrs	r2, r1
 800341c:	615a      	str	r2, [r3, #20]
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	4a2c      	ldr	r2, [pc, #176]	; (80034d4 <UART_SetConfig+0x114>)
 8003424:	4293      	cmp	r3, r2
 8003426:	d103      	bne.n	8003430 <UART_SetConfig+0x70>
 8003428:	f7fe fd92 	bl	8001f50 <HAL_RCC_GetPCLK2Freq>
 800342c:	60f8      	str	r0, [r7, #12]
 800342e:	e002      	b.n	8003436 <UART_SetConfig+0x76>
 8003430:	f7fe fd7a 	bl	8001f28 <HAL_RCC_GetPCLK1Freq>
 8003434:	60f8      	str	r0, [r7, #12]
 8003436:	68fa      	ldr	r2, [r7, #12]
 8003438:	4613      	mov	r3, r2
 800343a:	009b      	lsls	r3, r3, #2
 800343c:	4413      	add	r3, r2
 800343e:	009a      	lsls	r2, r3, #2
 8003440:	441a      	add	r2, r3
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	685b      	ldr	r3, [r3, #4]
 8003446:	009b      	lsls	r3, r3, #2
 8003448:	fbb2 f3f3 	udiv	r3, r2, r3
 800344c:	4a22      	ldr	r2, [pc, #136]	; (80034d8 <UART_SetConfig+0x118>)
 800344e:	fba2 2303 	umull	r2, r3, r2, r3
 8003452:	095b      	lsrs	r3, r3, #5
 8003454:	0119      	lsls	r1, r3, #4
 8003456:	68fa      	ldr	r2, [r7, #12]
 8003458:	4613      	mov	r3, r2
 800345a:	009b      	lsls	r3, r3, #2
 800345c:	4413      	add	r3, r2
 800345e:	009a      	lsls	r2, r3, #2
 8003460:	441a      	add	r2, r3
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	685b      	ldr	r3, [r3, #4]
 8003466:	009b      	lsls	r3, r3, #2
 8003468:	fbb2 f2f3 	udiv	r2, r2, r3
 800346c:	4b1a      	ldr	r3, [pc, #104]	; (80034d8 <UART_SetConfig+0x118>)
 800346e:	fba3 0302 	umull	r0, r3, r3, r2
 8003472:	095b      	lsrs	r3, r3, #5
 8003474:	2064      	movs	r0, #100	; 0x64
 8003476:	fb00 f303 	mul.w	r3, r0, r3
 800347a:	1ad3      	subs	r3, r2, r3
 800347c:	011b      	lsls	r3, r3, #4
 800347e:	3332      	adds	r3, #50	; 0x32
 8003480:	4a15      	ldr	r2, [pc, #84]	; (80034d8 <UART_SetConfig+0x118>)
 8003482:	fba2 2303 	umull	r2, r3, r2, r3
 8003486:	095b      	lsrs	r3, r3, #5
 8003488:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800348c:	4419      	add	r1, r3
 800348e:	68fa      	ldr	r2, [r7, #12]
 8003490:	4613      	mov	r3, r2
 8003492:	009b      	lsls	r3, r3, #2
 8003494:	4413      	add	r3, r2
 8003496:	009a      	lsls	r2, r3, #2
 8003498:	441a      	add	r2, r3
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	685b      	ldr	r3, [r3, #4]
 800349e:	009b      	lsls	r3, r3, #2
 80034a0:	fbb2 f2f3 	udiv	r2, r2, r3
 80034a4:	4b0c      	ldr	r3, [pc, #48]	; (80034d8 <UART_SetConfig+0x118>)
 80034a6:	fba3 0302 	umull	r0, r3, r3, r2
 80034aa:	095b      	lsrs	r3, r3, #5
 80034ac:	2064      	movs	r0, #100	; 0x64
 80034ae:	fb00 f303 	mul.w	r3, r0, r3
 80034b2:	1ad3      	subs	r3, r2, r3
 80034b4:	011b      	lsls	r3, r3, #4
 80034b6:	3332      	adds	r3, #50	; 0x32
 80034b8:	4a07      	ldr	r2, [pc, #28]	; (80034d8 <UART_SetConfig+0x118>)
 80034ba:	fba2 2303 	umull	r2, r3, r2, r3
 80034be:	095b      	lsrs	r3, r3, #5
 80034c0:	f003 020f 	and.w	r2, r3, #15
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	440a      	add	r2, r1
 80034ca:	609a      	str	r2, [r3, #8]
 80034cc:	bf00      	nop
 80034ce:	3710      	adds	r7, #16
 80034d0:	46bd      	mov	sp, r7
 80034d2:	bd80      	pop	{r7, pc}
 80034d4:	40013800 	.word	0x40013800
 80034d8:	51eb851f 	.word	0x51eb851f

080034dc <__libc_init_array>:
 80034dc:	b570      	push	{r4, r5, r6, lr}
 80034de:	2600      	movs	r6, #0
 80034e0:	4d0c      	ldr	r5, [pc, #48]	; (8003514 <__libc_init_array+0x38>)
 80034e2:	4c0d      	ldr	r4, [pc, #52]	; (8003518 <__libc_init_array+0x3c>)
 80034e4:	1b64      	subs	r4, r4, r5
 80034e6:	10a4      	asrs	r4, r4, #2
 80034e8:	42a6      	cmp	r6, r4
 80034ea:	d109      	bne.n	8003500 <__libc_init_array+0x24>
 80034ec:	f000 f822 	bl	8003534 <_init>
 80034f0:	2600      	movs	r6, #0
 80034f2:	4d0a      	ldr	r5, [pc, #40]	; (800351c <__libc_init_array+0x40>)
 80034f4:	4c0a      	ldr	r4, [pc, #40]	; (8003520 <__libc_init_array+0x44>)
 80034f6:	1b64      	subs	r4, r4, r5
 80034f8:	10a4      	asrs	r4, r4, #2
 80034fa:	42a6      	cmp	r6, r4
 80034fc:	d105      	bne.n	800350a <__libc_init_array+0x2e>
 80034fe:	bd70      	pop	{r4, r5, r6, pc}
 8003500:	f855 3b04 	ldr.w	r3, [r5], #4
 8003504:	4798      	blx	r3
 8003506:	3601      	adds	r6, #1
 8003508:	e7ee      	b.n	80034e8 <__libc_init_array+0xc>
 800350a:	f855 3b04 	ldr.w	r3, [r5], #4
 800350e:	4798      	blx	r3
 8003510:	3601      	adds	r6, #1
 8003512:	e7f2      	b.n	80034fa <__libc_init_array+0x1e>
 8003514:	08003574 	.word	0x08003574
 8003518:	08003574 	.word	0x08003574
 800351c:	08003574 	.word	0x08003574
 8003520:	08003578 	.word	0x08003578

08003524 <memset>:
 8003524:	4603      	mov	r3, r0
 8003526:	4402      	add	r2, r0
 8003528:	4293      	cmp	r3, r2
 800352a:	d100      	bne.n	800352e <memset+0xa>
 800352c:	4770      	bx	lr
 800352e:	f803 1b01 	strb.w	r1, [r3], #1
 8003532:	e7f9      	b.n	8003528 <memset+0x4>

08003534 <_init>:
 8003534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003536:	bf00      	nop
 8003538:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800353a:	bc08      	pop	{r3}
 800353c:	469e      	mov	lr, r3
 800353e:	4770      	bx	lr

08003540 <_fini>:
 8003540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003542:	bf00      	nop
 8003544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003546:	bc08      	pop	{r3}
 8003548:	469e      	mov	lr, r3
 800354a:	4770      	bx	lr
