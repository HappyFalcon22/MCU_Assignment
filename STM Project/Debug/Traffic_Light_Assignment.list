
Traffic_Light_Assignment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004750  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000006c  0800485c  0800485c  0001485c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080048c8  080048c8  00020094  2**0
                  CONTENTS
  4 .ARM          00000000  080048c8  080048c8  00020094  2**0
                  CONTENTS
  5 .preinit_array 00000000  080048c8  080048c8  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080048c8  080048c8  000148c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080048cc  080048cc  000148cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  080048d0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  20000094  08004964  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000208  08004964  00020208  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000cdb3  00000000  00000000  000200bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002415  00000000  00000000  0002ce70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000d98  00000000  00000000  0002f288  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000c78  00000000  00000000  00030020  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017fe3  00000000  00000000  00030c98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fb0f  00000000  00000000  00048c7b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ad9a  00000000  00000000  0005878a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000e3524  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003a2c  00000000  00000000  000e3574  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000094 	.word	0x20000094
 8000128:	00000000 	.word	0x00000000
 800012c:	08004844 	.word	0x08004844

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000098 	.word	0x20000098
 8000148:	08004844 	.word	0x08004844

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <button_reading>:
//we define counter for the button is pressed more than 1 second.
static uint16_t counterForButtonPress1s[N0_OF_BUTTONS];

//read 3 button and modify flag buffer when button is pressed
//this function is called in timer interupt
void button_reading(){
 800015c:	b580      	push	{r7, lr}
 800015e:	b082      	sub	sp, #8
 8000160:	af00      	add	r7, sp, #0
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 8000162:	2300      	movs	r3, #0
 8000164:	607b      	str	r3, [r7, #4]
 8000166:	e0a7      	b.n	80002b8 <button_reading+0x15c>
		debounceButtonBuffer2[i] = debounceButtonBuffer1[i];
 8000168:	4a58      	ldr	r2, [pc, #352]	; (80002cc <button_reading+0x170>)
 800016a:	687b      	ldr	r3, [r7, #4]
 800016c:	4413      	add	r3, r2
 800016e:	7819      	ldrb	r1, [r3, #0]
 8000170:	4a57      	ldr	r2, [pc, #348]	; (80002d0 <button_reading+0x174>)
 8000172:	687b      	ldr	r3, [r7, #4]
 8000174:	4413      	add	r3, r2
 8000176:	460a      	mov	r2, r1
 8000178:	701a      	strb	r2, [r3, #0]
		debounceButtonBuffer1[i] = debounceButtonBuffer0[i];
 800017a:	4a56      	ldr	r2, [pc, #344]	; (80002d4 <button_reading+0x178>)
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	4413      	add	r3, r2
 8000180:	7819      	ldrb	r1, [r3, #0]
 8000182:	4a52      	ldr	r2, [pc, #328]	; (80002cc <button_reading+0x170>)
 8000184:	687b      	ldr	r3, [r7, #4]
 8000186:	4413      	add	r3, r2
 8000188:	460a      	mov	r2, r1
 800018a:	701a      	strb	r2, [r3, #0]
		//read raw button to buffer0
		if(i == 0){
 800018c:	687b      	ldr	r3, [r7, #4]
 800018e:	2b00      	cmp	r3, #0
 8000190:	d10b      	bne.n	80001aa <button_reading+0x4e>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON1_GPIO_Port, BUTTON1_Pin);
 8000192:	2102      	movs	r1, #2
 8000194:	4850      	ldr	r0, [pc, #320]	; (80002d8 <button_reading+0x17c>)
 8000196:	f001 fe11 	bl	8001dbc <HAL_GPIO_ReadPin>
 800019a:	4603      	mov	r3, r0
 800019c:	4619      	mov	r1, r3
 800019e:	4a4d      	ldr	r2, [pc, #308]	; (80002d4 <button_reading+0x178>)
 80001a0:	687b      	ldr	r3, [r7, #4]
 80001a2:	4413      	add	r3, r2
 80001a4:	460a      	mov	r2, r1
 80001a6:	701a      	strb	r2, [r3, #0]
 80001a8:	e02b      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 1){
 80001aa:	687b      	ldr	r3, [r7, #4]
 80001ac:	2b01      	cmp	r3, #1
 80001ae:	d10b      	bne.n	80001c8 <button_reading+0x6c>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin);
 80001b0:	2110      	movs	r1, #16
 80001b2:	4849      	ldr	r0, [pc, #292]	; (80002d8 <button_reading+0x17c>)
 80001b4:	f001 fe02 	bl	8001dbc <HAL_GPIO_ReadPin>
 80001b8:	4603      	mov	r3, r0
 80001ba:	4619      	mov	r1, r3
 80001bc:	4a45      	ldr	r2, [pc, #276]	; (80002d4 <button_reading+0x178>)
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	4413      	add	r3, r2
 80001c2:	460a      	mov	r2, r1
 80001c4:	701a      	strb	r2, [r3, #0]
 80001c6:	e01c      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 2){
 80001c8:	687b      	ldr	r3, [r7, #4]
 80001ca:	2b02      	cmp	r3, #2
 80001cc:	d10b      	bne.n	80001e6 <button_reading+0x8a>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(BUTTON3_GPIO_Port, BUTTON3_Pin);
 80001ce:	2101      	movs	r1, #1
 80001d0:	4842      	ldr	r0, [pc, #264]	; (80002dc <button_reading+0x180>)
 80001d2:	f001 fdf3 	bl	8001dbc <HAL_GPIO_ReadPin>
 80001d6:	4603      	mov	r3, r0
 80001d8:	4619      	mov	r1, r3
 80001da:	4a3e      	ldr	r2, [pc, #248]	; (80002d4 <button_reading+0x178>)
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	4413      	add	r3, r2
 80001e0:	460a      	mov	r2, r1
 80001e2:	701a      	strb	r2, [r3, #0]
 80001e4:	e00d      	b.n	8000202 <button_reading+0xa6>
		}
		else if(i == 3){
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	2b03      	cmp	r3, #3
 80001ea:	d10a      	bne.n	8000202 <button_reading+0xa6>
			debounceButtonBuffer0[i] = HAL_GPIO_ReadPin(PEDE_BUTTON_GPIO_Port, PEDE_BUTTON_Pin);
 80001ec:	2101      	movs	r1, #1
 80001ee:	483a      	ldr	r0, [pc, #232]	; (80002d8 <button_reading+0x17c>)
 80001f0:	f001 fde4 	bl	8001dbc <HAL_GPIO_ReadPin>
 80001f4:	4603      	mov	r3, r0
 80001f6:	4619      	mov	r1, r3
 80001f8:	4a36      	ldr	r2, [pc, #216]	; (80002d4 <button_reading+0x178>)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4413      	add	r3, r2
 80001fe:	460a      	mov	r2, r1
 8000200:	701a      	strb	r2, [r3, #0]
		}
		//if input is stable: 3 recently input is equal
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 8000202:	4a34      	ldr	r2, [pc, #208]	; (80002d4 <button_reading+0x178>)
 8000204:	687b      	ldr	r3, [r7, #4]
 8000206:	4413      	add	r3, r2
 8000208:	781a      	ldrb	r2, [r3, #0]
 800020a:	4930      	ldr	r1, [pc, #192]	; (80002cc <button_reading+0x170>)
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	440b      	add	r3, r1
 8000210:	781b      	ldrb	r3, [r3, #0]
 8000212:	429a      	cmp	r2, r3
 8000214:	d14d      	bne.n	80002b2 <button_reading+0x156>
				debounceButtonBuffer1[i] == debounceButtonBuffer2[i]){
 8000216:	4a2d      	ldr	r2, [pc, #180]	; (80002cc <button_reading+0x170>)
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4413      	add	r3, r2
 800021c:	781a      	ldrb	r2, [r3, #0]
 800021e:	492c      	ldr	r1, [pc, #176]	; (80002d0 <button_reading+0x174>)
 8000220:	687b      	ldr	r3, [r7, #4]
 8000222:	440b      	add	r3, r1
 8000224:	781b      	ldrb	r3, [r3, #0]
		if(debounceButtonBuffer0[i] == debounceButtonBuffer1[i] &&
 8000226:	429a      	cmp	r2, r3
 8000228:	d143      	bne.n	80002b2 <button_reading+0x156>
			//if input stable at present different from previous
			if(buttonBuffer[i] != debounceButtonBuffer2[i]){
 800022a:	4a2d      	ldr	r2, [pc, #180]	; (80002e0 <button_reading+0x184>)
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4413      	add	r3, r2
 8000230:	781a      	ldrb	r2, [r3, #0]
 8000232:	4927      	ldr	r1, [pc, #156]	; (80002d0 <button_reading+0x174>)
 8000234:	687b      	ldr	r3, [r7, #4]
 8000236:	440b      	add	r3, r1
 8000238:	781b      	ldrb	r3, [r3, #0]
 800023a:	429a      	cmp	r2, r3
 800023c:	d019      	beq.n	8000272 <button_reading+0x116>
				//update input to buffer
				buttonBuffer[i] = debounceButtonBuffer2[i];
 800023e:	4a24      	ldr	r2, [pc, #144]	; (80002d0 <button_reading+0x174>)
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4413      	add	r3, r2
 8000244:	7819      	ldrb	r1, [r3, #0]
 8000246:	4a26      	ldr	r2, [pc, #152]	; (80002e0 <button_reading+0x184>)
 8000248:	687b      	ldr	r3, [r7, #4]
 800024a:	4413      	add	r3, r2
 800024c:	460a      	mov	r2, r1
 800024e:	701a      	strb	r2, [r3, #0]
				//if input is pressed
				if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000250:	4a23      	ldr	r2, [pc, #140]	; (80002e0 <button_reading+0x184>)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4413      	add	r3, r2
 8000256:	781b      	ldrb	r3, [r3, #0]
 8000258:	2b00      	cmp	r3, #0
 800025a:	d12a      	bne.n	80002b2 <button_reading+0x156>
					//turn flag on
					flagForButtonPress[i] = 1;
 800025c:	4a21      	ldr	r2, [pc, #132]	; (80002e4 <button_reading+0x188>)
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4413      	add	r3, r2
 8000262:	2201      	movs	r2, #1
 8000264:	701a      	strb	r2, [r3, #0]
					//set counter
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 8000266:	4a20      	ldr	r2, [pc, #128]	; (80002e8 <button_reading+0x18c>)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	2164      	movs	r1, #100	; 0x64
 800026c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8000270:	e01f      	b.n	80002b2 <button_reading+0x156>
				}
			}
			//if input is stable and no change (present = previous)
			else{
				//decrease counter
				counterForButtonPress1s[i]--;
 8000272:	4a1d      	ldr	r2, [pc, #116]	; (80002e8 <button_reading+0x18c>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800027a:	3b01      	subs	r3, #1
 800027c:	b299      	uxth	r1, r3
 800027e:	4a1a      	ldr	r2, [pc, #104]	; (80002e8 <button_reading+0x18c>)
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				//when counter is 0, reset counter
				//and if button is press -> turn flag1s on
				if(counterForButtonPress1s[i] == 0){
 8000286:	4a18      	ldr	r2, [pc, #96]	; (80002e8 <button_reading+0x18c>)
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800028e:	2b00      	cmp	r3, #0
 8000290:	d10f      	bne.n	80002b2 <button_reading+0x156>
					if(buttonBuffer[i] == BUTTON_IS_PRESSED){
 8000292:	4a13      	ldr	r2, [pc, #76]	; (80002e0 <button_reading+0x184>)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4413      	add	r3, r2
 8000298:	781b      	ldrb	r3, [r3, #0]
 800029a:	2b00      	cmp	r3, #0
 800029c:	d104      	bne.n	80002a8 <button_reading+0x14c>
						flagForButtonPress1s[i] = 1;
 800029e:	4a13      	ldr	r2, [pc, #76]	; (80002ec <button_reading+0x190>)
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	4413      	add	r3, r2
 80002a4:	2201      	movs	r2, #1
 80002a6:	701a      	strb	r2, [r3, #0]
					}
					counterForButtonPress1s[i] = DURATION_FOR_PRESSED;
 80002a8:	4a0f      	ldr	r2, [pc, #60]	; (80002e8 <button_reading+0x18c>)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	2164      	movs	r1, #100	; 0x64
 80002ae:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i < N0_OF_BUTTONS; i ++){
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	3301      	adds	r3, #1
 80002b6:	607b      	str	r3, [r7, #4]
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	2b03      	cmp	r3, #3
 80002bc:	f77f af54 	ble.w	8000168 <button_reading+0xc>
				}
			}
		}
	}
}
 80002c0:	bf00      	nop
 80002c2:	bf00      	nop
 80002c4:	3708      	adds	r7, #8
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bd80      	pop	{r7, pc}
 80002ca:	bf00      	nop
 80002cc:	200000b8 	.word	0x200000b8
 80002d0:	200000bc 	.word	0x200000bc
 80002d4:	200000b4 	.word	0x200000b4
 80002d8:	40010800 	.word	0x40010800
 80002dc:	40010c00 	.word	0x40010c00
 80002e0:	200000b0 	.word	0x200000b0
 80002e4:	200000c4 	.word	0x200000c4
 80002e8:	200000c8 	.word	0x200000c8
 80002ec:	200000c0 	.word	0x200000c0

080002f0 <is_button1_pressed>:

//this function check if Mode_select_button is pressed or not
//and reset its flag
int is_button1_pressed()
{
 80002f0:	b480      	push	{r7}
 80002f2:	af00      	add	r7, sp, #0
	if(flagForButtonPress[0] == 1){
 80002f4:	4b06      	ldr	r3, [pc, #24]	; (8000310 <is_button1_pressed+0x20>)
 80002f6:	781b      	ldrb	r3, [r3, #0]
 80002f8:	2b01      	cmp	r3, #1
 80002fa:	d104      	bne.n	8000306 <is_button1_pressed+0x16>
		flagForButtonPress[0] = 0;
 80002fc:	4b04      	ldr	r3, [pc, #16]	; (8000310 <is_button1_pressed+0x20>)
 80002fe:	2200      	movs	r2, #0
 8000300:	701a      	strb	r2, [r3, #0]
		return 1;
 8000302:	2301      	movs	r3, #1
 8000304:	e000      	b.n	8000308 <is_button1_pressed+0x18>
	}
	return 0;
 8000306:	2300      	movs	r3, #0
}
 8000308:	4618      	mov	r0, r3
 800030a:	46bd      	mov	sp, r7
 800030c:	bc80      	pop	{r7}
 800030e:	4770      	bx	lr
 8000310:	200000c4 	.word	0x200000c4

08000314 <is_button2_pressed>:

//this fuction check if time_adjust_button is pressed or not
//and reset its flag
int is_button2_pressed()
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
	if(flagForButtonPress[1] == 1){
 8000318:	4b06      	ldr	r3, [pc, #24]	; (8000334 <is_button2_pressed+0x20>)
 800031a:	785b      	ldrb	r3, [r3, #1]
 800031c:	2b01      	cmp	r3, #1
 800031e:	d104      	bne.n	800032a <is_button2_pressed+0x16>
		flagForButtonPress[1] = 0;
 8000320:	4b04      	ldr	r3, [pc, #16]	; (8000334 <is_button2_pressed+0x20>)
 8000322:	2200      	movs	r2, #0
 8000324:	705a      	strb	r2, [r3, #1]
		return 1;
 8000326:	2301      	movs	r3, #1
 8000328:	e000      	b.n	800032c <is_button2_pressed+0x18>
	}
	return 0;
 800032a:	2300      	movs	r3, #0
}
 800032c:	4618      	mov	r0, r3
 800032e:	46bd      	mov	sp, r7
 8000330:	bc80      	pop	{r7}
 8000332:	4770      	bx	lr
 8000334:	200000c4 	.word	0x200000c4

08000338 <is_button3_pressed>:

//this function check if set_button is pressed or not
//and reset its flag
int is_button3_pressed()
{
 8000338:	b480      	push	{r7}
 800033a:	af00      	add	r7, sp, #0
	if(flagForButtonPress[2] == 1){
 800033c:	4b06      	ldr	r3, [pc, #24]	; (8000358 <is_button3_pressed+0x20>)
 800033e:	789b      	ldrb	r3, [r3, #2]
 8000340:	2b01      	cmp	r3, #1
 8000342:	d104      	bne.n	800034e <is_button3_pressed+0x16>
		flagForButtonPress[2] = 0;
 8000344:	4b04      	ldr	r3, [pc, #16]	; (8000358 <is_button3_pressed+0x20>)
 8000346:	2200      	movs	r2, #0
 8000348:	709a      	strb	r2, [r3, #2]
		return 1;
 800034a:	2301      	movs	r3, #1
 800034c:	e000      	b.n	8000350 <is_button3_pressed+0x18>
	}
	return 0;
 800034e:	2300      	movs	r3, #0
}
 8000350:	4618      	mov	r0, r3
 8000352:	46bd      	mov	sp, r7
 8000354:	bc80      	pop	{r7}
 8000356:	4770      	bx	lr
 8000358:	200000c4 	.word	0x200000c4

0800035c <is_pede_button_pressed>:

//the function check if pedestrian button is pressed or not
//and reset its flag
int is_pede_button_pressed()
{
 800035c:	b480      	push	{r7}
 800035e:	af00      	add	r7, sp, #0
	if(flagForButtonPress[3] == 1){
 8000360:	4b06      	ldr	r3, [pc, #24]	; (800037c <is_pede_button_pressed+0x20>)
 8000362:	78db      	ldrb	r3, [r3, #3]
 8000364:	2b01      	cmp	r3, #1
 8000366:	d104      	bne.n	8000372 <is_pede_button_pressed+0x16>
		flagForButtonPress[3] = 0;
 8000368:	4b04      	ldr	r3, [pc, #16]	; (800037c <is_pede_button_pressed+0x20>)
 800036a:	2200      	movs	r2, #0
 800036c:	70da      	strb	r2, [r3, #3]
		return 1;
 800036e:	2301      	movs	r3, #1
 8000370:	e000      	b.n	8000374 <is_pede_button_pressed+0x18>
	}
	return 0;
 8000372:	2300      	movs	r3, #0
}
 8000374:	4618      	mov	r0, r3
 8000376:	46bd      	mov	sp, r7
 8000378:	bc80      	pop	{r7}
 800037a:	4770      	bx	lr
 800037c:	200000c4 	.word	0x200000c4

08000380 <is_button2_press1s>:

//the function check if time_adjust_button is pressed more than 1s or not
//reset the flag and turn on again every 1s if it is keep pressing
int is_button2_press1s()
{
 8000380:	b480      	push	{r7}
 8000382:	af00      	add	r7, sp, #0
	if(flagForButtonPress1s[1]==1){
 8000384:	4b06      	ldr	r3, [pc, #24]	; (80003a0 <is_button2_press1s+0x20>)
 8000386:	785b      	ldrb	r3, [r3, #1]
 8000388:	2b01      	cmp	r3, #1
 800038a:	d104      	bne.n	8000396 <is_button2_press1s+0x16>
		flagForButtonPress1s[1] = 0;
 800038c:	4b04      	ldr	r3, [pc, #16]	; (80003a0 <is_button2_press1s+0x20>)
 800038e:	2200      	movs	r2, #0
 8000390:	705a      	strb	r2, [r3, #1]
		return 1;
 8000392:	2301      	movs	r3, #1
 8000394:	e000      	b.n	8000398 <is_button2_press1s+0x18>
	}
	return 0;
 8000396:	2300      	movs	r3, #0
}
 8000398:	4618      	mov	r0, r3
 800039a:	46bd      	mov	sp, r7
 800039c:	bc80      	pop	{r7}
 800039e:	4770      	bx	lr
 80003a0:	200000c0 	.word	0x200000c0

080003a4 <buzzerRun>:
int value[2] = {START, OFF};
int delay = BASE_DELAY;
int i = 0;

void buzzerRun()
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	b086      	sub	sp, #24
 80003a8:	af00      	add	r7, sp, #0
	int base_time = red_time;
 80003aa:	4b23      	ldr	r3, [pc, #140]	; (8000438 <buzzerRun+0x94>)
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	617b      	str	r3, [r7, #20]
	int a = (BASE_DELAY - LAST_DELAY) / base_time;
 80003b0:	f44f 5296 	mov.w	r2, #4800	; 0x12c0
 80003b4:	697b      	ldr	r3, [r7, #20]
 80003b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80003ba:	613b      	str	r3, [r7, #16]
	int b = LAST_DELAY;
 80003bc:	23c8      	movs	r3, #200	; 0xc8
 80003be:	60fb      	str	r3, [r7, #12]
	int c = (BASE_VALUE - LAST_VALUE) / base_time;
 80003c0:	4a1e      	ldr	r2, [pc, #120]	; (800043c <buzzerRun+0x98>)
 80003c2:	697b      	ldr	r3, [r7, #20]
 80003c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80003c8:	60bb      	str	r3, [r7, #8]
	int d = LAST_VALUE;
 80003ca:	f240 33de 	movw	r3, #990	; 0x3de
 80003ce:	607b      	str	r3, [r7, #4]
	if (timer4_flag == 1)
 80003d0:	4b1b      	ldr	r3, [pc, #108]	; (8000440 <buzzerRun+0x9c>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	2b01      	cmp	r3, #1
 80003d6:	d12a      	bne.n	800042e <buzzerRun+0x8a>
	{
		setTimer4(delay);
 80003d8:	4b1a      	ldr	r3, [pc, #104]	; (8000444 <buzzerRun+0xa0>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	4618      	mov	r0, r3
 80003de:	f000 fdc9 	bl	8000f74 <setTimer4>
		__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, value[i]);
 80003e2:	4b19      	ldr	r3, [pc, #100]	; (8000448 <buzzerRun+0xa4>)
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	4a19      	ldr	r2, [pc, #100]	; (800044c <buzzerRun+0xa8>)
 80003e8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003ec:	4b18      	ldr	r3, [pc, #96]	; (8000450 <buzzerRun+0xac>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	635a      	str	r2, [r3, #52]	; 0x34
		i = (i + 1) % 2;
 80003f2:	4b15      	ldr	r3, [pc, #84]	; (8000448 <buzzerRun+0xa4>)
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	3301      	adds	r3, #1
 80003f8:	2b00      	cmp	r3, #0
 80003fa:	f003 0301 	and.w	r3, r3, #1
 80003fe:	bfb8      	it	lt
 8000400:	425b      	neglt	r3, r3
 8000402:	4a11      	ldr	r2, [pc, #68]	; (8000448 <buzzerRun+0xa4>)
 8000404:	6013      	str	r3, [r2, #0]
		// This is the equation with desired coefficients
		delay = a * SEG_counter + b;
 8000406:	693b      	ldr	r3, [r7, #16]
 8000408:	4a12      	ldr	r2, [pc, #72]	; (8000454 <buzzerRun+0xb0>)
 800040a:	6812      	ldr	r2, [r2, #0]
 800040c:	fb03 f202 	mul.w	r2, r3, r2
 8000410:	68fb      	ldr	r3, [r7, #12]
 8000412:	4413      	add	r3, r2
 8000414:	461a      	mov	r2, r3
 8000416:	4b0b      	ldr	r3, [pc, #44]	; (8000444 <buzzerRun+0xa0>)
 8000418:	601a      	str	r2, [r3, #0]
		value[0] = c * SEG_counter + d;
 800041a:	68bb      	ldr	r3, [r7, #8]
 800041c:	4a0d      	ldr	r2, [pc, #52]	; (8000454 <buzzerRun+0xb0>)
 800041e:	6812      	ldr	r2, [r2, #0]
 8000420:	fb03 f202 	mul.w	r2, r3, r2
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4413      	add	r3, r2
 8000428:	461a      	mov	r2, r3
 800042a:	4b08      	ldr	r3, [pc, #32]	; (800044c <buzzerRun+0xa8>)
 800042c:	601a      	str	r2, [r3, #0]
	}
	// Delete this
}
 800042e:	bf00      	nop
 8000430:	3718      	adds	r7, #24
 8000432:	46bd      	mov	sp, r7
 8000434:	bd80      	pop	{r7, pc}
 8000436:	bf00      	nop
 8000438:	2000000c 	.word	0x2000000c
 800043c:	fffffc86 	.word	0xfffffc86
 8000440:	200001d0 	.word	0x200001d0
 8000444:	20000008 	.word	0x20000008
 8000448:	200000d0 	.word	0x200000d0
 800044c:	20000000 	.word	0x20000000
 8000450:	20000170 	.word	0x20000170
 8000454:	200000dc 	.word	0x200000dc

08000458 <fsm_automatic_run>:
 * Timer2: control time of road2
 * Timer3: count down for uart in auto
 */
int buzz_flag = 0;
void fsm_automatic_run()
{
 8000458:	b580      	push	{r7, lr}
 800045a:	af00      	add	r7, sp, #0

	switch(state)
 800045c:	4ba3      	ldr	r3, [pc, #652]	; (80006ec <fsm_automatic_run+0x294>)
 800045e:	781b      	ldrb	r3, [r3, #0]
 8000460:	2b05      	cmp	r3, #5
 8000462:	f200 825b 	bhi.w	800091c <fsm_automatic_run+0x4c4>
 8000466:	a201      	add	r2, pc, #4	; (adr r2, 800046c <fsm_automatic_run+0x14>)
 8000468:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800046c:	08000485 	.word	0x08000485
 8000470:	08000513 	.word	0x08000513
 8000474:	080005fb 	.word	0x080005fb
 8000478:	0800091d 	.word	0x0800091d
 800047c:	0800071d 	.word	0x0800071d
 8000480:	080007ff 	.word	0x080007ff
	{
	case INIT:
		if(yellow_time + green_time != red_time){
 8000484:	4b9a      	ldr	r3, [pc, #616]	; (80006f0 <fsm_automatic_run+0x298>)
 8000486:	681a      	ldr	r2, [r3, #0]
 8000488:	4b9a      	ldr	r3, [pc, #616]	; (80006f4 <fsm_automatic_run+0x29c>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	441a      	add	r2, r3
 800048e:	4b9a      	ldr	r3, [pc, #616]	; (80006f8 <fsm_automatic_run+0x2a0>)
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	429a      	cmp	r2, r3
 8000494:	d01d      	beq.n	80004d2 <fsm_automatic_run+0x7a>
			//error state
			//trap here until mode_button is pressed
			//and go to RED_ADJUST mode to change value again
			turn_all_led_off();
 8000496:	f001 f88b 	bl	80015b0 <turn_all_led_off>
			if(is_button1_pressed()){
 800049a:	f7ff ff29 	bl	80002f0 <is_button1_pressed>
 800049e:	4603      	mov	r3, r0
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	f000 823d 	beq.w	8000920 <fsm_automatic_run+0x4c8>
				state = RED_ADJUST;
 80004a6:	4b91      	ldr	r3, [pc, #580]	; (80006ec <fsm_automatic_run+0x294>)
 80004a8:	220b      	movs	r2, #11
 80004aa:	701a      	strb	r2, [r3, #0]
				red1_on();
 80004ac:	f000 ffd8 	bl	8001460 <red1_on>
				red2_on();
 80004b0:	f000 ffea 	bl	8001488 <red2_on>
				//display temp time
				SEG_counter = temp_red_time/1000;
 80004b4:	4b91      	ldr	r3, [pc, #580]	; (80006fc <fsm_automatic_run+0x2a4>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a91      	ldr	r2, [pc, #580]	; (8000700 <fsm_automatic_run+0x2a8>)
 80004ba:	fba2 2303 	umull	r2, r3, r2, r3
 80004be:	099b      	lsrs	r3, r3, #6
 80004c0:	4a90      	ldr	r2, [pc, #576]	; (8000704 <fsm_automatic_run+0x2ac>)
 80004c2:	6013      	str	r3, [r2, #0]
				UART_Parse();
 80004c4:	f001 f892 	bl	80015ec <UART_Parse>
				//reset all button flag
				is_button2_pressed();
 80004c8:	f7ff ff24 	bl	8000314 <is_button2_pressed>
				is_button3_pressed();
 80004cc:	f7ff ff34 	bl	8000338 <is_button3_pressed>
			}
			break;
 80004d0:	e226      	b.n	8000920 <fsm_automatic_run+0x4c8>
		}
		//no error, prepare for changing to S1

		//send time via uart
		SEG_counter = green_time/1000;
 80004d2:	4b88      	ldr	r3, [pc, #544]	; (80006f4 <fsm_automatic_run+0x29c>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	4a8a      	ldr	r2, [pc, #552]	; (8000700 <fsm_automatic_run+0x2a8>)
 80004d8:	fba2 2303 	umull	r2, r3, r2, r3
 80004dc:	099b      	lsrs	r3, r3, #6
 80004de:	4a89      	ldr	r2, [pc, #548]	; (8000704 <fsm_automatic_run+0x2ac>)
 80004e0:	6013      	str	r3, [r2, #0]
		UART_Parse();
 80004e2:	f001 f883 	bl	80015ec <UART_Parse>

		setTimer4(1000);// Init the counter
 80004e6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80004ea:	f000 fd43 	bl	8000f74 <setTimer4>
		setTimer1(green_time);
 80004ee:	4b81      	ldr	r3, [pc, #516]	; (80006f4 <fsm_automatic_run+0x29c>)
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	4618      	mov	r0, r3
 80004f4:	f000 fcf6 	bl	8000ee4 <setTimer1>
		setTimer2(red_time);
 80004f8:	4b7f      	ldr	r3, [pc, #508]	; (80006f8 <fsm_automatic_run+0x2a0>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	4618      	mov	r0, r3
 80004fe:	f000 fd09 	bl	8000f14 <setTimer2>
		setTimer3(1000);
 8000502:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000506:	f000 fd1d 	bl	8000f44 <setTimer3>
		state = S1;
 800050a:	4b78      	ldr	r3, [pc, #480]	; (80006ec <fsm_automatic_run+0x294>)
 800050c:	2201      	movs	r2, #1
 800050e:	701a      	strb	r2, [r3, #0]
		break;
 8000510:	e20f      	b.n	8000932 <fsm_automatic_run+0x4da>
	case S1:
		buzz_flag = 0;
 8000512:	4b7d      	ldr	r3, [pc, #500]	; (8000708 <fsm_automatic_run+0x2b0>)
 8000514:	2200      	movs	r2, #0
 8000516:	601a      	str	r2, [r3, #0]
		green1_on();
 8000518:	f000 ffc6 	bl	80014a8 <green1_on>
		red2_on();
 800051c:	f000 ffb4 	bl	8001488 <red2_on>
		//uart count down
		if(timer3_flag == 1){
 8000520:	4b7a      	ldr	r3, [pc, #488]	; (800070c <fsm_automatic_run+0x2b4>)
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	2b01      	cmp	r3, #1
 8000526:	d10a      	bne.n	800053e <fsm_automatic_run+0xe6>
			SEG_counter--;
 8000528:	4b76      	ldr	r3, [pc, #472]	; (8000704 <fsm_automatic_run+0x2ac>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	3b01      	subs	r3, #1
 800052e:	4a75      	ldr	r2, [pc, #468]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000530:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000532:	f001 f85b 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 8000536:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800053a:	f000 fd03 	bl	8000f44 <setTimer3>
		}

		//road1 timeout -> turn to state S2
		if(timer1_flag == 1){
 800053e:	4b74      	ldr	r3, [pc, #464]	; (8000710 <fsm_automatic_run+0x2b8>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	2b01      	cmp	r3, #1
 8000544:	d115      	bne.n	8000572 <fsm_automatic_run+0x11a>
			setTimer1(yellow_time);
 8000546:	4b6a      	ldr	r3, [pc, #424]	; (80006f0 <fsm_automatic_run+0x298>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	4618      	mov	r0, r3
 800054c:	f000 fcca 	bl	8000ee4 <setTimer1>
			state = S2;
 8000550:	4b66      	ldr	r3, [pc, #408]	; (80006ec <fsm_automatic_run+0x294>)
 8000552:	2202      	movs	r2, #2
 8000554:	701a      	strb	r2, [r3, #0]
			SEG_counter = yellow_time/1000;
 8000556:	4b66      	ldr	r3, [pc, #408]	; (80006f0 <fsm_automatic_run+0x298>)
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	4a69      	ldr	r2, [pc, #420]	; (8000700 <fsm_automatic_run+0x2a8>)
 800055c:	fba2 2303 	umull	r2, r3, r2, r3
 8000560:	099b      	lsrs	r3, r3, #6
 8000562:	4a68      	ldr	r2, [pc, #416]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000564:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000566:	f001 f841 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 800056a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800056e:	f000 fce9 	bl	8000f44 <setTimer3>
		}

		//Mode_button is pressed -> turn to manual: RED_ADJUST
		if(is_button1_pressed()){
 8000572:	f7ff febd 	bl	80002f0 <is_button1_pressed>
 8000576:	4603      	mov	r3, r0
 8000578:	2b00      	cmp	r3, #0
 800057a:	d019      	beq.n	80005b0 <fsm_automatic_run+0x158>
			state = RED_ADJUST;
 800057c:	4b5b      	ldr	r3, [pc, #364]	; (80006ec <fsm_automatic_run+0x294>)
 800057e:	220b      	movs	r2, #11
 8000580:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000582:	f000 ff6d 	bl	8001460 <red1_on>
			red2_on();
 8000586:	f000 ff7f 	bl	8001488 <red2_on>
			//display temp time
			SEG_counter = temp_red_time/1000;
 800058a:	4b5c      	ldr	r3, [pc, #368]	; (80006fc <fsm_automatic_run+0x2a4>)
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	4a5c      	ldr	r2, [pc, #368]	; (8000700 <fsm_automatic_run+0x2a8>)
 8000590:	fba2 2303 	umull	r2, r3, r2, r3
 8000594:	099b      	lsrs	r3, r3, #6
 8000596:	4a5b      	ldr	r2, [pc, #364]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000598:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800059a:	f001 f827 	bl	80015ec <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 800059e:	f7ff feb9 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 80005a2:	f7ff fec9 	bl	8000338 <is_button3_pressed>

			// Turn off buzzer and light
			turn_pedes_off();
 80005a6:	f000 ffef 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 80005aa:	4b5a      	ldr	r3, [pc, #360]	; (8000714 <fsm_automatic_run+0x2bc>)
 80005ac:	2200      	movs	r2, #0
 80005ae:	601a      	str	r2, [r3, #0]
		}

		// Pedes light
		if (is_pede_button_pressed())
 80005b0:	f7ff fed4 	bl	800035c <is_pede_button_pressed>
 80005b4:	4603      	mov	r3, r0
 80005b6:	2b00      	cmp	r3, #0
 80005b8:	d014      	beq.n	80005e4 <fsm_automatic_run+0x18c>
		{
			if (mode_flag == 0)
 80005ba:	4b56      	ldr	r3, [pc, #344]	; (8000714 <fsm_automatic_run+0x2bc>)
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	2b00      	cmp	r3, #0
 80005c0:	d102      	bne.n	80005c8 <fsm_automatic_run+0x170>
				mode_flag = 1;
 80005c2:	4b54      	ldr	r3, [pc, #336]	; (8000714 <fsm_automatic_run+0x2bc>)
 80005c4:	2201      	movs	r2, #1
 80005c6:	601a      	str	r2, [r3, #0]
			red_pedes_on();
 80005c8:	f000 ffb6 	bl	8001538 <red_pedes_on>
			setTimer5(SEG_counter * 1000 + red_time);
 80005cc:	4b4d      	ldr	r3, [pc, #308]	; (8000704 <fsm_automatic_run+0x2ac>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80005d4:	fb03 f202 	mul.w	r2, r3, r2
 80005d8:	4b47      	ldr	r3, [pc, #284]	; (80006f8 <fsm_automatic_run+0x2a0>)
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	4413      	add	r3, r2
 80005de:	4618      	mov	r0, r3
 80005e0:	f000 fce0 	bl	8000fa4 <setTimer5>
		}

		if (timer5_flag == 1)
 80005e4:	4b4c      	ldr	r3, [pc, #304]	; (8000718 <fsm_automatic_run+0x2c0>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	2b01      	cmp	r3, #1
 80005ea:	f040 819b 	bne.w	8000924 <fsm_automatic_run+0x4cc>
		{
			turn_pedes_off();
 80005ee:	f000 ffcb 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 80005f2:	4b48      	ldr	r3, [pc, #288]	; (8000714 <fsm_automatic_run+0x2bc>)
 80005f4:	2200      	movs	r2, #0
 80005f6:	601a      	str	r2, [r3, #0]
		}
		break;
 80005f8:	e194      	b.n	8000924 <fsm_automatic_run+0x4cc>
	case S2:
		buzz_flag = 0;
 80005fa:	4b43      	ldr	r3, [pc, #268]	; (8000708 <fsm_automatic_run+0x2b0>)
 80005fc:	2200      	movs	r2, #0
 80005fe:	601a      	str	r2, [r3, #0]
		yellow1_on();
 8000600:	f000 ff76 	bl	80014f0 <yellow1_on>
		red2_on();
 8000604:	f000 ff40 	bl	8001488 <red2_on>

		//uart count down
		if(timer3_flag == 1){
 8000608:	4b40      	ldr	r3, [pc, #256]	; (800070c <fsm_automatic_run+0x2b4>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	2b01      	cmp	r3, #1
 800060e:	d10a      	bne.n	8000626 <fsm_automatic_run+0x1ce>
			SEG_counter--;
 8000610:	4b3c      	ldr	r3, [pc, #240]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	3b01      	subs	r3, #1
 8000616:	4a3b      	ldr	r2, [pc, #236]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000618:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800061a:	f000 ffe7 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 800061e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000622:	f000 fc8f 	bl	8000f44 <setTimer3>
		}

		//road1 timeout -> turn to state S3
		if(timer1_flag == 1){
 8000626:	4b3a      	ldr	r3, [pc, #232]	; (8000710 <fsm_automatic_run+0x2b8>)
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	2b01      	cmp	r3, #1
 800062c:	d11a      	bne.n	8000664 <fsm_automatic_run+0x20c>
			setTimer1(red_time);
 800062e:	4b32      	ldr	r3, [pc, #200]	; (80006f8 <fsm_automatic_run+0x2a0>)
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4618      	mov	r0, r3
 8000634:	f000 fc56 	bl	8000ee4 <setTimer1>
			setTimer2(green_time);
 8000638:	4b2e      	ldr	r3, [pc, #184]	; (80006f4 <fsm_automatic_run+0x29c>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4618      	mov	r0, r3
 800063e:	f000 fc69 	bl	8000f14 <setTimer2>
			state = S3;
 8000642:	4b2a      	ldr	r3, [pc, #168]	; (80006ec <fsm_automatic_run+0x294>)
 8000644:	2204      	movs	r2, #4
 8000646:	701a      	strb	r2, [r3, #0]

			SEG_counter = red_time/1000;
 8000648:	4b2b      	ldr	r3, [pc, #172]	; (80006f8 <fsm_automatic_run+0x2a0>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	4a2c      	ldr	r2, [pc, #176]	; (8000700 <fsm_automatic_run+0x2a8>)
 800064e:	fba2 2303 	umull	r2, r3, r2, r3
 8000652:	099b      	lsrs	r3, r3, #6
 8000654:	4a2b      	ldr	r2, [pc, #172]	; (8000704 <fsm_automatic_run+0x2ac>)
 8000656:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000658:	f000 ffc8 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 800065c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000660:	f000 fc70 	bl	8000f44 <setTimer3>
		}


		//Mode_button is pressed -> turn to RED_ADJUST
		if(is_button1_pressed()){
 8000664:	f7ff fe44 	bl	80002f0 <is_button1_pressed>
 8000668:	4603      	mov	r3, r0
 800066a:	2b00      	cmp	r3, #0
 800066c:	d019      	beq.n	80006a2 <fsm_automatic_run+0x24a>
			state = RED_ADJUST;
 800066e:	4b1f      	ldr	r3, [pc, #124]	; (80006ec <fsm_automatic_run+0x294>)
 8000670:	220b      	movs	r2, #11
 8000672:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000674:	f000 fef4 	bl	8001460 <red1_on>
			red2_on();
 8000678:	f000 ff06 	bl	8001488 <red2_on>
			//display temp time
			SEG_counter = temp_red_time/1000;
 800067c:	4b1f      	ldr	r3, [pc, #124]	; (80006fc <fsm_automatic_run+0x2a4>)
 800067e:	681b      	ldr	r3, [r3, #0]
 8000680:	4a1f      	ldr	r2, [pc, #124]	; (8000700 <fsm_automatic_run+0x2a8>)
 8000682:	fba2 2303 	umull	r2, r3, r2, r3
 8000686:	099b      	lsrs	r3, r3, #6
 8000688:	4a1e      	ldr	r2, [pc, #120]	; (8000704 <fsm_automatic_run+0x2ac>)
 800068a:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800068c:	f000 ffae 	bl	80015ec <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 8000690:	f7ff fe40 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000694:	f7ff fe50 	bl	8000338 <is_button3_pressed>

			// Turn off buzzer and light
			turn_pedes_off();
 8000698:	f000 ff76 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 800069c:	4b1d      	ldr	r3, [pc, #116]	; (8000714 <fsm_automatic_run+0x2bc>)
 800069e:	2200      	movs	r2, #0
 80006a0:	601a      	str	r2, [r3, #0]
		}

		// Pedes light
		if (is_pede_button_pressed())
 80006a2:	f7ff fe5b 	bl	800035c <is_pede_button_pressed>
 80006a6:	4603      	mov	r3, r0
 80006a8:	2b00      	cmp	r3, #0
 80006aa:	d014      	beq.n	80006d6 <fsm_automatic_run+0x27e>
		{
			if (mode_flag == 0)
 80006ac:	4b19      	ldr	r3, [pc, #100]	; (8000714 <fsm_automatic_run+0x2bc>)
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	2b00      	cmp	r3, #0
 80006b2:	d102      	bne.n	80006ba <fsm_automatic_run+0x262>
				mode_flag = 1;
 80006b4:	4b17      	ldr	r3, [pc, #92]	; (8000714 <fsm_automatic_run+0x2bc>)
 80006b6:	2201      	movs	r2, #1
 80006b8:	601a      	str	r2, [r3, #0]
			red_pedes_on();
 80006ba:	f000 ff3d 	bl	8001538 <red_pedes_on>
			setTimer5(SEG_counter * 1000 + red_time);
 80006be:	4b11      	ldr	r3, [pc, #68]	; (8000704 <fsm_automatic_run+0x2ac>)
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80006c6:	fb03 f202 	mul.w	r2, r3, r2
 80006ca:	4b0b      	ldr	r3, [pc, #44]	; (80006f8 <fsm_automatic_run+0x2a0>)
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4413      	add	r3, r2
 80006d0:	4618      	mov	r0, r3
 80006d2:	f000 fc67 	bl	8000fa4 <setTimer5>
		}

		if (timer5_flag == 1)
 80006d6:	4b10      	ldr	r3, [pc, #64]	; (8000718 <fsm_automatic_run+0x2c0>)
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	2b01      	cmp	r3, #1
 80006dc:	f040 8124 	bne.w	8000928 <fsm_automatic_run+0x4d0>
		{
			turn_pedes_off();
 80006e0:	f000 ff52 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 80006e4:	4b0b      	ldr	r3, [pc, #44]	; (8000714 <fsm_automatic_run+0x2bc>)
 80006e6:	2200      	movs	r2, #0
 80006e8:	601a      	str	r2, [r3, #0]
		}

		break;
 80006ea:	e11d      	b.n	8000928 <fsm_automatic_run+0x4d0>
 80006ec:	200000e0 	.word	0x200000e0
 80006f0:	20000014 	.word	0x20000014
 80006f4:	20000010 	.word	0x20000010
 80006f8:	2000000c 	.word	0x2000000c
 80006fc:	20000018 	.word	0x20000018
 8000700:	10624dd3 	.word	0x10624dd3
 8000704:	200000dc 	.word	0x200000dc
 8000708:	200000d4 	.word	0x200000d4
 800070c:	200001c8 	.word	0x200001c8
 8000710:	200001b8 	.word	0x200001b8
 8000714:	200000d8 	.word	0x200000d8
 8000718:	200001d8 	.word	0x200001d8
	case S3:
		buzz_flag = 1;
 800071c:	4b86      	ldr	r3, [pc, #536]	; (8000938 <fsm_automatic_run+0x4e0>)
 800071e:	2201      	movs	r2, #1
 8000720:	601a      	str	r2, [r3, #0]
		red1_on();
 8000722:	f000 fe9d 	bl	8001460 <red1_on>
		green2_on();
 8000726:	f000 fed3 	bl	80014d0 <green2_on>

		//uart count down
		if(timer3_flag == 1){
 800072a:	4b84      	ldr	r3, [pc, #528]	; (800093c <fsm_automatic_run+0x4e4>)
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	2b01      	cmp	r3, #1
 8000730:	d10a      	bne.n	8000748 <fsm_automatic_run+0x2f0>
			SEG_counter--;
 8000732:	4b83      	ldr	r3, [pc, #524]	; (8000940 <fsm_automatic_run+0x4e8>)
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	3b01      	subs	r3, #1
 8000738:	4a81      	ldr	r2, [pc, #516]	; (8000940 <fsm_automatic_run+0x4e8>)
 800073a:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800073c:	f000 ff56 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 8000740:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000744:	f000 fbfe 	bl	8000f44 <setTimer3>
		}

		//road2 timeout -> turn to state S4
		if(timer2_flag == 1){
 8000748:	4b7e      	ldr	r3, [pc, #504]	; (8000944 <fsm_automatic_run+0x4ec>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	2b01      	cmp	r3, #1
 800074e:	d107      	bne.n	8000760 <fsm_automatic_run+0x308>
			setTimer2(yellow_time);
 8000750:	4b7d      	ldr	r3, [pc, #500]	; (8000948 <fsm_automatic_run+0x4f0>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	4618      	mov	r0, r3
 8000756:	f000 fbdd 	bl	8000f14 <setTimer2>
			state = S4;
 800075a:	4b7c      	ldr	r3, [pc, #496]	; (800094c <fsm_automatic_run+0x4f4>)
 800075c:	2205      	movs	r2, #5
 800075e:	701a      	strb	r2, [r3, #0]
		}

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 8000760:	f7ff fdc6 	bl	80002f0 <is_button1_pressed>
 8000764:	4603      	mov	r3, r0
 8000766:	2b00      	cmp	r3, #0
 8000768:	d019      	beq.n	800079e <fsm_automatic_run+0x346>
			state = RED_ADJUST;
 800076a:	4b78      	ldr	r3, [pc, #480]	; (800094c <fsm_automatic_run+0x4f4>)
 800076c:	220b      	movs	r2, #11
 800076e:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000770:	f000 fe76 	bl	8001460 <red1_on>
			red2_on();
 8000774:	f000 fe88 	bl	8001488 <red2_on>
			//display temp time
			SEG_counter = temp_red_time/1000;
 8000778:	4b75      	ldr	r3, [pc, #468]	; (8000950 <fsm_automatic_run+0x4f8>)
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	4a75      	ldr	r2, [pc, #468]	; (8000954 <fsm_automatic_run+0x4fc>)
 800077e:	fba2 2303 	umull	r2, r3, r2, r3
 8000782:	099b      	lsrs	r3, r3, #6
 8000784:	4a6e      	ldr	r2, [pc, #440]	; (8000940 <fsm_automatic_run+0x4e8>)
 8000786:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000788:	f000 ff30 	bl	80015ec <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 800078c:	f7ff fdc2 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000790:	f7ff fdd2 	bl	8000338 <is_button3_pressed>

			// Turn off buzzer and light
			turn_pedes_off();
 8000794:	f000 fef8 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 8000798:	4b6f      	ldr	r3, [pc, #444]	; (8000958 <fsm_automatic_run+0x500>)
 800079a:	2200      	movs	r2, #0
 800079c:	601a      	str	r2, [r3, #0]
		}

		// Pedes light
		if (is_pede_button_pressed())
 800079e:	f7ff fddd 	bl	800035c <is_pede_button_pressed>
 80007a2:	4603      	mov	r3, r0
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d015      	beq.n	80007d4 <fsm_automatic_run+0x37c>
		{
			if (mode_flag == 0)
 80007a8:	4b6b      	ldr	r3, [pc, #428]	; (8000958 <fsm_automatic_run+0x500>)
 80007aa:	681b      	ldr	r3, [r3, #0]
 80007ac:	2b00      	cmp	r3, #0
 80007ae:	d102      	bne.n	80007b6 <fsm_automatic_run+0x35e>
				mode_flag = 1;
 80007b0:	4b69      	ldr	r3, [pc, #420]	; (8000958 <fsm_automatic_run+0x500>)
 80007b2:	2201      	movs	r2, #1
 80007b4:	601a      	str	r2, [r3, #0]
			green_pedes_on();
 80007b6:	f000 fed3 	bl	8001560 <green_pedes_on>
			setTimer5(SEG_counter * 1000 + 2 * red_time);
 80007ba:	4b61      	ldr	r3, [pc, #388]	; (8000940 <fsm_automatic_run+0x4e8>)
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80007c2:	fb03 f202 	mul.w	r2, r3, r2
 80007c6:	4b65      	ldr	r3, [pc, #404]	; (800095c <fsm_automatic_run+0x504>)
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	4413      	add	r3, r2
 80007cc:	005b      	lsls	r3, r3, #1
 80007ce:	4618      	mov	r0, r3
 80007d0:	f000 fbe8 	bl	8000fa4 <setTimer5>
		}

		if ((mode_flag == 1) && (buzz_flag == 1))
 80007d4:	4b60      	ldr	r3, [pc, #384]	; (8000958 <fsm_automatic_run+0x500>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	2b01      	cmp	r3, #1
 80007da:	d105      	bne.n	80007e8 <fsm_automatic_run+0x390>
 80007dc:	4b56      	ldr	r3, [pc, #344]	; (8000938 <fsm_automatic_run+0x4e0>)
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	2b01      	cmp	r3, #1
 80007e2:	d101      	bne.n	80007e8 <fsm_automatic_run+0x390>
		{
			buzzerRun();
 80007e4:	f7ff fdde 	bl	80003a4 <buzzerRun>
		}
		// Timeout
		if (timer5_flag == 1)
 80007e8:	4b5d      	ldr	r3, [pc, #372]	; (8000960 <fsm_automatic_run+0x508>)
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	2b01      	cmp	r3, #1
 80007ee:	f040 809d 	bne.w	800092c <fsm_automatic_run+0x4d4>
		{
			turn_pedes_off();
 80007f2:	f000 fec9 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 80007f6:	4b58      	ldr	r3, [pc, #352]	; (8000958 <fsm_automatic_run+0x500>)
 80007f8:	2200      	movs	r2, #0
 80007fa:	601a      	str	r2, [r3, #0]
		}

		break;
 80007fc:	e096      	b.n	800092c <fsm_automatic_run+0x4d4>
	case S4:
		buzz_flag = 1;
 80007fe:	4b4e      	ldr	r3, [pc, #312]	; (8000938 <fsm_automatic_run+0x4e0>)
 8000800:	2201      	movs	r2, #1
 8000802:	601a      	str	r2, [r3, #0]
		red1_on();
 8000804:	f000 fe2c 	bl	8001460 <red1_on>
		yellow2_on();
 8000808:	f000 fe86 	bl	8001518 <yellow2_on>

		//uart count down
		if(timer3_flag == 1){
 800080c:	4b4b      	ldr	r3, [pc, #300]	; (800093c <fsm_automatic_run+0x4e4>)
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	2b01      	cmp	r3, #1
 8000812:	d10a      	bne.n	800082a <fsm_automatic_run+0x3d2>
			SEG_counter--;
 8000814:	4b4a      	ldr	r3, [pc, #296]	; (8000940 <fsm_automatic_run+0x4e8>)
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	3b01      	subs	r3, #1
 800081a:	4a49      	ldr	r2, [pc, #292]	; (8000940 <fsm_automatic_run+0x4e8>)
 800081c:	6013      	str	r3, [r2, #0]
			UART_Parse();
 800081e:	f000 fee5 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 8000822:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000826:	f000 fb8d 	bl	8000f44 <setTimer3>
		}

		//road2 timeout -> turn to state S1
		if(timer2_flag == 1){
 800082a:	4b46      	ldr	r3, [pc, #280]	; (8000944 <fsm_automatic_run+0x4ec>)
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	2b01      	cmp	r3, #1
 8000830:	d126      	bne.n	8000880 <fsm_automatic_run+0x428>
			setTimer1(green_time);
 8000832:	4b4c      	ldr	r3, [pc, #304]	; (8000964 <fsm_automatic_run+0x50c>)
 8000834:	681b      	ldr	r3, [r3, #0]
 8000836:	4618      	mov	r0, r3
 8000838:	f000 fb54 	bl	8000ee4 <setTimer1>
			setTimer2(red_time);
 800083c:	4b47      	ldr	r3, [pc, #284]	; (800095c <fsm_automatic_run+0x504>)
 800083e:	681b      	ldr	r3, [r3, #0]
 8000840:	4618      	mov	r0, r3
 8000842:	f000 fb67 	bl	8000f14 <setTimer2>
			state = S1;
 8000846:	4b41      	ldr	r3, [pc, #260]	; (800094c <fsm_automatic_run+0x4f4>)
 8000848:	2201      	movs	r2, #1
 800084a:	701a      	strb	r2, [r3, #0]

			// Turn off pedes light
			HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, RESET);
 800084c:	2200      	movs	r2, #0
 800084e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000852:	4845      	ldr	r0, [pc, #276]	; (8000968 <fsm_automatic_run+0x510>)
 8000854:	f001 fac9 	bl	8001dea <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, RESET);
 8000858:	2200      	movs	r2, #0
 800085a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800085e:	4843      	ldr	r0, [pc, #268]	; (800096c <fsm_automatic_run+0x514>)
 8000860:	f001 fac3 	bl	8001dea <HAL_GPIO_WritePin>

			SEG_counter = green_time/1000;
 8000864:	4b3f      	ldr	r3, [pc, #252]	; (8000964 <fsm_automatic_run+0x50c>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	4a3a      	ldr	r2, [pc, #232]	; (8000954 <fsm_automatic_run+0x4fc>)
 800086a:	fba2 2303 	umull	r2, r3, r2, r3
 800086e:	099b      	lsrs	r3, r3, #6
 8000870:	4a33      	ldr	r2, [pc, #204]	; (8000940 <fsm_automatic_run+0x4e8>)
 8000872:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000874:	f000 feba 	bl	80015ec <UART_Parse>
			setTimer3(1000);
 8000878:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800087c:	f000 fb62 	bl	8000f44 <setTimer3>
		}

		//Mode_button is pressed -> turn to manual RED_ADJUST
		if(is_button1_pressed()){
 8000880:	f7ff fd36 	bl	80002f0 <is_button1_pressed>
 8000884:	4603      	mov	r3, r0
 8000886:	2b00      	cmp	r3, #0
 8000888:	d019      	beq.n	80008be <fsm_automatic_run+0x466>
			state = RED_ADJUST;
 800088a:	4b30      	ldr	r3, [pc, #192]	; (800094c <fsm_automatic_run+0x4f4>)
 800088c:	220b      	movs	r2, #11
 800088e:	701a      	strb	r2, [r3, #0]
			red1_on();
 8000890:	f000 fde6 	bl	8001460 <red1_on>
			red2_on();
 8000894:	f000 fdf8 	bl	8001488 <red2_on>
			//display temp time
			SEG_counter = temp_red_time/1000;
 8000898:	4b2d      	ldr	r3, [pc, #180]	; (8000950 <fsm_automatic_run+0x4f8>)
 800089a:	681b      	ldr	r3, [r3, #0]
 800089c:	4a2d      	ldr	r2, [pc, #180]	; (8000954 <fsm_automatic_run+0x4fc>)
 800089e:	fba2 2303 	umull	r2, r3, r2, r3
 80008a2:	099b      	lsrs	r3, r3, #6
 80008a4:	4a26      	ldr	r2, [pc, #152]	; (8000940 <fsm_automatic_run+0x4e8>)
 80008a6:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80008a8:	f000 fea0 	bl	80015ec <UART_Parse>
			//reset all button flag
			is_button2_pressed();
 80008ac:	f7ff fd32 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 80008b0:	f7ff fd42 	bl	8000338 <is_button3_pressed>

			// Turn off buzzer and light
			turn_pedes_off();
 80008b4:	f000 fe68 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 80008b8:	4b27      	ldr	r3, [pc, #156]	; (8000958 <fsm_automatic_run+0x500>)
 80008ba:	2200      	movs	r2, #0
 80008bc:	601a      	str	r2, [r3, #0]
		}

		// Pedes light
		if (is_pede_button_pressed())
 80008be:	f7ff fd4d 	bl	800035c <is_pede_button_pressed>
 80008c2:	4603      	mov	r3, r0
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	d015      	beq.n	80008f4 <fsm_automatic_run+0x49c>
		{
			if (mode_flag == 0)
 80008c8:	4b23      	ldr	r3, [pc, #140]	; (8000958 <fsm_automatic_run+0x500>)
 80008ca:	681b      	ldr	r3, [r3, #0]
 80008cc:	2b00      	cmp	r3, #0
 80008ce:	d102      	bne.n	80008d6 <fsm_automatic_run+0x47e>
				mode_flag = 1;
 80008d0:	4b21      	ldr	r3, [pc, #132]	; (8000958 <fsm_automatic_run+0x500>)
 80008d2:	2201      	movs	r2, #1
 80008d4:	601a      	str	r2, [r3, #0]
			green_pedes_on();
 80008d6:	f000 fe43 	bl	8001560 <green_pedes_on>
			setTimer5(SEG_counter * 1000 + 2 * red_time);
 80008da:	4b19      	ldr	r3, [pc, #100]	; (8000940 <fsm_automatic_run+0x4e8>)
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80008e2:	fb03 f202 	mul.w	r2, r3, r2
 80008e6:	4b1d      	ldr	r3, [pc, #116]	; (800095c <fsm_automatic_run+0x504>)
 80008e8:	681b      	ldr	r3, [r3, #0]
 80008ea:	4413      	add	r3, r2
 80008ec:	005b      	lsls	r3, r3, #1
 80008ee:	4618      	mov	r0, r3
 80008f0:	f000 fb58 	bl	8000fa4 <setTimer5>
		}

		if ((mode_flag == 1) && (buzz_flag == 1))
 80008f4:	4b18      	ldr	r3, [pc, #96]	; (8000958 <fsm_automatic_run+0x500>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	2b01      	cmp	r3, #1
 80008fa:	d105      	bne.n	8000908 <fsm_automatic_run+0x4b0>
 80008fc:	4b0e      	ldr	r3, [pc, #56]	; (8000938 <fsm_automatic_run+0x4e0>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	2b01      	cmp	r3, #1
 8000902:	d101      	bne.n	8000908 <fsm_automatic_run+0x4b0>
		{
			buzzerRun();
 8000904:	f7ff fd4e 	bl	80003a4 <buzzerRun>
		}
		// Timeout
		if (timer5_flag == 1)
 8000908:	4b15      	ldr	r3, [pc, #84]	; (8000960 <fsm_automatic_run+0x508>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	2b01      	cmp	r3, #1
 800090e:	d10f      	bne.n	8000930 <fsm_automatic_run+0x4d8>
		{
			turn_pedes_off();
 8000910:	f000 fe3a 	bl	8001588 <turn_pedes_off>
			mode_flag = 0;
 8000914:	4b10      	ldr	r3, [pc, #64]	; (8000958 <fsm_automatic_run+0x500>)
 8000916:	2200      	movs	r2, #0
 8000918:	601a      	str	r2, [r3, #0]
		}
		break;
 800091a:	e009      	b.n	8000930 <fsm_automatic_run+0x4d8>
	default:
		break;
 800091c:	bf00      	nop
 800091e:	e008      	b.n	8000932 <fsm_automatic_run+0x4da>
			break;
 8000920:	bf00      	nop
 8000922:	e006      	b.n	8000932 <fsm_automatic_run+0x4da>
		break;
 8000924:	bf00      	nop
 8000926:	e004      	b.n	8000932 <fsm_automatic_run+0x4da>
		break;
 8000928:	bf00      	nop
 800092a:	e002      	b.n	8000932 <fsm_automatic_run+0x4da>
		break;
 800092c:	bf00      	nop
 800092e:	e000      	b.n	8000932 <fsm_automatic_run+0x4da>
		break;
 8000930:	bf00      	nop
	}
}
 8000932:	bf00      	nop
 8000934:	bd80      	pop	{r7, pc}
 8000936:	bf00      	nop
 8000938:	200000d4 	.word	0x200000d4
 800093c:	200001c8 	.word	0x200001c8
 8000940:	200000dc 	.word	0x200000dc
 8000944:	200001c0 	.word	0x200001c0
 8000948:	20000014 	.word	0x20000014
 800094c:	200000e0 	.word	0x200000e0
 8000950:	20000018 	.word	0x20000018
 8000954:	10624dd3 	.word	0x10624dd3
 8000958:	200000d8 	.word	0x200000d8
 800095c:	2000000c 	.word	0x2000000c
 8000960:	200001d8 	.word	0x200001d8
 8000964:	20000010 	.word	0x20000010
 8000968:	40010c00 	.word	0x40010c00
 800096c:	40010800 	.word	0x40010800

08000970 <fsm_manual_run>:
 * Button1: change mode AUTO -> RED_ADJUST -> YELLOW_ADJUST -> GREEN_ADJUST
 * Button2: change time corresponding to mode
 * Button3: save time
 */
void fsm_manual_run()
{
 8000970:	b580      	push	{r7, lr}
 8000972:	af00      	add	r7, sp, #0
	switch(state)
 8000974:	4b71      	ldr	r3, [pc, #452]	; (8000b3c <fsm_manual_run+0x1cc>)
 8000976:	781b      	ldrb	r3, [r3, #0]
 8000978:	2b0d      	cmp	r3, #13
 800097a:	d052      	beq.n	8000a22 <fsm_manual_run+0xb2>
 800097c:	2b0d      	cmp	r3, #13
 800097e:	f300 80d4 	bgt.w	8000b2a <fsm_manual_run+0x1ba>
 8000982:	2b0b      	cmp	r3, #11
 8000984:	f000 8088 	beq.w	8000a98 <fsm_manual_run+0x128>
 8000988:	2b0c      	cmp	r3, #12
 800098a:	f040 80ce 	bne.w	8000b2a <fsm_manual_run+0x1ba>
	{
	case YELLOW_ADJUST:
		yellow_blink();
 800098e:	f000 fd43 	bl	8001418 <yellow_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000992:	f7ff fcbf 	bl	8000314 <is_button2_pressed>
 8000996:	4603      	mov	r3, r0
 8000998:	2b00      	cmp	r3, #0
 800099a:	d104      	bne.n	80009a6 <fsm_manual_run+0x36>
 800099c:	f7ff fcf0 	bl	8000380 <is_button2_press1s>
 80009a0:	4603      	mov	r3, r0
 80009a2:	2b00      	cmp	r3, #0
 80009a4:	d018      	beq.n	80009d8 <fsm_manual_run+0x68>
			temp_yellow_time = temp_yellow_time% 30000 + 1000;
 80009a6:	4b66      	ldr	r3, [pc, #408]	; (8000b40 <fsm_manual_run+0x1d0>)
 80009a8:	681a      	ldr	r2, [r3, #0]
 80009aa:	4b66      	ldr	r3, [pc, #408]	; (8000b44 <fsm_manual_run+0x1d4>)
 80009ac:	fba3 1302 	umull	r1, r3, r3, r2
 80009b0:	0b5b      	lsrs	r3, r3, #13
 80009b2:	f247 5130 	movw	r1, #30000	; 0x7530
 80009b6:	fb01 f303 	mul.w	r3, r1, r3
 80009ba:	1ad3      	subs	r3, r2, r3
 80009bc:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80009c0:	4a5f      	ldr	r2, [pc, #380]	; (8000b40 <fsm_manual_run+0x1d0>)
 80009c2:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_yellow_time/1000;
 80009c4:	4b5e      	ldr	r3, [pc, #376]	; (8000b40 <fsm_manual_run+0x1d0>)
 80009c6:	681b      	ldr	r3, [r3, #0]
 80009c8:	4a5f      	ldr	r2, [pc, #380]	; (8000b48 <fsm_manual_run+0x1d8>)
 80009ca:	fba2 2303 	umull	r2, r3, r2, r3
 80009ce:	099b      	lsrs	r3, r3, #6
 80009d0:	4a5e      	ldr	r2, [pc, #376]	; (8000b4c <fsm_manual_run+0x1dc>)
 80009d2:	6013      	str	r3, [r2, #0]
			UART_Parse();
 80009d4:	f000 fe0a 	bl	80015ec <UART_Parse>
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 80009d8:	f7ff fcae 	bl	8000338 <is_button3_pressed>
 80009dc:	4603      	mov	r3, r0
 80009de:	2b00      	cmp	r3, #0
 80009e0:	d003      	beq.n	80009ea <fsm_manual_run+0x7a>
			yellow_time = temp_yellow_time;
 80009e2:	4b57      	ldr	r3, [pc, #348]	; (8000b40 <fsm_manual_run+0x1d0>)
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	4a5a      	ldr	r2, [pc, #360]	; (8000b50 <fsm_manual_run+0x1e0>)
 80009e8:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to GREEN_ADJUST
		if(is_button1_pressed()){
 80009ea:	f7ff fc81 	bl	80002f0 <is_button1_pressed>
 80009ee:	4603      	mov	r3, r0
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	f000 809c 	beq.w	8000b2e <fsm_manual_run+0x1be>
			state = GREEN_ADJUST;
 80009f6:	4b51      	ldr	r3, [pc, #324]	; (8000b3c <fsm_manual_run+0x1cc>)
 80009f8:	220d      	movs	r2, #13
 80009fa:	701a      	strb	r2, [r3, #0]
			green1_on();
 80009fc:	f000 fd54 	bl	80014a8 <green1_on>
			green2_on();
 8000a00:	f000 fd66 	bl	80014d0 <green2_on>
			//reset all button flag
			is_button2_pressed();
 8000a04:	f7ff fc86 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000a08:	f7ff fc96 	bl	8000338 <is_button3_pressed>

			SEG_counter = temp_green_time/1000;
 8000a0c:	4b51      	ldr	r3, [pc, #324]	; (8000b54 <fsm_manual_run+0x1e4>)
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	4a4d      	ldr	r2, [pc, #308]	; (8000b48 <fsm_manual_run+0x1d8>)
 8000a12:	fba2 2303 	umull	r2, r3, r2, r3
 8000a16:	099b      	lsrs	r3, r3, #6
 8000a18:	4a4c      	ldr	r2, [pc, #304]	; (8000b4c <fsm_manual_run+0x1dc>)
 8000a1a:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000a1c:	f000 fde6 	bl	80015ec <UART_Parse>
		}
		break;
 8000a20:	e085      	b.n	8000b2e <fsm_manual_run+0x1be>
	case GREEN_ADJUST:
		green_blink();
 8000a22:	f000 fcc5 	bl	80013b0 <green_blink>

		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000a26:	f7ff fc75 	bl	8000314 <is_button2_pressed>
 8000a2a:	4603      	mov	r3, r0
 8000a2c:	2b00      	cmp	r3, #0
 8000a2e:	d104      	bne.n	8000a3a <fsm_manual_run+0xca>
 8000a30:	f7ff fca6 	bl	8000380 <is_button2_press1s>
 8000a34:	4603      	mov	r3, r0
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	d018      	beq.n	8000a6c <fsm_manual_run+0xfc>
			temp_green_time = temp_green_time% 30000 + 1000;
 8000a3a:	4b46      	ldr	r3, [pc, #280]	; (8000b54 <fsm_manual_run+0x1e4>)
 8000a3c:	681a      	ldr	r2, [r3, #0]
 8000a3e:	4b41      	ldr	r3, [pc, #260]	; (8000b44 <fsm_manual_run+0x1d4>)
 8000a40:	fba3 1302 	umull	r1, r3, r3, r2
 8000a44:	0b5b      	lsrs	r3, r3, #13
 8000a46:	f247 5130 	movw	r1, #30000	; 0x7530
 8000a4a:	fb01 f303 	mul.w	r3, r1, r3
 8000a4e:	1ad3      	subs	r3, r2, r3
 8000a50:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000a54:	4a3f      	ldr	r2, [pc, #252]	; (8000b54 <fsm_manual_run+0x1e4>)
 8000a56:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_green_time/1000;
 8000a58:	4b3e      	ldr	r3, [pc, #248]	; (8000b54 <fsm_manual_run+0x1e4>)
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	4a3a      	ldr	r2, [pc, #232]	; (8000b48 <fsm_manual_run+0x1d8>)
 8000a5e:	fba2 2303 	umull	r2, r3, r2, r3
 8000a62:	099b      	lsrs	r3, r3, #6
 8000a64:	4a39      	ldr	r2, [pc, #228]	; (8000b4c <fsm_manual_run+0x1dc>)
 8000a66:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000a68:	f000 fdc0 	bl	80015ec <UART_Parse>
		}

		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000a6c:	f7ff fc64 	bl	8000338 <is_button3_pressed>
 8000a70:	4603      	mov	r3, r0
 8000a72:	2b00      	cmp	r3, #0
 8000a74:	d003      	beq.n	8000a7e <fsm_manual_run+0x10e>
			green_time = temp_green_time;
 8000a76:	4b37      	ldr	r3, [pc, #220]	; (8000b54 <fsm_manual_run+0x1e4>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	4a37      	ldr	r2, [pc, #220]	; (8000b58 <fsm_manual_run+0x1e8>)
 8000a7c:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to INIT
		if(is_button1_pressed()){
 8000a7e:	f7ff fc37 	bl	80002f0 <is_button1_pressed>
 8000a82:	4603      	mov	r3, r0
 8000a84:	2b00      	cmp	r3, #0
 8000a86:	d054      	beq.n	8000b32 <fsm_manual_run+0x1c2>
			state = INIT;
 8000a88:	4b2c      	ldr	r3, [pc, #176]	; (8000b3c <fsm_manual_run+0x1cc>)
 8000a8a:	2200      	movs	r2, #0
 8000a8c:	701a      	strb	r2, [r3, #0]
			//reset all button flag
			is_button2_pressed();
 8000a8e:	f7ff fc41 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000a92:	f7ff fc51 	bl	8000338 <is_button3_pressed>
		}
		break;
 8000a96:	e04c      	b.n	8000b32 <fsm_manual_run+0x1c2>
	case RED_ADJUST:
		red_blink();
 8000a98:	f000 fca2 	bl	80013e0 <red_blink>
		//when time_button pressed -> increase time by 1
		//when keep pressing -> increase 1 every 1 second
		//range of time is [1-30]
		if(is_button2_pressed() || is_button2_press1s()){
 8000a9c:	f7ff fc3a 	bl	8000314 <is_button2_pressed>
 8000aa0:	4603      	mov	r3, r0
 8000aa2:	2b00      	cmp	r3, #0
 8000aa4:	d104      	bne.n	8000ab0 <fsm_manual_run+0x140>
 8000aa6:	f7ff fc6b 	bl	8000380 <is_button2_press1s>
 8000aaa:	4603      	mov	r3, r0
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	d018      	beq.n	8000ae2 <fsm_manual_run+0x172>
			temp_red_time = temp_red_time% 30000 + 1000;
 8000ab0:	4b2a      	ldr	r3, [pc, #168]	; (8000b5c <fsm_manual_run+0x1ec>)
 8000ab2:	681a      	ldr	r2, [r3, #0]
 8000ab4:	4b23      	ldr	r3, [pc, #140]	; (8000b44 <fsm_manual_run+0x1d4>)
 8000ab6:	fba3 1302 	umull	r1, r3, r3, r2
 8000aba:	0b5b      	lsrs	r3, r3, #13
 8000abc:	f247 5130 	movw	r1, #30000	; 0x7530
 8000ac0:	fb01 f303 	mul.w	r3, r1, r3
 8000ac4:	1ad3      	subs	r3, r2, r3
 8000ac6:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8000aca:	4a24      	ldr	r2, [pc, #144]	; (8000b5c <fsm_manual_run+0x1ec>)
 8000acc:	6013      	str	r3, [r2, #0]
			SEG_counter = temp_red_time/1000;
 8000ace:	4b23      	ldr	r3, [pc, #140]	; (8000b5c <fsm_manual_run+0x1ec>)
 8000ad0:	681b      	ldr	r3, [r3, #0]
 8000ad2:	4a1d      	ldr	r2, [pc, #116]	; (8000b48 <fsm_manual_run+0x1d8>)
 8000ad4:	fba2 2303 	umull	r2, r3, r2, r3
 8000ad8:	099b      	lsrs	r3, r3, #6
 8000ada:	4a1c      	ldr	r2, [pc, #112]	; (8000b4c <fsm_manual_run+0x1dc>)
 8000adc:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000ade:	f000 fd85 	bl	80015ec <UART_Parse>
		}
		//set_button is pressed -> save temp value
		if(is_button3_pressed()){
 8000ae2:	f7ff fc29 	bl	8000338 <is_button3_pressed>
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	2b00      	cmp	r3, #0
 8000aea:	d003      	beq.n	8000af4 <fsm_manual_run+0x184>
			red_time = temp_red_time;
 8000aec:	4b1b      	ldr	r3, [pc, #108]	; (8000b5c <fsm_manual_run+0x1ec>)
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	4a1b      	ldr	r2, [pc, #108]	; (8000b60 <fsm_manual_run+0x1f0>)
 8000af2:	6013      	str	r3, [r2, #0]
		}

		//Mode_button is pressed -> turn to YELLOW_ADJUST
		if(is_button1_pressed()){
 8000af4:	f7ff fbfc 	bl	80002f0 <is_button1_pressed>
 8000af8:	4603      	mov	r3, r0
 8000afa:	2b00      	cmp	r3, #0
 8000afc:	d01b      	beq.n	8000b36 <fsm_manual_run+0x1c6>
			state = YELLOW_ADJUST;
 8000afe:	4b0f      	ldr	r3, [pc, #60]	; (8000b3c <fsm_manual_run+0x1cc>)
 8000b00:	220c      	movs	r2, #12
 8000b02:	701a      	strb	r2, [r3, #0]
			yellow1_on();
 8000b04:	f000 fcf4 	bl	80014f0 <yellow1_on>
			yellow2_on();
 8000b08:	f000 fd06 	bl	8001518 <yellow2_on>
			//reset all button flag
			is_button2_pressed();
 8000b0c:	f7ff fc02 	bl	8000314 <is_button2_pressed>
			is_button3_pressed();
 8000b10:	f7ff fc12 	bl	8000338 <is_button3_pressed>

			SEG_counter = temp_yellow_time/1000;
 8000b14:	4b0a      	ldr	r3, [pc, #40]	; (8000b40 <fsm_manual_run+0x1d0>)
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	4a0b      	ldr	r2, [pc, #44]	; (8000b48 <fsm_manual_run+0x1d8>)
 8000b1a:	fba2 2303 	umull	r2, r3, r2, r3
 8000b1e:	099b      	lsrs	r3, r3, #6
 8000b20:	4a0a      	ldr	r2, [pc, #40]	; (8000b4c <fsm_manual_run+0x1dc>)
 8000b22:	6013      	str	r3, [r2, #0]
			UART_Parse();
 8000b24:	f000 fd62 	bl	80015ec <UART_Parse>
		}
		break;
 8000b28:	e005      	b.n	8000b36 <fsm_manual_run+0x1c6>
	default:
		break;
 8000b2a:	bf00      	nop
 8000b2c:	e004      	b.n	8000b38 <fsm_manual_run+0x1c8>
		break;
 8000b2e:	bf00      	nop
 8000b30:	e002      	b.n	8000b38 <fsm_manual_run+0x1c8>
		break;
 8000b32:	bf00      	nop
 8000b34:	e000      	b.n	8000b38 <fsm_manual_run+0x1c8>
		break;
 8000b36:	bf00      	nop
	}
}
 8000b38:	bf00      	nop
 8000b3a:	bd80      	pop	{r7, pc}
 8000b3c:	200000e0 	.word	0x200000e0
 8000b40:	20000020 	.word	0x20000020
 8000b44:	45e7b273 	.word	0x45e7b273
 8000b48:	10624dd3 	.word	0x10624dd3
 8000b4c:	200000dc 	.word	0x200000dc
 8000b50:	20000014 	.word	0x20000014
 8000b54:	2000001c 	.word	0x2000001c
 8000b58:	20000010 	.word	0x20000010
 8000b5c:	20000018 	.word	0x20000018
 8000b60:	2000000c 	.word	0x2000000c

08000b64 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b64:	b580      	push	{r7, lr}
 8000b66:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b68:	f000 fd84 	bl	8001674 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b6c:	f000 f818 	bl	8000ba0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b70:	f000 f944 	bl	8000dfc <MX_GPIO_Init>
  MX_TIM2_Init();
 8000b74:	f000 f856 	bl	8000c24 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000b78:	f000 f8a0 	bl	8000cbc <MX_TIM3_Init>
  MX_USART2_UART_Init();
 8000b7c:	f000 f914 	bl	8000da8 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start_IT(&htim2);
 8000b80:	4805      	ldr	r0, [pc, #20]	; (8000b98 <main+0x34>)
 8000b82:	f001 fdcd 	bl	8002720 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8000b86:	2100      	movs	r1, #0
 8000b88:	4804      	ldr	r0, [pc, #16]	; (8000b9c <main+0x38>)
 8000b8a:	f001 fe73 	bl	8002874 <HAL_TIM_PWM_Start>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		fsm_automatic_run();
 8000b8e:	f7ff fc63 	bl	8000458 <fsm_automatic_run>
		fsm_manual_run();
 8000b92:	f7ff feed 	bl	8000970 <fsm_manual_run>
		fsm_automatic_run();
 8000b96:	e7fa      	b.n	8000b8e <main+0x2a>
 8000b98:	20000128 	.word	0x20000128
 8000b9c:	20000170 	.word	0x20000170

08000ba0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ba0:	b580      	push	{r7, lr}
 8000ba2:	b090      	sub	sp, #64	; 0x40
 8000ba4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ba6:	f107 0318 	add.w	r3, r7, #24
 8000baa:	2228      	movs	r2, #40	; 0x28
 8000bac:	2100      	movs	r1, #0
 8000bae:	4618      	mov	r0, r3
 8000bb0:	f003 f9c6 	bl	8003f40 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000bb4:	1d3b      	adds	r3, r7, #4
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	601a      	str	r2, [r3, #0]
 8000bba:	605a      	str	r2, [r3, #4]
 8000bbc:	609a      	str	r2, [r3, #8]
 8000bbe:	60da      	str	r2, [r3, #12]
 8000bc0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000bc2:	2302      	movs	r3, #2
 8000bc4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000bc6:	2301      	movs	r3, #1
 8000bc8:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000bca:	2310      	movs	r3, #16
 8000bcc:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000bce:	2302      	movs	r3, #2
 8000bd0:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000bd6:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000bda:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000bdc:	f107 0318 	add.w	r3, r7, #24
 8000be0:	4618      	mov	r0, r3
 8000be2:	f001 f933 	bl	8001e4c <HAL_RCC_OscConfig>
 8000be6:	4603      	mov	r3, r0
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d001      	beq.n	8000bf0 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000bec:	f000 f974 	bl	8000ed8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000bf0:	230f      	movs	r3, #15
 8000bf2:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000bf4:	2302      	movs	r3, #2
 8000bf6:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000bf8:	2300      	movs	r3, #0
 8000bfa:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000bfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c00:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c02:	2300      	movs	r3, #0
 8000c04:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000c06:	1d3b      	adds	r3, r7, #4
 8000c08:	2102      	movs	r1, #2
 8000c0a:	4618      	mov	r0, r3
 8000c0c:	f001 fba0 	bl	8002350 <HAL_RCC_ClockConfig>
 8000c10:	4603      	mov	r3, r0
 8000c12:	2b00      	cmp	r3, #0
 8000c14:	d001      	beq.n	8000c1a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000c16:	f000 f95f 	bl	8000ed8 <Error_Handler>
  }
}
 8000c1a:	bf00      	nop
 8000c1c:	3740      	adds	r7, #64	; 0x40
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	bd80      	pop	{r7, pc}
	...

08000c24 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000c24:	b580      	push	{r7, lr}
 8000c26:	b086      	sub	sp, #24
 8000c28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000c2a:	f107 0308 	add.w	r3, r7, #8
 8000c2e:	2200      	movs	r2, #0
 8000c30:	601a      	str	r2, [r3, #0]
 8000c32:	605a      	str	r2, [r3, #4]
 8000c34:	609a      	str	r2, [r3, #8]
 8000c36:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c38:	463b      	mov	r3, r7
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000c40:	4b1d      	ldr	r3, [pc, #116]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c42:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000c46:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 63;
 8000c48:	4b1b      	ldr	r3, [pc, #108]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c4a:	223f      	movs	r2, #63	; 0x3f
 8000c4c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c4e:	4b1a      	ldr	r3, [pc, #104]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c50:	2200      	movs	r2, #0
 8000c52:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8000c54:	4b18      	ldr	r3, [pc, #96]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c56:	f242 720f 	movw	r2, #9999	; 0x270f
 8000c5a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c5c:	4b16      	ldr	r3, [pc, #88]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c5e:	2200      	movs	r2, #0
 8000c60:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c62:	4b15      	ldr	r3, [pc, #84]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000c68:	4813      	ldr	r0, [pc, #76]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c6a:	f001 fd09 	bl	8002680 <HAL_TIM_Base_Init>
 8000c6e:	4603      	mov	r3, r0
 8000c70:	2b00      	cmp	r3, #0
 8000c72:	d001      	beq.n	8000c78 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8000c74:	f000 f930 	bl	8000ed8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000c78:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c7c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000c7e:	f107 0308 	add.w	r3, r7, #8
 8000c82:	4619      	mov	r1, r3
 8000c84:	480c      	ldr	r0, [pc, #48]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000c86:	f002 f85d 	bl	8002d44 <HAL_TIM_ConfigClockSource>
 8000c8a:	4603      	mov	r3, r0
 8000c8c:	2b00      	cmp	r3, #0
 8000c8e:	d001      	beq.n	8000c94 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8000c90:	f000 f922 	bl	8000ed8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c94:	2300      	movs	r3, #0
 8000c96:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c98:	2300      	movs	r3, #0
 8000c9a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c9c:	463b      	mov	r3, r7
 8000c9e:	4619      	mov	r1, r3
 8000ca0:	4805      	ldr	r0, [pc, #20]	; (8000cb8 <MX_TIM2_Init+0x94>)
 8000ca2:	f002 fbdb 	bl	800345c <HAL_TIMEx_MasterConfigSynchronization>
 8000ca6:	4603      	mov	r3, r0
 8000ca8:	2b00      	cmp	r3, #0
 8000caa:	d001      	beq.n	8000cb0 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000cac:	f000 f914 	bl	8000ed8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000cb0:	bf00      	nop
 8000cb2:	3718      	adds	r7, #24
 8000cb4:	46bd      	mov	sp, r7
 8000cb6:	bd80      	pop	{r7, pc}
 8000cb8:	20000128 	.word	0x20000128

08000cbc <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000cbc:	b580      	push	{r7, lr}
 8000cbe:	b08e      	sub	sp, #56	; 0x38
 8000cc0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000cc2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	601a      	str	r2, [r3, #0]
 8000cca:	605a      	str	r2, [r3, #4]
 8000ccc:	609a      	str	r2, [r3, #8]
 8000cce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000cd0:	f107 0320 	add.w	r3, r7, #32
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	601a      	str	r2, [r3, #0]
 8000cd8:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000cda:	1d3b      	adds	r3, r7, #4
 8000cdc:	2200      	movs	r2, #0
 8000cde:	601a      	str	r2, [r3, #0]
 8000ce0:	605a      	str	r2, [r3, #4]
 8000ce2:	609a      	str	r2, [r3, #8]
 8000ce4:	60da      	str	r2, [r3, #12]
 8000ce6:	611a      	str	r2, [r3, #16]
 8000ce8:	615a      	str	r2, [r3, #20]
 8000cea:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000cec:	4b2c      	ldr	r3, [pc, #176]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cee:	4a2d      	ldr	r2, [pc, #180]	; (8000da4 <MX_TIM3_Init+0xe8>)
 8000cf0:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8000cf2:	4b2b      	ldr	r3, [pc, #172]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cf4:	223f      	movs	r2, #63	; 0x3f
 8000cf6:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000cf8:	4b29      	ldr	r3, [pc, #164]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8000cfe:	4b28      	ldr	r3, [pc, #160]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d00:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000d04:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d06:	4b26      	ldr	r3, [pc, #152]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d08:	2200      	movs	r2, #0
 8000d0a:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d0c:	4b24      	ldr	r3, [pc, #144]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d0e:	2200      	movs	r2, #0
 8000d10:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000d12:	4823      	ldr	r0, [pc, #140]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d14:	f001 fcb4 	bl	8002680 <HAL_TIM_Base_Init>
 8000d18:	4603      	mov	r3, r0
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d001      	beq.n	8000d22 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8000d1e:	f000 f8db 	bl	8000ed8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000d22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000d26:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000d28:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000d2c:	4619      	mov	r1, r3
 8000d2e:	481c      	ldr	r0, [pc, #112]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d30:	f002 f808 	bl	8002d44 <HAL_TIM_ConfigClockSource>
 8000d34:	4603      	mov	r3, r0
 8000d36:	2b00      	cmp	r3, #0
 8000d38:	d001      	beq.n	8000d3e <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 8000d3a:	f000 f8cd 	bl	8000ed8 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000d3e:	4818      	ldr	r0, [pc, #96]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d40:	f001 fd40 	bl	80027c4 <HAL_TIM_PWM_Init>
 8000d44:	4603      	mov	r3, r0
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	d001      	beq.n	8000d4e <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 8000d4a:	f000 f8c5 	bl	8000ed8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d52:	2300      	movs	r3, #0
 8000d54:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000d56:	f107 0320 	add.w	r3, r7, #32
 8000d5a:	4619      	mov	r1, r3
 8000d5c:	4810      	ldr	r0, [pc, #64]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d5e:	f002 fb7d 	bl	800345c <HAL_TIMEx_MasterConfigSynchronization>
 8000d62:	4603      	mov	r3, r0
 8000d64:	2b00      	cmp	r3, #0
 8000d66:	d001      	beq.n	8000d6c <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 8000d68:	f000 f8b6 	bl	8000ed8 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000d6c:	2360      	movs	r3, #96	; 0x60
 8000d6e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000d70:	2300      	movs	r3, #0
 8000d72:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000d74:	2300      	movs	r3, #0
 8000d76:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000d78:	2300      	movs	r3, #0
 8000d7a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000d7c:	1d3b      	adds	r3, r7, #4
 8000d7e:	2200      	movs	r2, #0
 8000d80:	4619      	mov	r1, r3
 8000d82:	4807      	ldr	r0, [pc, #28]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d84:	f001 ff20 	bl	8002bc8 <HAL_TIM_PWM_ConfigChannel>
 8000d88:	4603      	mov	r3, r0
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d001      	beq.n	8000d92 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 8000d8e:	f000 f8a3 	bl	8000ed8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000d92:	4803      	ldr	r0, [pc, #12]	; (8000da0 <MX_TIM3_Init+0xe4>)
 8000d94:	f000 fa06 	bl	80011a4 <HAL_TIM_MspPostInit>

}
 8000d98:	bf00      	nop
 8000d9a:	3738      	adds	r7, #56	; 0x38
 8000d9c:	46bd      	mov	sp, r7
 8000d9e:	bd80      	pop	{r7, pc}
 8000da0:	20000170 	.word	0x20000170
 8000da4:	40000400 	.word	0x40000400

08000da8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000da8:	b580      	push	{r7, lr}
 8000daa:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000dac:	4b11      	ldr	r3, [pc, #68]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dae:	4a12      	ldr	r2, [pc, #72]	; (8000df8 <MX_USART2_UART_Init+0x50>)
 8000db0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000db2:	4b10      	ldr	r3, [pc, #64]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000db4:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000db8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000dba:	4b0e      	ldr	r3, [pc, #56]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000dc0:	4b0c      	ldr	r3, [pc, #48]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000dc6:	4b0b      	ldr	r3, [pc, #44]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dc8:	2200      	movs	r2, #0
 8000dca:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000dcc:	4b09      	ldr	r3, [pc, #36]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dce:	220c      	movs	r2, #12
 8000dd0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000dd2:	4b08      	ldr	r3, [pc, #32]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dd4:	2200      	movs	r2, #0
 8000dd6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000dd8:	4b06      	ldr	r3, [pc, #24]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000dda:	2200      	movs	r2, #0
 8000ddc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8000dde:	4805      	ldr	r0, [pc, #20]	; (8000df4 <MX_USART2_UART_Init+0x4c>)
 8000de0:	f002 fbac 	bl	800353c <HAL_UART_Init>
 8000de4:	4603      	mov	r3, r0
 8000de6:	2b00      	cmp	r3, #0
 8000de8:	d001      	beq.n	8000dee <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000dea:	f000 f875 	bl	8000ed8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8000dee:	bf00      	nop
 8000df0:	bd80      	pop	{r7, pc}
 8000df2:	bf00      	nop
 8000df4:	200000e4 	.word	0x200000e4
 8000df8:	40004400 	.word	0x40004400

08000dfc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b086      	sub	sp, #24
 8000e00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e02:	f107 0308 	add.w	r3, r7, #8
 8000e06:	2200      	movs	r2, #0
 8000e08:	601a      	str	r2, [r3, #0]
 8000e0a:	605a      	str	r2, [r3, #4]
 8000e0c:	609a      	str	r2, [r3, #8]
 8000e0e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e10:	4b2e      	ldr	r3, [pc, #184]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e12:	699b      	ldr	r3, [r3, #24]
 8000e14:	4a2d      	ldr	r2, [pc, #180]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e16:	f043 0304 	orr.w	r3, r3, #4
 8000e1a:	6193      	str	r3, [r2, #24]
 8000e1c:	4b2b      	ldr	r3, [pc, #172]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e1e:	699b      	ldr	r3, [r3, #24]
 8000e20:	f003 0304 	and.w	r3, r3, #4
 8000e24:	607b      	str	r3, [r7, #4]
 8000e26:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e28:	4b28      	ldr	r3, [pc, #160]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e2a:	699b      	ldr	r3, [r3, #24]
 8000e2c:	4a27      	ldr	r2, [pc, #156]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e2e:	f043 0308 	orr.w	r3, r3, #8
 8000e32:	6193      	str	r3, [r2, #24]
 8000e34:	4b25      	ldr	r3, [pc, #148]	; (8000ecc <MX_GPIO_Init+0xd0>)
 8000e36:	699b      	ldr	r3, [r3, #24]
 8000e38:	f003 0308 	and.w	r3, r3, #8
 8000e3c:	603b      	str	r3, [r7, #0]
 8000e3e:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin, GPIO_PIN_SET);
 8000e40:	2201      	movs	r2, #1
 8000e42:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000e46:	4822      	ldr	r0, [pc, #136]	; (8000ed0 <MX_GPIO_Init+0xd4>)
 8000e48:	f000 ffcf 	bl	8001dea <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, PEDE_LIGHT_B_Pin|LIGHT1_A_Pin, GPIO_PIN_SET);
 8000e4c:	2201      	movs	r2, #1
 8000e4e:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8000e52:	4820      	ldr	r0, [pc, #128]	; (8000ed4 <MX_GPIO_Init+0xd8>)
 8000e54:	f000 ffc9 	bl	8001dea <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEDE_BUTTON_Pin BUTTON1_Pin BUTTON2_Pin */
  GPIO_InitStruct.Pin = PEDE_BUTTON_Pin|BUTTON1_Pin|BUTTON2_Pin;
 8000e58:	2313      	movs	r3, #19
 8000e5a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e60:	2301      	movs	r3, #1
 8000e62:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e64:	f107 0308 	add.w	r3, r7, #8
 8000e68:	4619      	mov	r1, r3
 8000e6a:	481a      	ldr	r0, [pc, #104]	; (8000ed4 <MX_GPIO_Init+0xd8>)
 8000e6c:	f000 fe22 	bl	8001ab4 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON3_Pin */
  GPIO_InitStruct.Pin = BUTTON3_Pin;
 8000e70:	2301      	movs	r3, #1
 8000e72:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e74:	2300      	movs	r3, #0
 8000e76:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000e78:	2301      	movs	r3, #1
 8000e7a:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(BUTTON3_GPIO_Port, &GPIO_InitStruct);
 8000e7c:	f107 0308 	add.w	r3, r7, #8
 8000e80:	4619      	mov	r1, r3
 8000e82:	4813      	ldr	r0, [pc, #76]	; (8000ed0 <MX_GPIO_Init+0xd4>)
 8000e84:	f000 fe16 	bl	8001ab4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PEDE_LIGHT_A_Pin LIGHT1_B_Pin LIGHT2_B_Pin LIGHT2_A_Pin */
  GPIO_InitStruct.Pin = PEDE_LIGHT_A_Pin|LIGHT1_B_Pin|LIGHT2_B_Pin|LIGHT2_A_Pin;
 8000e88:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8000e8c:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e8e:	2301      	movs	r3, #1
 8000e90:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e92:	2300      	movs	r3, #0
 8000e94:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e96:	2302      	movs	r3, #2
 8000e98:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e9a:	f107 0308 	add.w	r3, r7, #8
 8000e9e:	4619      	mov	r1, r3
 8000ea0:	480b      	ldr	r0, [pc, #44]	; (8000ed0 <MX_GPIO_Init+0xd4>)
 8000ea2:	f000 fe07 	bl	8001ab4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PEDE_LIGHT_B_Pin LIGHT1_A_Pin */
  GPIO_InitStruct.Pin = PEDE_LIGHT_B_Pin|LIGHT1_A_Pin;
 8000ea6:	f44f 63a0 	mov.w	r3, #1280	; 0x500
 8000eaa:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000eac:	2301      	movs	r3, #1
 8000eae:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eb4:	2302      	movs	r3, #2
 8000eb6:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000eb8:	f107 0308 	add.w	r3, r7, #8
 8000ebc:	4619      	mov	r1, r3
 8000ebe:	4805      	ldr	r0, [pc, #20]	; (8000ed4 <MX_GPIO_Init+0xd8>)
 8000ec0:	f000 fdf8 	bl	8001ab4 <HAL_GPIO_Init>

}
 8000ec4:	bf00      	nop
 8000ec6:	3718      	adds	r7, #24
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	bd80      	pop	{r7, pc}
 8000ecc:	40021000 	.word	0x40021000
 8000ed0:	40010c00 	.word	0x40010c00
 8000ed4:	40010800 	.word	0x40010800

08000ed8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000ed8:	b480      	push	{r7}
 8000eda:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000edc:	b672      	cpsid	i
}
 8000ede:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8000ee0:	e7fe      	b.n	8000ee0 <Error_Handler+0x8>
	...

08000ee4 <setTimer1>:

// Add params for timer 5
int timer5_flag = 0;
int timer5_counter = 0;

void setTimer1(uint32_t duration){
 8000ee4:	b480      	push	{r7}
 8000ee6:	b083      	sub	sp, #12
 8000ee8:	af00      	add	r7, sp, #0
 8000eea:	6078      	str	r0, [r7, #4]
	timer1_counter = duration/TIMER_CYCLE;
 8000eec:	230a      	movs	r3, #10
 8000eee:	461a      	mov	r2, r3
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	fbb3 f3f2 	udiv	r3, r3, r2
 8000ef6:	461a      	mov	r2, r3
 8000ef8:	4b04      	ldr	r3, [pc, #16]	; (8000f0c <setTimer1+0x28>)
 8000efa:	601a      	str	r2, [r3, #0]
	timer1_flag = 0;
 8000efc:	4b04      	ldr	r3, [pc, #16]	; (8000f10 <setTimer1+0x2c>)
 8000efe:	2200      	movs	r2, #0
 8000f00:	601a      	str	r2, [r3, #0]
}
 8000f02:	bf00      	nop
 8000f04:	370c      	adds	r7, #12
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bc80      	pop	{r7}
 8000f0a:	4770      	bx	lr
 8000f0c:	200001bc 	.word	0x200001bc
 8000f10:	200001b8 	.word	0x200001b8

08000f14 <setTimer2>:

void setTimer2(uint32_t duration){
 8000f14:	b480      	push	{r7}
 8000f16:	b083      	sub	sp, #12
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TIMER_CYCLE;
 8000f1c:	230a      	movs	r3, #10
 8000f1e:	461a      	mov	r2, r3
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	fbb3 f3f2 	udiv	r3, r3, r2
 8000f26:	461a      	mov	r2, r3
 8000f28:	4b04      	ldr	r3, [pc, #16]	; (8000f3c <setTimer2+0x28>)
 8000f2a:	601a      	str	r2, [r3, #0]
	timer2_flag = 0;
 8000f2c:	4b04      	ldr	r3, [pc, #16]	; (8000f40 <setTimer2+0x2c>)
 8000f2e:	2200      	movs	r2, #0
 8000f30:	601a      	str	r2, [r3, #0]
}
 8000f32:	bf00      	nop
 8000f34:	370c      	adds	r7, #12
 8000f36:	46bd      	mov	sp, r7
 8000f38:	bc80      	pop	{r7}
 8000f3a:	4770      	bx	lr
 8000f3c:	200001c4 	.word	0x200001c4
 8000f40:	200001c0 	.word	0x200001c0

08000f44 <setTimer3>:

void setTimer3(uint32_t duration){
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
	timer3_counter = duration/TIMER_CYCLE;
 8000f4c:	230a      	movs	r3, #10
 8000f4e:	461a      	mov	r2, r3
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	fbb3 f3f2 	udiv	r3, r3, r2
 8000f56:	461a      	mov	r2, r3
 8000f58:	4b04      	ldr	r3, [pc, #16]	; (8000f6c <setTimer3+0x28>)
 8000f5a:	601a      	str	r2, [r3, #0]
	timer3_flag = 0;
 8000f5c:	4b04      	ldr	r3, [pc, #16]	; (8000f70 <setTimer3+0x2c>)
 8000f5e:	2200      	movs	r2, #0
 8000f60:	601a      	str	r2, [r3, #0]
}
 8000f62:	bf00      	nop
 8000f64:	370c      	adds	r7, #12
 8000f66:	46bd      	mov	sp, r7
 8000f68:	bc80      	pop	{r7}
 8000f6a:	4770      	bx	lr
 8000f6c:	200001cc 	.word	0x200001cc
 8000f70:	200001c8 	.word	0x200001c8

08000f74 <setTimer4>:

void setTimer4(uint32_t duration)
{
 8000f74:	b480      	push	{r7}
 8000f76:	b083      	sub	sp, #12
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
	timer4_counter = duration/TIMER_CYCLE;
 8000f7c:	230a      	movs	r3, #10
 8000f7e:	461a      	mov	r2, r3
 8000f80:	687b      	ldr	r3, [r7, #4]
 8000f82:	fbb3 f3f2 	udiv	r3, r3, r2
 8000f86:	461a      	mov	r2, r3
 8000f88:	4b04      	ldr	r3, [pc, #16]	; (8000f9c <setTimer4+0x28>)
 8000f8a:	601a      	str	r2, [r3, #0]
	timer4_flag = 0;
 8000f8c:	4b04      	ldr	r3, [pc, #16]	; (8000fa0 <setTimer4+0x2c>)
 8000f8e:	2200      	movs	r2, #0
 8000f90:	601a      	str	r2, [r3, #0]
}
 8000f92:	bf00      	nop
 8000f94:	370c      	adds	r7, #12
 8000f96:	46bd      	mov	sp, r7
 8000f98:	bc80      	pop	{r7}
 8000f9a:	4770      	bx	lr
 8000f9c:	200001d4 	.word	0x200001d4
 8000fa0:	200001d0 	.word	0x200001d0

08000fa4 <setTimer5>:

void setTimer5(uint32_t duration)
{
 8000fa4:	b480      	push	{r7}
 8000fa6:	b083      	sub	sp, #12
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	6078      	str	r0, [r7, #4]
	timer5_counter = duration/TIMER_CYCLE;
 8000fac:	230a      	movs	r3, #10
 8000fae:	461a      	mov	r2, r3
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	fbb3 f3f2 	udiv	r3, r3, r2
 8000fb6:	461a      	mov	r2, r3
 8000fb8:	4b04      	ldr	r3, [pc, #16]	; (8000fcc <setTimer5+0x28>)
 8000fba:	601a      	str	r2, [r3, #0]
	timer5_flag = 0;
 8000fbc:	4b04      	ldr	r3, [pc, #16]	; (8000fd0 <setTimer5+0x2c>)
 8000fbe:	2200      	movs	r2, #0
 8000fc0:	601a      	str	r2, [r3, #0]
}
 8000fc2:	bf00      	nop
 8000fc4:	370c      	adds	r7, #12
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	bc80      	pop	{r7}
 8000fca:	4770      	bx	lr
 8000fcc:	200001dc 	.word	0x200001dc
 8000fd0:	200001d8 	.word	0x200001d8

08000fd4 <timerRun>:


void timerRun(){
 8000fd4:	b480      	push	{r7}
 8000fd6:	af00      	add	r7, sp, #0
	if(timer1_counter >0){
 8000fd8:	4b29      	ldr	r3, [pc, #164]	; (8001080 <timerRun+0xac>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	2b00      	cmp	r3, #0
 8000fde:	dd0b      	ble.n	8000ff8 <timerRun+0x24>
		timer1_counter--;
 8000fe0:	4b27      	ldr	r3, [pc, #156]	; (8001080 <timerRun+0xac>)
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	3b01      	subs	r3, #1
 8000fe6:	4a26      	ldr	r2, [pc, #152]	; (8001080 <timerRun+0xac>)
 8000fe8:	6013      	str	r3, [r2, #0]
		if(timer1_counter <=0){
 8000fea:	4b25      	ldr	r3, [pc, #148]	; (8001080 <timerRun+0xac>)
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	dc02      	bgt.n	8000ff8 <timerRun+0x24>
			timer1_flag =1;
 8000ff2:	4b24      	ldr	r3, [pc, #144]	; (8001084 <timerRun+0xb0>)
 8000ff4:	2201      	movs	r2, #1
 8000ff6:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer2_counter >0){
 8000ff8:	4b23      	ldr	r3, [pc, #140]	; (8001088 <timerRun+0xb4>)
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	dd0b      	ble.n	8001018 <timerRun+0x44>
			timer2_counter--;
 8001000:	4b21      	ldr	r3, [pc, #132]	; (8001088 <timerRun+0xb4>)
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	3b01      	subs	r3, #1
 8001006:	4a20      	ldr	r2, [pc, #128]	; (8001088 <timerRun+0xb4>)
 8001008:	6013      	str	r3, [r2, #0]
			if(timer2_counter <=0){
 800100a:	4b1f      	ldr	r3, [pc, #124]	; (8001088 <timerRun+0xb4>)
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	2b00      	cmp	r3, #0
 8001010:	dc02      	bgt.n	8001018 <timerRun+0x44>
				timer2_flag =1;
 8001012:	4b1e      	ldr	r3, [pc, #120]	; (800108c <timerRun+0xb8>)
 8001014:	2201      	movs	r2, #1
 8001016:	601a      	str	r2, [r3, #0]
			}
		}
	if(timer3_counter >0){
 8001018:	4b1d      	ldr	r3, [pc, #116]	; (8001090 <timerRun+0xbc>)
 800101a:	681b      	ldr	r3, [r3, #0]
 800101c:	2b00      	cmp	r3, #0
 800101e:	dd0b      	ble.n	8001038 <timerRun+0x64>
			timer3_counter--;
 8001020:	4b1b      	ldr	r3, [pc, #108]	; (8001090 <timerRun+0xbc>)
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	3b01      	subs	r3, #1
 8001026:	4a1a      	ldr	r2, [pc, #104]	; (8001090 <timerRun+0xbc>)
 8001028:	6013      	str	r3, [r2, #0]
			if(timer3_counter <=0){
 800102a:	4b19      	ldr	r3, [pc, #100]	; (8001090 <timerRun+0xbc>)
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	2b00      	cmp	r3, #0
 8001030:	dc02      	bgt.n	8001038 <timerRun+0x64>
				timer3_flag =1;
 8001032:	4b18      	ldr	r3, [pc, #96]	; (8001094 <timerRun+0xc0>)
 8001034:	2201      	movs	r2, #1
 8001036:	601a      	str	r2, [r3, #0]
			}
	}
	if(timer4_counter >0){
 8001038:	4b17      	ldr	r3, [pc, #92]	; (8001098 <timerRun+0xc4>)
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	2b00      	cmp	r3, #0
 800103e:	dd0b      	ble.n	8001058 <timerRun+0x84>
				timer4_counter--;
 8001040:	4b15      	ldr	r3, [pc, #84]	; (8001098 <timerRun+0xc4>)
 8001042:	681b      	ldr	r3, [r3, #0]
 8001044:	3b01      	subs	r3, #1
 8001046:	4a14      	ldr	r2, [pc, #80]	; (8001098 <timerRun+0xc4>)
 8001048:	6013      	str	r3, [r2, #0]
				if(timer4_counter <=0){
 800104a:	4b13      	ldr	r3, [pc, #76]	; (8001098 <timerRun+0xc4>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	2b00      	cmp	r3, #0
 8001050:	dc02      	bgt.n	8001058 <timerRun+0x84>
					timer4_flag =1;
 8001052:	4b12      	ldr	r3, [pc, #72]	; (800109c <timerRun+0xc8>)
 8001054:	2201      	movs	r2, #1
 8001056:	601a      	str	r2, [r3, #0]
				}
		}
	if(timer5_counter >0){
 8001058:	4b11      	ldr	r3, [pc, #68]	; (80010a0 <timerRun+0xcc>)
 800105a:	681b      	ldr	r3, [r3, #0]
 800105c:	2b00      	cmp	r3, #0
 800105e:	dd0b      	ble.n	8001078 <timerRun+0xa4>
				timer5_counter--;
 8001060:	4b0f      	ldr	r3, [pc, #60]	; (80010a0 <timerRun+0xcc>)
 8001062:	681b      	ldr	r3, [r3, #0]
 8001064:	3b01      	subs	r3, #1
 8001066:	4a0e      	ldr	r2, [pc, #56]	; (80010a0 <timerRun+0xcc>)
 8001068:	6013      	str	r3, [r2, #0]
				if(timer5_counter <=0){
 800106a:	4b0d      	ldr	r3, [pc, #52]	; (80010a0 <timerRun+0xcc>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	2b00      	cmp	r3, #0
 8001070:	dc02      	bgt.n	8001078 <timerRun+0xa4>
					timer5_flag =1;
 8001072:	4b0c      	ldr	r3, [pc, #48]	; (80010a4 <timerRun+0xd0>)
 8001074:	2201      	movs	r2, #1
 8001076:	601a      	str	r2, [r3, #0]
				}
		}
}
 8001078:	bf00      	nop
 800107a:	46bd      	mov	sp, r7
 800107c:	bc80      	pop	{r7}
 800107e:	4770      	bx	lr
 8001080:	200001bc 	.word	0x200001bc
 8001084:	200001b8 	.word	0x200001b8
 8001088:	200001c4 	.word	0x200001c4
 800108c:	200001c0 	.word	0x200001c0
 8001090:	200001cc 	.word	0x200001cc
 8001094:	200001c8 	.word	0x200001c8
 8001098:	200001d4 	.word	0x200001d4
 800109c:	200001d0 	.word	0x200001d0
 80010a0:	200001dc 	.word	0x200001dc
 80010a4:	200001d8 	.word	0x200001d8

080010a8 <HAL_TIM_PeriodElapsedCallback>:


void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80010a8:	b580      	push	{r7, lr}
 80010aa:	b082      	sub	sp, #8
 80010ac:	af00      	add	r7, sp, #0
 80010ae:	6078      	str	r0, [r7, #4]
	button_reading();
 80010b0:	f7ff f854 	bl	800015c <button_reading>
	timerRun();
 80010b4:	f7ff ff8e 	bl	8000fd4 <timerRun>
}
 80010b8:	bf00      	nop
 80010ba:	3708      	adds	r7, #8
 80010bc:	46bd      	mov	sp, r7
 80010be:	bd80      	pop	{r7, pc}

080010c0 <HAL_MspInit>:
 80010c0:	b480      	push	{r7}
 80010c2:	b085      	sub	sp, #20
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	4b15      	ldr	r3, [pc, #84]	; (800111c <HAL_MspInit+0x5c>)
 80010c8:	699b      	ldr	r3, [r3, #24]
 80010ca:	4a14      	ldr	r2, [pc, #80]	; (800111c <HAL_MspInit+0x5c>)
 80010cc:	f043 0301 	orr.w	r3, r3, #1
 80010d0:	6193      	str	r3, [r2, #24]
 80010d2:	4b12      	ldr	r3, [pc, #72]	; (800111c <HAL_MspInit+0x5c>)
 80010d4:	699b      	ldr	r3, [r3, #24]
 80010d6:	f003 0301 	and.w	r3, r3, #1
 80010da:	60bb      	str	r3, [r7, #8]
 80010dc:	68bb      	ldr	r3, [r7, #8]
 80010de:	4b0f      	ldr	r3, [pc, #60]	; (800111c <HAL_MspInit+0x5c>)
 80010e0:	69db      	ldr	r3, [r3, #28]
 80010e2:	4a0e      	ldr	r2, [pc, #56]	; (800111c <HAL_MspInit+0x5c>)
 80010e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80010e8:	61d3      	str	r3, [r2, #28]
 80010ea:	4b0c      	ldr	r3, [pc, #48]	; (800111c <HAL_MspInit+0x5c>)
 80010ec:	69db      	ldr	r3, [r3, #28]
 80010ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80010f2:	607b      	str	r3, [r7, #4]
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	4b0a      	ldr	r3, [pc, #40]	; (8001120 <HAL_MspInit+0x60>)
 80010f8:	685b      	ldr	r3, [r3, #4]
 80010fa:	60fb      	str	r3, [r7, #12]
 80010fc:	68fb      	ldr	r3, [r7, #12]
 80010fe:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001102:	60fb      	str	r3, [r7, #12]
 8001104:	68fb      	ldr	r3, [r7, #12]
 8001106:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800110a:	60fb      	str	r3, [r7, #12]
 800110c:	4a04      	ldr	r2, [pc, #16]	; (8001120 <HAL_MspInit+0x60>)
 800110e:	68fb      	ldr	r3, [r7, #12]
 8001110:	6053      	str	r3, [r2, #4]
 8001112:	bf00      	nop
 8001114:	3714      	adds	r7, #20
 8001116:	46bd      	mov	sp, r7
 8001118:	bc80      	pop	{r7}
 800111a:	4770      	bx	lr
 800111c:	40021000 	.word	0x40021000
 8001120:	40010000 	.word	0x40010000

08001124 <HAL_TIM_Base_MspInit>:
 8001124:	b580      	push	{r7, lr}
 8001126:	b084      	sub	sp, #16
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001134:	d114      	bne.n	8001160 <HAL_TIM_Base_MspInit+0x3c>
 8001136:	4b19      	ldr	r3, [pc, #100]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 8001138:	69db      	ldr	r3, [r3, #28]
 800113a:	4a18      	ldr	r2, [pc, #96]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 800113c:	f043 0301 	orr.w	r3, r3, #1
 8001140:	61d3      	str	r3, [r2, #28]
 8001142:	4b16      	ldr	r3, [pc, #88]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 8001144:	69db      	ldr	r3, [r3, #28]
 8001146:	f003 0301 	and.w	r3, r3, #1
 800114a:	60fb      	str	r3, [r7, #12]
 800114c:	68fb      	ldr	r3, [r7, #12]
 800114e:	2200      	movs	r2, #0
 8001150:	2100      	movs	r1, #0
 8001152:	201c      	movs	r0, #28
 8001154:	f000 fbc7 	bl	80018e6 <HAL_NVIC_SetPriority>
 8001158:	201c      	movs	r0, #28
 800115a:	f000 fbe0 	bl	800191e <HAL_NVIC_EnableIRQ>
 800115e:	e018      	b.n	8001192 <HAL_TIM_Base_MspInit+0x6e>
 8001160:	687b      	ldr	r3, [r7, #4]
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	4a0e      	ldr	r2, [pc, #56]	; (80011a0 <HAL_TIM_Base_MspInit+0x7c>)
 8001166:	4293      	cmp	r3, r2
 8001168:	d113      	bne.n	8001192 <HAL_TIM_Base_MspInit+0x6e>
 800116a:	4b0c      	ldr	r3, [pc, #48]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 800116c:	69db      	ldr	r3, [r3, #28]
 800116e:	4a0b      	ldr	r2, [pc, #44]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 8001170:	f043 0302 	orr.w	r3, r3, #2
 8001174:	61d3      	str	r3, [r2, #28]
 8001176:	4b09      	ldr	r3, [pc, #36]	; (800119c <HAL_TIM_Base_MspInit+0x78>)
 8001178:	69db      	ldr	r3, [r3, #28]
 800117a:	f003 0302 	and.w	r3, r3, #2
 800117e:	60bb      	str	r3, [r7, #8]
 8001180:	68bb      	ldr	r3, [r7, #8]
 8001182:	2200      	movs	r2, #0
 8001184:	2100      	movs	r1, #0
 8001186:	201d      	movs	r0, #29
 8001188:	f000 fbad 	bl	80018e6 <HAL_NVIC_SetPriority>
 800118c:	201d      	movs	r0, #29
 800118e:	f000 fbc6 	bl	800191e <HAL_NVIC_EnableIRQ>
 8001192:	bf00      	nop
 8001194:	3710      	adds	r7, #16
 8001196:	46bd      	mov	sp, r7
 8001198:	bd80      	pop	{r7, pc}
 800119a:	bf00      	nop
 800119c:	40021000 	.word	0x40021000
 80011a0:	40000400 	.word	0x40000400

080011a4 <HAL_TIM_MspPostInit>:
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b088      	sub	sp, #32
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	6078      	str	r0, [r7, #4]
 80011ac:	f107 0310 	add.w	r3, r7, #16
 80011b0:	2200      	movs	r2, #0
 80011b2:	601a      	str	r2, [r3, #0]
 80011b4:	605a      	str	r2, [r3, #4]
 80011b6:	609a      	str	r2, [r3, #8]
 80011b8:	60da      	str	r2, [r3, #12]
 80011ba:	687b      	ldr	r3, [r7, #4]
 80011bc:	681b      	ldr	r3, [r3, #0]
 80011be:	4a0f      	ldr	r2, [pc, #60]	; (80011fc <HAL_TIM_MspPostInit+0x58>)
 80011c0:	4293      	cmp	r3, r2
 80011c2:	d117      	bne.n	80011f4 <HAL_TIM_MspPostInit+0x50>
 80011c4:	4b0e      	ldr	r3, [pc, #56]	; (8001200 <HAL_TIM_MspPostInit+0x5c>)
 80011c6:	699b      	ldr	r3, [r3, #24]
 80011c8:	4a0d      	ldr	r2, [pc, #52]	; (8001200 <HAL_TIM_MspPostInit+0x5c>)
 80011ca:	f043 0304 	orr.w	r3, r3, #4
 80011ce:	6193      	str	r3, [r2, #24]
 80011d0:	4b0b      	ldr	r3, [pc, #44]	; (8001200 <HAL_TIM_MspPostInit+0x5c>)
 80011d2:	699b      	ldr	r3, [r3, #24]
 80011d4:	f003 0304 	and.w	r3, r3, #4
 80011d8:	60fb      	str	r3, [r7, #12]
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	2340      	movs	r3, #64	; 0x40
 80011de:	613b      	str	r3, [r7, #16]
 80011e0:	2302      	movs	r3, #2
 80011e2:	617b      	str	r3, [r7, #20]
 80011e4:	2302      	movs	r3, #2
 80011e6:	61fb      	str	r3, [r7, #28]
 80011e8:	f107 0310 	add.w	r3, r7, #16
 80011ec:	4619      	mov	r1, r3
 80011ee:	4805      	ldr	r0, [pc, #20]	; (8001204 <HAL_TIM_MspPostInit+0x60>)
 80011f0:	f000 fc60 	bl	8001ab4 <HAL_GPIO_Init>
 80011f4:	bf00      	nop
 80011f6:	3720      	adds	r7, #32
 80011f8:	46bd      	mov	sp, r7
 80011fa:	bd80      	pop	{r7, pc}
 80011fc:	40000400 	.word	0x40000400
 8001200:	40021000 	.word	0x40021000
 8001204:	40010800 	.word	0x40010800

08001208 <HAL_UART_MspInit>:
 8001208:	b580      	push	{r7, lr}
 800120a:	b088      	sub	sp, #32
 800120c:	af00      	add	r7, sp, #0
 800120e:	6078      	str	r0, [r7, #4]
 8001210:	f107 0310 	add.w	r3, r7, #16
 8001214:	2200      	movs	r2, #0
 8001216:	601a      	str	r2, [r3, #0]
 8001218:	605a      	str	r2, [r3, #4]
 800121a:	609a      	str	r2, [r3, #8]
 800121c:	60da      	str	r2, [r3, #12]
 800121e:	687b      	ldr	r3, [r7, #4]
 8001220:	681b      	ldr	r3, [r3, #0]
 8001222:	4a1f      	ldr	r2, [pc, #124]	; (80012a0 <HAL_UART_MspInit+0x98>)
 8001224:	4293      	cmp	r3, r2
 8001226:	d137      	bne.n	8001298 <HAL_UART_MspInit+0x90>
 8001228:	4b1e      	ldr	r3, [pc, #120]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 800122a:	69db      	ldr	r3, [r3, #28]
 800122c:	4a1d      	ldr	r2, [pc, #116]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 800122e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001232:	61d3      	str	r3, [r2, #28]
 8001234:	4b1b      	ldr	r3, [pc, #108]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 8001236:	69db      	ldr	r3, [r3, #28]
 8001238:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800123c:	60fb      	str	r3, [r7, #12]
 800123e:	68fb      	ldr	r3, [r7, #12]
 8001240:	4b18      	ldr	r3, [pc, #96]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 8001242:	699b      	ldr	r3, [r3, #24]
 8001244:	4a17      	ldr	r2, [pc, #92]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 8001246:	f043 0304 	orr.w	r3, r3, #4
 800124a:	6193      	str	r3, [r2, #24]
 800124c:	4b15      	ldr	r3, [pc, #84]	; (80012a4 <HAL_UART_MspInit+0x9c>)
 800124e:	699b      	ldr	r3, [r3, #24]
 8001250:	f003 0304 	and.w	r3, r3, #4
 8001254:	60bb      	str	r3, [r7, #8]
 8001256:	68bb      	ldr	r3, [r7, #8]
 8001258:	2304      	movs	r3, #4
 800125a:	613b      	str	r3, [r7, #16]
 800125c:	2302      	movs	r3, #2
 800125e:	617b      	str	r3, [r7, #20]
 8001260:	2303      	movs	r3, #3
 8001262:	61fb      	str	r3, [r7, #28]
 8001264:	f107 0310 	add.w	r3, r7, #16
 8001268:	4619      	mov	r1, r3
 800126a:	480f      	ldr	r0, [pc, #60]	; (80012a8 <HAL_UART_MspInit+0xa0>)
 800126c:	f000 fc22 	bl	8001ab4 <HAL_GPIO_Init>
 8001270:	2308      	movs	r3, #8
 8001272:	613b      	str	r3, [r7, #16]
 8001274:	2300      	movs	r3, #0
 8001276:	617b      	str	r3, [r7, #20]
 8001278:	2300      	movs	r3, #0
 800127a:	61bb      	str	r3, [r7, #24]
 800127c:	f107 0310 	add.w	r3, r7, #16
 8001280:	4619      	mov	r1, r3
 8001282:	4809      	ldr	r0, [pc, #36]	; (80012a8 <HAL_UART_MspInit+0xa0>)
 8001284:	f000 fc16 	bl	8001ab4 <HAL_GPIO_Init>
 8001288:	2200      	movs	r2, #0
 800128a:	2100      	movs	r1, #0
 800128c:	2026      	movs	r0, #38	; 0x26
 800128e:	f000 fb2a 	bl	80018e6 <HAL_NVIC_SetPriority>
 8001292:	2026      	movs	r0, #38	; 0x26
 8001294:	f000 fb43 	bl	800191e <HAL_NVIC_EnableIRQ>
 8001298:	bf00      	nop
 800129a:	3720      	adds	r7, #32
 800129c:	46bd      	mov	sp, r7
 800129e:	bd80      	pop	{r7, pc}
 80012a0:	40004400 	.word	0x40004400
 80012a4:	40021000 	.word	0x40021000
 80012a8:	40010800 	.word	0x40010800

080012ac <NMI_Handler>:
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
 80012b0:	e7fe      	b.n	80012b0 <NMI_Handler+0x4>

080012b2 <HardFault_Handler>:
 80012b2:	b480      	push	{r7}
 80012b4:	af00      	add	r7, sp, #0
 80012b6:	e7fe      	b.n	80012b6 <HardFault_Handler+0x4>

080012b8 <MemManage_Handler>:
 80012b8:	b480      	push	{r7}
 80012ba:	af00      	add	r7, sp, #0
 80012bc:	e7fe      	b.n	80012bc <MemManage_Handler+0x4>

080012be <BusFault_Handler>:
 80012be:	b480      	push	{r7}
 80012c0:	af00      	add	r7, sp, #0
 80012c2:	e7fe      	b.n	80012c2 <BusFault_Handler+0x4>

080012c4 <UsageFault_Handler>:
 80012c4:	b480      	push	{r7}
 80012c6:	af00      	add	r7, sp, #0
 80012c8:	e7fe      	b.n	80012c8 <UsageFault_Handler+0x4>

080012ca <SVC_Handler>:
 80012ca:	b480      	push	{r7}
 80012cc:	af00      	add	r7, sp, #0
 80012ce:	bf00      	nop
 80012d0:	46bd      	mov	sp, r7
 80012d2:	bc80      	pop	{r7}
 80012d4:	4770      	bx	lr

080012d6 <DebugMon_Handler>:
 80012d6:	b480      	push	{r7}
 80012d8:	af00      	add	r7, sp, #0
 80012da:	bf00      	nop
 80012dc:	46bd      	mov	sp, r7
 80012de:	bc80      	pop	{r7}
 80012e0:	4770      	bx	lr

080012e2 <PendSV_Handler>:
 80012e2:	b480      	push	{r7}
 80012e4:	af00      	add	r7, sp, #0
 80012e6:	bf00      	nop
 80012e8:	46bd      	mov	sp, r7
 80012ea:	bc80      	pop	{r7}
 80012ec:	4770      	bx	lr

080012ee <SysTick_Handler>:
 80012ee:	b580      	push	{r7, lr}
 80012f0:	af00      	add	r7, sp, #0
 80012f2:	f000 fa05 	bl	8001700 <HAL_IncTick>
 80012f6:	bf00      	nop
 80012f8:	bd80      	pop	{r7, pc}
	...

080012fc <TIM2_IRQHandler>:
 80012fc:	b580      	push	{r7, lr}
 80012fe:	af00      	add	r7, sp, #0
 8001300:	4802      	ldr	r0, [pc, #8]	; (800130c <TIM2_IRQHandler+0x10>)
 8001302:	f001 fb59 	bl	80029b8 <HAL_TIM_IRQHandler>
 8001306:	bf00      	nop
 8001308:	bd80      	pop	{r7, pc}
 800130a:	bf00      	nop
 800130c:	20000128 	.word	0x20000128

08001310 <TIM3_IRQHandler>:
 8001310:	b580      	push	{r7, lr}
 8001312:	af00      	add	r7, sp, #0
 8001314:	4802      	ldr	r0, [pc, #8]	; (8001320 <TIM3_IRQHandler+0x10>)
 8001316:	f001 fb4f 	bl	80029b8 <HAL_TIM_IRQHandler>
 800131a:	bf00      	nop
 800131c:	bd80      	pop	{r7, pc}
 800131e:	bf00      	nop
 8001320:	20000170 	.word	0x20000170

08001324 <USART2_IRQHandler>:
 8001324:	b580      	push	{r7, lr}
 8001326:	af00      	add	r7, sp, #0
 8001328:	4802      	ldr	r0, [pc, #8]	; (8001334 <USART2_IRQHandler+0x10>)
 800132a:	f002 f9e7 	bl	80036fc <HAL_UART_IRQHandler>
 800132e:	bf00      	nop
 8001330:	bd80      	pop	{r7, pc}
 8001332:	bf00      	nop
 8001334:	200000e4 	.word	0x200000e4

08001338 <_sbrk>:
 8001338:	b580      	push	{r7, lr}
 800133a:	b086      	sub	sp, #24
 800133c:	af00      	add	r7, sp, #0
 800133e:	6078      	str	r0, [r7, #4]
 8001340:	4a14      	ldr	r2, [pc, #80]	; (8001394 <_sbrk+0x5c>)
 8001342:	4b15      	ldr	r3, [pc, #84]	; (8001398 <_sbrk+0x60>)
 8001344:	1ad3      	subs	r3, r2, r3
 8001346:	617b      	str	r3, [r7, #20]
 8001348:	697b      	ldr	r3, [r7, #20]
 800134a:	613b      	str	r3, [r7, #16]
 800134c:	4b13      	ldr	r3, [pc, #76]	; (800139c <_sbrk+0x64>)
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	2b00      	cmp	r3, #0
 8001352:	d102      	bne.n	800135a <_sbrk+0x22>
 8001354:	4b11      	ldr	r3, [pc, #68]	; (800139c <_sbrk+0x64>)
 8001356:	4a12      	ldr	r2, [pc, #72]	; (80013a0 <_sbrk+0x68>)
 8001358:	601a      	str	r2, [r3, #0]
 800135a:	4b10      	ldr	r3, [pc, #64]	; (800139c <_sbrk+0x64>)
 800135c:	681a      	ldr	r2, [r3, #0]
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	4413      	add	r3, r2
 8001362:	693a      	ldr	r2, [r7, #16]
 8001364:	429a      	cmp	r2, r3
 8001366:	d207      	bcs.n	8001378 <_sbrk+0x40>
 8001368:	f002 fdc0 	bl	8003eec <__errno>
 800136c:	4603      	mov	r3, r0
 800136e:	220c      	movs	r2, #12
 8001370:	601a      	str	r2, [r3, #0]
 8001372:	f04f 33ff 	mov.w	r3, #4294967295
 8001376:	e009      	b.n	800138c <_sbrk+0x54>
 8001378:	4b08      	ldr	r3, [pc, #32]	; (800139c <_sbrk+0x64>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	60fb      	str	r3, [r7, #12]
 800137e:	4b07      	ldr	r3, [pc, #28]	; (800139c <_sbrk+0x64>)
 8001380:	681a      	ldr	r2, [r3, #0]
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	4413      	add	r3, r2
 8001386:	4a05      	ldr	r2, [pc, #20]	; (800139c <_sbrk+0x64>)
 8001388:	6013      	str	r3, [r2, #0]
 800138a:	68fb      	ldr	r3, [r7, #12]
 800138c:	4618      	mov	r0, r3
 800138e:	3718      	adds	r7, #24
 8001390:	46bd      	mov	sp, r7
 8001392:	bd80      	pop	{r7, pc}
 8001394:	20005000 	.word	0x20005000
 8001398:	00000400 	.word	0x00000400
 800139c:	200001e0 	.word	0x200001e0
 80013a0:	20000208 	.word	0x20000208

080013a4 <SystemInit>:
 80013a4:	b480      	push	{r7}
 80013a6:	af00      	add	r7, sp, #0
 80013a8:	bf00      	nop
 80013aa:	46bd      	mov	sp, r7
 80013ac:	bc80      	pop	{r7}
 80013ae:	4770      	bx	lr

080013b0 <green_blink>:
//	0	0	off
//	0	1	green
//	1	0	red
//	1	1	yellow
void green_blink()
{
 80013b0:	b580      	push	{r7, lr}
 80013b2:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 80013b4:	4b08      	ldr	r3, [pc, #32]	; (80013d8 <green_blink+0x28>)
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	2b01      	cmp	r3, #1
 80013ba:	d10b      	bne.n	80013d4 <green_blink+0x24>
		setTimer3(BLINK_TIME);
 80013bc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013c0:	f7ff fdc0 	bl	8000f44 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 80013c4:	2108      	movs	r1, #8
 80013c6:	4805      	ldr	r0, [pc, #20]	; (80013dc <green_blink+0x2c>)
 80013c8:	f000 fd27 	bl	8001e1a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 80013cc:	2110      	movs	r1, #16
 80013ce:	4803      	ldr	r0, [pc, #12]	; (80013dc <green_blink+0x2c>)
 80013d0:	f000 fd23 	bl	8001e1a <HAL_GPIO_TogglePin>
	}
}
 80013d4:	bf00      	nop
 80013d6:	bd80      	pop	{r7, pc}
 80013d8:	200001c8 	.word	0x200001c8
 80013dc:	40010c00 	.word	0x40010c00

080013e0 <red_blink>:
void red_blink()
{
 80013e0:	b580      	push	{r7, lr}
 80013e2:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 80013e4:	4b09      	ldr	r3, [pc, #36]	; (800140c <red_blink+0x2c>)
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	2b01      	cmp	r3, #1
 80013ea:	d10c      	bne.n	8001406 <red_blink+0x26>
		setTimer3(BLINK_TIME);
 80013ec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013f0:	f7ff fda8 	bl	8000f44 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 80013f4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80013f8:	4805      	ldr	r0, [pc, #20]	; (8001410 <red_blink+0x30>)
 80013fa:	f000 fd0e 	bl	8001e1a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 80013fe:	2120      	movs	r1, #32
 8001400:	4804      	ldr	r0, [pc, #16]	; (8001414 <red_blink+0x34>)
 8001402:	f000 fd0a 	bl	8001e1a <HAL_GPIO_TogglePin>
	}
}
 8001406:	bf00      	nop
 8001408:	bd80      	pop	{r7, pc}
 800140a:	bf00      	nop
 800140c:	200001c8 	.word	0x200001c8
 8001410:	40010800 	.word	0x40010800
 8001414:	40010c00 	.word	0x40010c00

08001418 <yellow_blink>:

void yellow_blink()
{
 8001418:	b580      	push	{r7, lr}
 800141a:	af00      	add	r7, sp, #0
	if(timer3_flag == 1){
 800141c:	4b0d      	ldr	r3, [pc, #52]	; (8001454 <yellow_blink+0x3c>)
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	2b01      	cmp	r3, #1
 8001422:	d114      	bne.n	800144e <yellow_blink+0x36>
		setTimer3(BLINK_TIME);
 8001424:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001428:	f7ff fd8c 	bl	8000f44 <setTimer3>
		HAL_GPIO_TogglePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin);
 800142c:	2108      	movs	r1, #8
 800142e:	480a      	ldr	r0, [pc, #40]	; (8001458 <yellow_blink+0x40>)
 8001430:	f000 fcf3 	bl	8001e1a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin);
 8001434:	2110      	movs	r1, #16
 8001436:	4808      	ldr	r0, [pc, #32]	; (8001458 <yellow_blink+0x40>)
 8001438:	f000 fcef 	bl	8001e1a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin);
 800143c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001440:	4806      	ldr	r0, [pc, #24]	; (800145c <yellow_blink+0x44>)
 8001442:	f000 fcea 	bl	8001e1a <HAL_GPIO_TogglePin>
		HAL_GPIO_TogglePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin);
 8001446:	2120      	movs	r1, #32
 8001448:	4803      	ldr	r0, [pc, #12]	; (8001458 <yellow_blink+0x40>)
 800144a:	f000 fce6 	bl	8001e1a <HAL_GPIO_TogglePin>
	}
}
 800144e:	bf00      	nop
 8001450:	bd80      	pop	{r7, pc}
 8001452:	bf00      	nop
 8001454:	200001c8 	.word	0x200001c8
 8001458:	40010c00 	.word	0x40010c00
 800145c:	40010800 	.word	0x40010800

08001460 <red1_on>:

//turn the led corresponding to this road on
void red1_on()
{
 8001460:	b580      	push	{r7, lr}
 8001462:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 8001464:	2201      	movs	r2, #1
 8001466:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800146a:	4805      	ldr	r0, [pc, #20]	; (8001480 <red1_on+0x20>)
 800146c:	f000 fcbd 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 8001470:	2200      	movs	r2, #0
 8001472:	2108      	movs	r1, #8
 8001474:	4803      	ldr	r0, [pc, #12]	; (8001484 <red1_on+0x24>)
 8001476:	f000 fcb8 	bl	8001dea <HAL_GPIO_WritePin>
}
 800147a:	bf00      	nop
 800147c:	bd80      	pop	{r7, pc}
 800147e:	bf00      	nop
 8001480:	40010800 	.word	0x40010800
 8001484:	40010c00 	.word	0x40010c00

08001488 <red2_on>:
void red2_on()
{
 8001488:	b580      	push	{r7, lr}
 800148a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 800148c:	2201      	movs	r2, #1
 800148e:	2120      	movs	r1, #32
 8001490:	4804      	ldr	r0, [pc, #16]	; (80014a4 <red2_on+0x1c>)
 8001492:	f000 fcaa 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 8001496:	2200      	movs	r2, #0
 8001498:	2110      	movs	r1, #16
 800149a:	4802      	ldr	r0, [pc, #8]	; (80014a4 <red2_on+0x1c>)
 800149c:	f000 fca5 	bl	8001dea <HAL_GPIO_WritePin>
}
 80014a0:	bf00      	nop
 80014a2:	bd80      	pop	{r7, pc}
 80014a4:	40010c00 	.word	0x40010c00

080014a8 <green1_on>:
void green1_on()
{
 80014a8:	b580      	push	{r7, lr}
 80014aa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 80014ac:	2200      	movs	r2, #0
 80014ae:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80014b2:	4805      	ldr	r0, [pc, #20]	; (80014c8 <green1_on+0x20>)
 80014b4:	f000 fc99 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 80014b8:	2201      	movs	r2, #1
 80014ba:	2108      	movs	r1, #8
 80014bc:	4803      	ldr	r0, [pc, #12]	; (80014cc <green1_on+0x24>)
 80014be:	f000 fc94 	bl	8001dea <HAL_GPIO_WritePin>
}
 80014c2:	bf00      	nop
 80014c4:	bd80      	pop	{r7, pc}
 80014c6:	bf00      	nop
 80014c8:	40010800 	.word	0x40010800
 80014cc:	40010c00 	.word	0x40010c00

080014d0 <green2_on>:
void green2_on()
{
 80014d0:	b580      	push	{r7, lr}
 80014d2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 80014d4:	2200      	movs	r2, #0
 80014d6:	2120      	movs	r1, #32
 80014d8:	4804      	ldr	r0, [pc, #16]	; (80014ec <green2_on+0x1c>)
 80014da:	f000 fc86 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 80014de:	2201      	movs	r2, #1
 80014e0:	2110      	movs	r1, #16
 80014e2:	4802      	ldr	r0, [pc, #8]	; (80014ec <green2_on+0x1c>)
 80014e4:	f000 fc81 	bl	8001dea <HAL_GPIO_WritePin>
}
 80014e8:	bf00      	nop
 80014ea:	bd80      	pop	{r7, pc}
 80014ec:	40010c00 	.word	0x40010c00

080014f0 <yellow1_on>:
void yellow1_on()
{
 80014f0:	b580      	push	{r7, lr}
 80014f2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, SET);
 80014f4:	2201      	movs	r2, #1
 80014f6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80014fa:	4805      	ldr	r0, [pc, #20]	; (8001510 <yellow1_on+0x20>)
 80014fc:	f000 fc75 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, SET);
 8001500:	2201      	movs	r2, #1
 8001502:	2108      	movs	r1, #8
 8001504:	4803      	ldr	r0, [pc, #12]	; (8001514 <yellow1_on+0x24>)
 8001506:	f000 fc70 	bl	8001dea <HAL_GPIO_WritePin>
}
 800150a:	bf00      	nop
 800150c:	bd80      	pop	{r7, pc}
 800150e:	bf00      	nop
 8001510:	40010800 	.word	0x40010800
 8001514:	40010c00 	.word	0x40010c00

08001518 <yellow2_on>:
void yellow2_on()
{
 8001518:	b580      	push	{r7, lr}
 800151a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, SET);
 800151c:	2201      	movs	r2, #1
 800151e:	2120      	movs	r1, #32
 8001520:	4804      	ldr	r0, [pc, #16]	; (8001534 <yellow2_on+0x1c>)
 8001522:	f000 fc62 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, SET);
 8001526:	2201      	movs	r2, #1
 8001528:	2110      	movs	r1, #16
 800152a:	4802      	ldr	r0, [pc, #8]	; (8001534 <yellow2_on+0x1c>)
 800152c:	f000 fc5d 	bl	8001dea <HAL_GPIO_WritePin>
}
 8001530:	bf00      	nop
 8001532:	bd80      	pop	{r7, pc}
 8001534:	40010c00 	.word	0x40010c00

08001538 <red_pedes_on>:

// Add task for pedestrian light (synchronized with Light_1)
void red_pedes_on()
{
 8001538:	b580      	push	{r7, lr}
 800153a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, SET);
 800153c:	2201      	movs	r2, #1
 800153e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001542:	4805      	ldr	r0, [pc, #20]	; (8001558 <red_pedes_on+0x20>)
 8001544:	f000 fc51 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, RESET);
 8001548:	2200      	movs	r2, #0
 800154a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800154e:	4803      	ldr	r0, [pc, #12]	; (800155c <red_pedes_on+0x24>)
 8001550:	f000 fc4b 	bl	8001dea <HAL_GPIO_WritePin>
}
 8001554:	bf00      	nop
 8001556:	bd80      	pop	{r7, pc}
 8001558:	40010c00 	.word	0x40010c00
 800155c:	40010800 	.word	0x40010800

08001560 <green_pedes_on>:

void green_pedes_on()
{
 8001560:	b580      	push	{r7, lr}
 8001562:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, RESET);
 8001564:	2200      	movs	r2, #0
 8001566:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800156a:	4805      	ldr	r0, [pc, #20]	; (8001580 <green_pedes_on+0x20>)
 800156c:	f000 fc3d 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, SET);
 8001570:	2201      	movs	r2, #1
 8001572:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001576:	4803      	ldr	r0, [pc, #12]	; (8001584 <green_pedes_on+0x24>)
 8001578:	f000 fc37 	bl	8001dea <HAL_GPIO_WritePin>
}
 800157c:	bf00      	nop
 800157e:	bd80      	pop	{r7, pc}
 8001580:	40010c00 	.word	0x40010c00
 8001584:	40010800 	.word	0x40010800

08001588 <turn_pedes_off>:

void turn_pedes_off()
{
 8001588:	b580      	push	{r7, lr}
 800158a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(PEDE_LIGHT_A_GPIO_Port, PEDE_LIGHT_A_Pin, RESET);
 800158c:	2200      	movs	r2, #0
 800158e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001592:	4805      	ldr	r0, [pc, #20]	; (80015a8 <turn_pedes_off+0x20>)
 8001594:	f000 fc29 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(PEDE_LIGHT_B_GPIO_Port, PEDE_LIGHT_B_Pin, RESET);
 8001598:	2200      	movs	r2, #0
 800159a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800159e:	4803      	ldr	r0, [pc, #12]	; (80015ac <turn_pedes_off+0x24>)
 80015a0:	f000 fc23 	bl	8001dea <HAL_GPIO_WritePin>
}
 80015a4:	bf00      	nop
 80015a6:	bd80      	pop	{r7, pc}
 80015a8:	40010c00 	.word	0x40010c00
 80015ac:	40010800 	.word	0x40010800

080015b0 <turn_all_led_off>:


//this function is used when error detected
void turn_all_led_off()
{
 80015b0:	b580      	push	{r7, lr}
 80015b2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LIGHT1_A_GPIO_Port, LIGHT1_A_Pin, RESET);
 80015b4:	2200      	movs	r2, #0
 80015b6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80015ba:	480a      	ldr	r0, [pc, #40]	; (80015e4 <turn_all_led_off+0x34>)
 80015bc:	f000 fc15 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT1_B_GPIO_Port, LIGHT1_B_Pin, RESET);
 80015c0:	2200      	movs	r2, #0
 80015c2:	2108      	movs	r1, #8
 80015c4:	4808      	ldr	r0, [pc, #32]	; (80015e8 <turn_all_led_off+0x38>)
 80015c6:	f000 fc10 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_A_GPIO_Port, LIGHT2_A_Pin, RESET);
 80015ca:	2200      	movs	r2, #0
 80015cc:	2120      	movs	r1, #32
 80015ce:	4806      	ldr	r0, [pc, #24]	; (80015e8 <turn_all_led_off+0x38>)
 80015d0:	f000 fc0b 	bl	8001dea <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LIGHT2_B_GPIO_Port, LIGHT2_B_Pin, RESET);
 80015d4:	2200      	movs	r2, #0
 80015d6:	2110      	movs	r1, #16
 80015d8:	4803      	ldr	r0, [pc, #12]	; (80015e8 <turn_all_led_off+0x38>)
 80015da:	f000 fc06 	bl	8001dea <HAL_GPIO_WritePin>
}
 80015de:	bf00      	nop
 80015e0:	bd80      	pop	{r7, pc}
 80015e2:	bf00      	nop
 80015e4:	40010800 	.word	0x40010800
 80015e8:	40010c00 	.word	0x40010c00

080015ec <UART_Parse>:

// Add task for UART
char str[15];		//buffer store data to send
void UART_Parse()
{
 80015ec:	b580      	push	{r7, lr}
 80015ee:	af00      	add	r7, sp, #0
	sprintf(str, "!7SEG:%lu#\r\n", SEG_counter);
 80015f0:	4b09      	ldr	r3, [pc, #36]	; (8001618 <UART_Parse+0x2c>)
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	461a      	mov	r2, r3
 80015f6:	4909      	ldr	r1, [pc, #36]	; (800161c <UART_Parse+0x30>)
 80015f8:	4809      	ldr	r0, [pc, #36]	; (8001620 <UART_Parse+0x34>)
 80015fa:	f002 fca9 	bl	8003f50 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)str, strlen(str), 2000);
 80015fe:	4808      	ldr	r0, [pc, #32]	; (8001620 <UART_Parse+0x34>)
 8001600:	f7fe fda4 	bl	800014c <strlen>
 8001604:	4603      	mov	r3, r0
 8001606:	b29a      	uxth	r2, r3
 8001608:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 800160c:	4904      	ldr	r1, [pc, #16]	; (8001620 <UART_Parse+0x34>)
 800160e:	4805      	ldr	r0, [pc, #20]	; (8001624 <UART_Parse+0x38>)
 8001610:	f001 ffe1 	bl	80035d6 <HAL_UART_Transmit>
}
 8001614:	bf00      	nop
 8001616:	bd80      	pop	{r7, pc}
 8001618:	200000dc 	.word	0x200000dc
 800161c:	0800485c 	.word	0x0800485c
 8001620:	200001e4 	.word	0x200001e4
 8001624:	200000e4 	.word	0x200000e4

08001628 <Reset_Handler>:
 8001628:	480c      	ldr	r0, [pc, #48]	; (800165c <LoopFillZerobss+0x12>)
 800162a:	490d      	ldr	r1, [pc, #52]	; (8001660 <LoopFillZerobss+0x16>)
 800162c:	4a0d      	ldr	r2, [pc, #52]	; (8001664 <LoopFillZerobss+0x1a>)
 800162e:	2300      	movs	r3, #0
 8001630:	e002      	b.n	8001638 <LoopCopyDataInit>

08001632 <CopyDataInit>:
 8001632:	58d4      	ldr	r4, [r2, r3]
 8001634:	50c4      	str	r4, [r0, r3]
 8001636:	3304      	adds	r3, #4

08001638 <LoopCopyDataInit>:
 8001638:	18c4      	adds	r4, r0, r3
 800163a:	428c      	cmp	r4, r1
 800163c:	d3f9      	bcc.n	8001632 <CopyDataInit>
 800163e:	4a0a      	ldr	r2, [pc, #40]	; (8001668 <LoopFillZerobss+0x1e>)
 8001640:	4c0a      	ldr	r4, [pc, #40]	; (800166c <LoopFillZerobss+0x22>)
 8001642:	2300      	movs	r3, #0
 8001644:	e001      	b.n	800164a <LoopFillZerobss>

08001646 <FillZerobss>:
 8001646:	6013      	str	r3, [r2, #0]
 8001648:	3204      	adds	r2, #4

0800164a <LoopFillZerobss>:
 800164a:	42a2      	cmp	r2, r4
 800164c:	d3fb      	bcc.n	8001646 <FillZerobss>
 800164e:	f7ff fea9 	bl	80013a4 <SystemInit>
 8001652:	f002 fc51 	bl	8003ef8 <__libc_init_array>
 8001656:	f7ff fa85 	bl	8000b64 <main>
 800165a:	4770      	bx	lr
 800165c:	20000000 	.word	0x20000000
 8001660:	20000094 	.word	0x20000094
 8001664:	080048d0 	.word	0x080048d0
 8001668:	20000094 	.word	0x20000094
 800166c:	20000208 	.word	0x20000208

08001670 <ADC1_2_IRQHandler>:
 8001670:	e7fe      	b.n	8001670 <ADC1_2_IRQHandler>
	...

08001674 <HAL_Init>:
 8001674:	b580      	push	{r7, lr}
 8001676:	af00      	add	r7, sp, #0
 8001678:	4b08      	ldr	r3, [pc, #32]	; (800169c <HAL_Init+0x28>)
 800167a:	681b      	ldr	r3, [r3, #0]
 800167c:	4a07      	ldr	r2, [pc, #28]	; (800169c <HAL_Init+0x28>)
 800167e:	f043 0310 	orr.w	r3, r3, #16
 8001682:	6013      	str	r3, [r2, #0]
 8001684:	2003      	movs	r0, #3
 8001686:	f000 f923 	bl	80018d0 <HAL_NVIC_SetPriorityGrouping>
 800168a:	200f      	movs	r0, #15
 800168c:	f000 f808 	bl	80016a0 <HAL_InitTick>
 8001690:	f7ff fd16 	bl	80010c0 <HAL_MspInit>
 8001694:	2300      	movs	r3, #0
 8001696:	4618      	mov	r0, r3
 8001698:	bd80      	pop	{r7, pc}
 800169a:	bf00      	nop
 800169c:	40022000 	.word	0x40022000

080016a0 <HAL_InitTick>:
 80016a0:	b580      	push	{r7, lr}
 80016a2:	b082      	sub	sp, #8
 80016a4:	af00      	add	r7, sp, #0
 80016a6:	6078      	str	r0, [r7, #4]
 80016a8:	4b12      	ldr	r3, [pc, #72]	; (80016f4 <HAL_InitTick+0x54>)
 80016aa:	681a      	ldr	r2, [r3, #0]
 80016ac:	4b12      	ldr	r3, [pc, #72]	; (80016f8 <HAL_InitTick+0x58>)
 80016ae:	781b      	ldrb	r3, [r3, #0]
 80016b0:	4619      	mov	r1, r3
 80016b2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016b6:	fbb3 f3f1 	udiv	r3, r3, r1
 80016ba:	fbb2 f3f3 	udiv	r3, r2, r3
 80016be:	4618      	mov	r0, r3
 80016c0:	f000 f93b 	bl	800193a <HAL_SYSTICK_Config>
 80016c4:	4603      	mov	r3, r0
 80016c6:	2b00      	cmp	r3, #0
 80016c8:	d001      	beq.n	80016ce <HAL_InitTick+0x2e>
 80016ca:	2301      	movs	r3, #1
 80016cc:	e00e      	b.n	80016ec <HAL_InitTick+0x4c>
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	2b0f      	cmp	r3, #15
 80016d2:	d80a      	bhi.n	80016ea <HAL_InitTick+0x4a>
 80016d4:	2200      	movs	r2, #0
 80016d6:	6879      	ldr	r1, [r7, #4]
 80016d8:	f04f 30ff 	mov.w	r0, #4294967295
 80016dc:	f000 f903 	bl	80018e6 <HAL_NVIC_SetPriority>
 80016e0:	4a06      	ldr	r2, [pc, #24]	; (80016fc <HAL_InitTick+0x5c>)
 80016e2:	687b      	ldr	r3, [r7, #4]
 80016e4:	6013      	str	r3, [r2, #0]
 80016e6:	2300      	movs	r3, #0
 80016e8:	e000      	b.n	80016ec <HAL_InitTick+0x4c>
 80016ea:	2301      	movs	r3, #1
 80016ec:	4618      	mov	r0, r3
 80016ee:	3708      	adds	r7, #8
 80016f0:	46bd      	mov	sp, r7
 80016f2:	bd80      	pop	{r7, pc}
 80016f4:	20000024 	.word	0x20000024
 80016f8:	2000002c 	.word	0x2000002c
 80016fc:	20000028 	.word	0x20000028

08001700 <HAL_IncTick>:
 8001700:	b480      	push	{r7}
 8001702:	af00      	add	r7, sp, #0
 8001704:	4b05      	ldr	r3, [pc, #20]	; (800171c <HAL_IncTick+0x1c>)
 8001706:	781b      	ldrb	r3, [r3, #0]
 8001708:	461a      	mov	r2, r3
 800170a:	4b05      	ldr	r3, [pc, #20]	; (8001720 <HAL_IncTick+0x20>)
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	4413      	add	r3, r2
 8001710:	4a03      	ldr	r2, [pc, #12]	; (8001720 <HAL_IncTick+0x20>)
 8001712:	6013      	str	r3, [r2, #0]
 8001714:	bf00      	nop
 8001716:	46bd      	mov	sp, r7
 8001718:	bc80      	pop	{r7}
 800171a:	4770      	bx	lr
 800171c:	2000002c 	.word	0x2000002c
 8001720:	200001f4 	.word	0x200001f4

08001724 <HAL_GetTick>:
 8001724:	b480      	push	{r7}
 8001726:	af00      	add	r7, sp, #0
 8001728:	4b02      	ldr	r3, [pc, #8]	; (8001734 <HAL_GetTick+0x10>)
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	4618      	mov	r0, r3
 800172e:	46bd      	mov	sp, r7
 8001730:	bc80      	pop	{r7}
 8001732:	4770      	bx	lr
 8001734:	200001f4 	.word	0x200001f4

08001738 <__NVIC_SetPriorityGrouping>:
 8001738:	b480      	push	{r7}
 800173a:	b085      	sub	sp, #20
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	687b      	ldr	r3, [r7, #4]
 8001742:	f003 0307 	and.w	r3, r3, #7
 8001746:	60fb      	str	r3, [r7, #12]
 8001748:	4b0c      	ldr	r3, [pc, #48]	; (800177c <__NVIC_SetPriorityGrouping+0x44>)
 800174a:	68db      	ldr	r3, [r3, #12]
 800174c:	60bb      	str	r3, [r7, #8]
 800174e:	68ba      	ldr	r2, [r7, #8]
 8001750:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001754:	4013      	ands	r3, r2
 8001756:	60bb      	str	r3, [r7, #8]
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	021a      	lsls	r2, r3, #8
 800175c:	68bb      	ldr	r3, [r7, #8]
 800175e:	4313      	orrs	r3, r2
 8001760:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001764:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001768:	60bb      	str	r3, [r7, #8]
 800176a:	4a04      	ldr	r2, [pc, #16]	; (800177c <__NVIC_SetPriorityGrouping+0x44>)
 800176c:	68bb      	ldr	r3, [r7, #8]
 800176e:	60d3      	str	r3, [r2, #12]
 8001770:	bf00      	nop
 8001772:	3714      	adds	r7, #20
 8001774:	46bd      	mov	sp, r7
 8001776:	bc80      	pop	{r7}
 8001778:	4770      	bx	lr
 800177a:	bf00      	nop
 800177c:	e000ed00 	.word	0xe000ed00

08001780 <__NVIC_GetPriorityGrouping>:
 8001780:	b480      	push	{r7}
 8001782:	af00      	add	r7, sp, #0
 8001784:	4b04      	ldr	r3, [pc, #16]	; (8001798 <__NVIC_GetPriorityGrouping+0x18>)
 8001786:	68db      	ldr	r3, [r3, #12]
 8001788:	0a1b      	lsrs	r3, r3, #8
 800178a:	f003 0307 	and.w	r3, r3, #7
 800178e:	4618      	mov	r0, r3
 8001790:	46bd      	mov	sp, r7
 8001792:	bc80      	pop	{r7}
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop
 8001798:	e000ed00 	.word	0xe000ed00

0800179c <__NVIC_EnableIRQ>:
 800179c:	b480      	push	{r7}
 800179e:	b083      	sub	sp, #12
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	4603      	mov	r3, r0
 80017a4:	71fb      	strb	r3, [r7, #7]
 80017a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017aa:	2b00      	cmp	r3, #0
 80017ac:	db0b      	blt.n	80017c6 <__NVIC_EnableIRQ+0x2a>
 80017ae:	79fb      	ldrb	r3, [r7, #7]
 80017b0:	f003 021f 	and.w	r2, r3, #31
 80017b4:	4906      	ldr	r1, [pc, #24]	; (80017d0 <__NVIC_EnableIRQ+0x34>)
 80017b6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017ba:	095b      	lsrs	r3, r3, #5
 80017bc:	2001      	movs	r0, #1
 80017be:	fa00 f202 	lsl.w	r2, r0, r2
 80017c2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80017c6:	bf00      	nop
 80017c8:	370c      	adds	r7, #12
 80017ca:	46bd      	mov	sp, r7
 80017cc:	bc80      	pop	{r7}
 80017ce:	4770      	bx	lr
 80017d0:	e000e100 	.word	0xe000e100

080017d4 <__NVIC_SetPriority>:
 80017d4:	b480      	push	{r7}
 80017d6:	b083      	sub	sp, #12
 80017d8:	af00      	add	r7, sp, #0
 80017da:	4603      	mov	r3, r0
 80017dc:	6039      	str	r1, [r7, #0]
 80017de:	71fb      	strb	r3, [r7, #7]
 80017e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017e4:	2b00      	cmp	r3, #0
 80017e6:	db0a      	blt.n	80017fe <__NVIC_SetPriority+0x2a>
 80017e8:	683b      	ldr	r3, [r7, #0]
 80017ea:	b2da      	uxtb	r2, r3
 80017ec:	490c      	ldr	r1, [pc, #48]	; (8001820 <__NVIC_SetPriority+0x4c>)
 80017ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80017f2:	0112      	lsls	r2, r2, #4
 80017f4:	b2d2      	uxtb	r2, r2
 80017f6:	440b      	add	r3, r1
 80017f8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80017fc:	e00a      	b.n	8001814 <__NVIC_SetPriority+0x40>
 80017fe:	683b      	ldr	r3, [r7, #0]
 8001800:	b2da      	uxtb	r2, r3
 8001802:	4908      	ldr	r1, [pc, #32]	; (8001824 <__NVIC_SetPriority+0x50>)
 8001804:	79fb      	ldrb	r3, [r7, #7]
 8001806:	f003 030f 	and.w	r3, r3, #15
 800180a:	3b04      	subs	r3, #4
 800180c:	0112      	lsls	r2, r2, #4
 800180e:	b2d2      	uxtb	r2, r2
 8001810:	440b      	add	r3, r1
 8001812:	761a      	strb	r2, [r3, #24]
 8001814:	bf00      	nop
 8001816:	370c      	adds	r7, #12
 8001818:	46bd      	mov	sp, r7
 800181a:	bc80      	pop	{r7}
 800181c:	4770      	bx	lr
 800181e:	bf00      	nop
 8001820:	e000e100 	.word	0xe000e100
 8001824:	e000ed00 	.word	0xe000ed00

08001828 <NVIC_EncodePriority>:
 8001828:	b480      	push	{r7}
 800182a:	b089      	sub	sp, #36	; 0x24
 800182c:	af00      	add	r7, sp, #0
 800182e:	60f8      	str	r0, [r7, #12]
 8001830:	60b9      	str	r1, [r7, #8]
 8001832:	607a      	str	r2, [r7, #4]
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	f003 0307 	and.w	r3, r3, #7
 800183a:	61fb      	str	r3, [r7, #28]
 800183c:	69fb      	ldr	r3, [r7, #28]
 800183e:	f1c3 0307 	rsb	r3, r3, #7
 8001842:	2b04      	cmp	r3, #4
 8001844:	bf28      	it	cs
 8001846:	2304      	movcs	r3, #4
 8001848:	61bb      	str	r3, [r7, #24]
 800184a:	69fb      	ldr	r3, [r7, #28]
 800184c:	3304      	adds	r3, #4
 800184e:	2b06      	cmp	r3, #6
 8001850:	d902      	bls.n	8001858 <NVIC_EncodePriority+0x30>
 8001852:	69fb      	ldr	r3, [r7, #28]
 8001854:	3b03      	subs	r3, #3
 8001856:	e000      	b.n	800185a <NVIC_EncodePriority+0x32>
 8001858:	2300      	movs	r3, #0
 800185a:	617b      	str	r3, [r7, #20]
 800185c:	f04f 32ff 	mov.w	r2, #4294967295
 8001860:	69bb      	ldr	r3, [r7, #24]
 8001862:	fa02 f303 	lsl.w	r3, r2, r3
 8001866:	43da      	mvns	r2, r3
 8001868:	68bb      	ldr	r3, [r7, #8]
 800186a:	401a      	ands	r2, r3
 800186c:	697b      	ldr	r3, [r7, #20]
 800186e:	409a      	lsls	r2, r3
 8001870:	f04f 31ff 	mov.w	r1, #4294967295
 8001874:	697b      	ldr	r3, [r7, #20]
 8001876:	fa01 f303 	lsl.w	r3, r1, r3
 800187a:	43d9      	mvns	r1, r3
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	400b      	ands	r3, r1
 8001880:	4313      	orrs	r3, r2
 8001882:	4618      	mov	r0, r3
 8001884:	3724      	adds	r7, #36	; 0x24
 8001886:	46bd      	mov	sp, r7
 8001888:	bc80      	pop	{r7}
 800188a:	4770      	bx	lr

0800188c <SysTick_Config>:
 800188c:	b580      	push	{r7, lr}
 800188e:	b082      	sub	sp, #8
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	3b01      	subs	r3, #1
 8001898:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800189c:	d301      	bcc.n	80018a2 <SysTick_Config+0x16>
 800189e:	2301      	movs	r3, #1
 80018a0:	e00f      	b.n	80018c2 <SysTick_Config+0x36>
 80018a2:	4a0a      	ldr	r2, [pc, #40]	; (80018cc <SysTick_Config+0x40>)
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	3b01      	subs	r3, #1
 80018a8:	6053      	str	r3, [r2, #4]
 80018aa:	210f      	movs	r1, #15
 80018ac:	f04f 30ff 	mov.w	r0, #4294967295
 80018b0:	f7ff ff90 	bl	80017d4 <__NVIC_SetPriority>
 80018b4:	4b05      	ldr	r3, [pc, #20]	; (80018cc <SysTick_Config+0x40>)
 80018b6:	2200      	movs	r2, #0
 80018b8:	609a      	str	r2, [r3, #8]
 80018ba:	4b04      	ldr	r3, [pc, #16]	; (80018cc <SysTick_Config+0x40>)
 80018bc:	2207      	movs	r2, #7
 80018be:	601a      	str	r2, [r3, #0]
 80018c0:	2300      	movs	r3, #0
 80018c2:	4618      	mov	r0, r3
 80018c4:	3708      	adds	r7, #8
 80018c6:	46bd      	mov	sp, r7
 80018c8:	bd80      	pop	{r7, pc}
 80018ca:	bf00      	nop
 80018cc:	e000e010 	.word	0xe000e010

080018d0 <HAL_NVIC_SetPriorityGrouping>:
 80018d0:	b580      	push	{r7, lr}
 80018d2:	b082      	sub	sp, #8
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	6078      	str	r0, [r7, #4]
 80018d8:	6878      	ldr	r0, [r7, #4]
 80018da:	f7ff ff2d 	bl	8001738 <__NVIC_SetPriorityGrouping>
 80018de:	bf00      	nop
 80018e0:	3708      	adds	r7, #8
 80018e2:	46bd      	mov	sp, r7
 80018e4:	bd80      	pop	{r7, pc}

080018e6 <HAL_NVIC_SetPriority>:
 80018e6:	b580      	push	{r7, lr}
 80018e8:	b086      	sub	sp, #24
 80018ea:	af00      	add	r7, sp, #0
 80018ec:	4603      	mov	r3, r0
 80018ee:	60b9      	str	r1, [r7, #8]
 80018f0:	607a      	str	r2, [r7, #4]
 80018f2:	73fb      	strb	r3, [r7, #15]
 80018f4:	2300      	movs	r3, #0
 80018f6:	617b      	str	r3, [r7, #20]
 80018f8:	f7ff ff42 	bl	8001780 <__NVIC_GetPriorityGrouping>
 80018fc:	6178      	str	r0, [r7, #20]
 80018fe:	687a      	ldr	r2, [r7, #4]
 8001900:	68b9      	ldr	r1, [r7, #8]
 8001902:	6978      	ldr	r0, [r7, #20]
 8001904:	f7ff ff90 	bl	8001828 <NVIC_EncodePriority>
 8001908:	4602      	mov	r2, r0
 800190a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800190e:	4611      	mov	r1, r2
 8001910:	4618      	mov	r0, r3
 8001912:	f7ff ff5f 	bl	80017d4 <__NVIC_SetPriority>
 8001916:	bf00      	nop
 8001918:	3718      	adds	r7, #24
 800191a:	46bd      	mov	sp, r7
 800191c:	bd80      	pop	{r7, pc}

0800191e <HAL_NVIC_EnableIRQ>:
 800191e:	b580      	push	{r7, lr}
 8001920:	b082      	sub	sp, #8
 8001922:	af00      	add	r7, sp, #0
 8001924:	4603      	mov	r3, r0
 8001926:	71fb      	strb	r3, [r7, #7]
 8001928:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800192c:	4618      	mov	r0, r3
 800192e:	f7ff ff35 	bl	800179c <__NVIC_EnableIRQ>
 8001932:	bf00      	nop
 8001934:	3708      	adds	r7, #8
 8001936:	46bd      	mov	sp, r7
 8001938:	bd80      	pop	{r7, pc}

0800193a <HAL_SYSTICK_Config>:
 800193a:	b580      	push	{r7, lr}
 800193c:	b082      	sub	sp, #8
 800193e:	af00      	add	r7, sp, #0
 8001940:	6078      	str	r0, [r7, #4]
 8001942:	6878      	ldr	r0, [r7, #4]
 8001944:	f7ff ffa2 	bl	800188c <SysTick_Config>
 8001948:	4603      	mov	r3, r0
 800194a:	4618      	mov	r0, r3
 800194c:	3708      	adds	r7, #8
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}

08001952 <HAL_DMA_Abort>:
 8001952:	b480      	push	{r7}
 8001954:	b085      	sub	sp, #20
 8001956:	af00      	add	r7, sp, #0
 8001958:	6078      	str	r0, [r7, #4]
 800195a:	2300      	movs	r3, #0
 800195c:	73fb      	strb	r3, [r7, #15]
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 8001964:	2b02      	cmp	r3, #2
 8001966:	d008      	beq.n	800197a <HAL_DMA_Abort+0x28>
 8001968:	687b      	ldr	r3, [r7, #4]
 800196a:	2204      	movs	r2, #4
 800196c:	639a      	str	r2, [r3, #56]	; 0x38
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2200      	movs	r2, #0
 8001972:	f883 2020 	strb.w	r2, [r3, #32]
 8001976:	2301      	movs	r3, #1
 8001978:	e020      	b.n	80019bc <HAL_DMA_Abort+0x6a>
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	681a      	ldr	r2, [r3, #0]
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	f022 020e 	bic.w	r2, r2, #14
 8001988:	601a      	str	r2, [r3, #0]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	681b      	ldr	r3, [r3, #0]
 800198e:	681a      	ldr	r2, [r3, #0]
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f022 0201 	bic.w	r2, r2, #1
 8001998:	601a      	str	r2, [r3, #0]
 800199a:	687b      	ldr	r3, [r7, #4]
 800199c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80019a2:	2101      	movs	r1, #1
 80019a4:	fa01 f202 	lsl.w	r2, r1, r2
 80019a8:	605a      	str	r2, [r3, #4]
 80019aa:	687b      	ldr	r3, [r7, #4]
 80019ac:	2201      	movs	r2, #1
 80019ae:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	2200      	movs	r2, #0
 80019b6:	f883 2020 	strb.w	r2, [r3, #32]
 80019ba:	7bfb      	ldrb	r3, [r7, #15]
 80019bc:	4618      	mov	r0, r3
 80019be:	3714      	adds	r7, #20
 80019c0:	46bd      	mov	sp, r7
 80019c2:	bc80      	pop	{r7}
 80019c4:	4770      	bx	lr
	...

080019c8 <HAL_DMA_Abort_IT>:
 80019c8:	b580      	push	{r7, lr}
 80019ca:	b084      	sub	sp, #16
 80019cc:	af00      	add	r7, sp, #0
 80019ce:	6078      	str	r0, [r7, #4]
 80019d0:	2300      	movs	r3, #0
 80019d2:	73fb      	strb	r3, [r7, #15]
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80019da:	2b02      	cmp	r3, #2
 80019dc:	d005      	beq.n	80019ea <HAL_DMA_Abort_IT+0x22>
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	2204      	movs	r2, #4
 80019e2:	639a      	str	r2, [r3, #56]	; 0x38
 80019e4:	2301      	movs	r3, #1
 80019e6:	73fb      	strb	r3, [r7, #15]
 80019e8:	e051      	b.n	8001a8e <HAL_DMA_Abort_IT+0xc6>
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	681a      	ldr	r2, [r3, #0]
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	f022 020e 	bic.w	r2, r2, #14
 80019f8:	601a      	str	r2, [r3, #0]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	681a      	ldr	r2, [r3, #0]
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	f022 0201 	bic.w	r2, r2, #1
 8001a08:	601a      	str	r2, [r3, #0]
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	4a22      	ldr	r2, [pc, #136]	; (8001a98 <HAL_DMA_Abort_IT+0xd0>)
 8001a10:	4293      	cmp	r3, r2
 8001a12:	d029      	beq.n	8001a68 <HAL_DMA_Abort_IT+0xa0>
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	4a20      	ldr	r2, [pc, #128]	; (8001a9c <HAL_DMA_Abort_IT+0xd4>)
 8001a1a:	4293      	cmp	r3, r2
 8001a1c:	d022      	beq.n	8001a64 <HAL_DMA_Abort_IT+0x9c>
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	4a1f      	ldr	r2, [pc, #124]	; (8001aa0 <HAL_DMA_Abort_IT+0xd8>)
 8001a24:	4293      	cmp	r3, r2
 8001a26:	d01a      	beq.n	8001a5e <HAL_DMA_Abort_IT+0x96>
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	4a1d      	ldr	r2, [pc, #116]	; (8001aa4 <HAL_DMA_Abort_IT+0xdc>)
 8001a2e:	4293      	cmp	r3, r2
 8001a30:	d012      	beq.n	8001a58 <HAL_DMA_Abort_IT+0x90>
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	4a1c      	ldr	r2, [pc, #112]	; (8001aa8 <HAL_DMA_Abort_IT+0xe0>)
 8001a38:	4293      	cmp	r3, r2
 8001a3a:	d00a      	beq.n	8001a52 <HAL_DMA_Abort_IT+0x8a>
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	4a1a      	ldr	r2, [pc, #104]	; (8001aac <HAL_DMA_Abort_IT+0xe4>)
 8001a42:	4293      	cmp	r3, r2
 8001a44:	d102      	bne.n	8001a4c <HAL_DMA_Abort_IT+0x84>
 8001a46:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001a4a:	e00e      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a4c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001a50:	e00b      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a52:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001a56:	e008      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001a5c:	e005      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a5e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001a62:	e002      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a64:	2310      	movs	r3, #16
 8001a66:	e000      	b.n	8001a6a <HAL_DMA_Abort_IT+0xa2>
 8001a68:	2301      	movs	r3, #1
 8001a6a:	4a11      	ldr	r2, [pc, #68]	; (8001ab0 <HAL_DMA_Abort_IT+0xe8>)
 8001a6c:	6053      	str	r3, [r2, #4]
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	2201      	movs	r2, #1
 8001a72:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	2200      	movs	r2, #0
 8001a7a:	f883 2020 	strb.w	r2, [r3, #32]
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001a82:	2b00      	cmp	r3, #0
 8001a84:	d003      	beq.n	8001a8e <HAL_DMA_Abort_IT+0xc6>
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001a8a:	6878      	ldr	r0, [r7, #4]
 8001a8c:	4798      	blx	r3
 8001a8e:	7bfb      	ldrb	r3, [r7, #15]
 8001a90:	4618      	mov	r0, r3
 8001a92:	3710      	adds	r7, #16
 8001a94:	46bd      	mov	sp, r7
 8001a96:	bd80      	pop	{r7, pc}
 8001a98:	40020008 	.word	0x40020008
 8001a9c:	4002001c 	.word	0x4002001c
 8001aa0:	40020030 	.word	0x40020030
 8001aa4:	40020044 	.word	0x40020044
 8001aa8:	40020058 	.word	0x40020058
 8001aac:	4002006c 	.word	0x4002006c
 8001ab0:	40020000 	.word	0x40020000

08001ab4 <HAL_GPIO_Init>:
 8001ab4:	b480      	push	{r7}
 8001ab6:	b08b      	sub	sp, #44	; 0x2c
 8001ab8:	af00      	add	r7, sp, #0
 8001aba:	6078      	str	r0, [r7, #4]
 8001abc:	6039      	str	r1, [r7, #0]
 8001abe:	2300      	movs	r3, #0
 8001ac0:	627b      	str	r3, [r7, #36]	; 0x24
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	623b      	str	r3, [r7, #32]
 8001ac6:	e169      	b.n	8001d9c <HAL_GPIO_Init+0x2e8>
 8001ac8:	2201      	movs	r2, #1
 8001aca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001acc:	fa02 f303 	lsl.w	r3, r2, r3
 8001ad0:	61fb      	str	r3, [r7, #28]
 8001ad2:	683b      	ldr	r3, [r7, #0]
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	69fa      	ldr	r2, [r7, #28]
 8001ad8:	4013      	ands	r3, r2
 8001ada:	61bb      	str	r3, [r7, #24]
 8001adc:	69ba      	ldr	r2, [r7, #24]
 8001ade:	69fb      	ldr	r3, [r7, #28]
 8001ae0:	429a      	cmp	r2, r3
 8001ae2:	f040 8158 	bne.w	8001d96 <HAL_GPIO_Init+0x2e2>
 8001ae6:	683b      	ldr	r3, [r7, #0]
 8001ae8:	685b      	ldr	r3, [r3, #4]
 8001aea:	4a9a      	ldr	r2, [pc, #616]	; (8001d54 <HAL_GPIO_Init+0x2a0>)
 8001aec:	4293      	cmp	r3, r2
 8001aee:	d05e      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001af0:	4a98      	ldr	r2, [pc, #608]	; (8001d54 <HAL_GPIO_Init+0x2a0>)
 8001af2:	4293      	cmp	r3, r2
 8001af4:	d875      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001af6:	4a98      	ldr	r2, [pc, #608]	; (8001d58 <HAL_GPIO_Init+0x2a4>)
 8001af8:	4293      	cmp	r3, r2
 8001afa:	d058      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001afc:	4a96      	ldr	r2, [pc, #600]	; (8001d58 <HAL_GPIO_Init+0x2a4>)
 8001afe:	4293      	cmp	r3, r2
 8001b00:	d86f      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b02:	4a96      	ldr	r2, [pc, #600]	; (8001d5c <HAL_GPIO_Init+0x2a8>)
 8001b04:	4293      	cmp	r3, r2
 8001b06:	d052      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001b08:	4a94      	ldr	r2, [pc, #592]	; (8001d5c <HAL_GPIO_Init+0x2a8>)
 8001b0a:	4293      	cmp	r3, r2
 8001b0c:	d869      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b0e:	4a94      	ldr	r2, [pc, #592]	; (8001d60 <HAL_GPIO_Init+0x2ac>)
 8001b10:	4293      	cmp	r3, r2
 8001b12:	d04c      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001b14:	4a92      	ldr	r2, [pc, #584]	; (8001d60 <HAL_GPIO_Init+0x2ac>)
 8001b16:	4293      	cmp	r3, r2
 8001b18:	d863      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b1a:	4a92      	ldr	r2, [pc, #584]	; (8001d64 <HAL_GPIO_Init+0x2b0>)
 8001b1c:	4293      	cmp	r3, r2
 8001b1e:	d046      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001b20:	4a90      	ldr	r2, [pc, #576]	; (8001d64 <HAL_GPIO_Init+0x2b0>)
 8001b22:	4293      	cmp	r3, r2
 8001b24:	d85d      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b26:	2b12      	cmp	r3, #18
 8001b28:	d82a      	bhi.n	8001b80 <HAL_GPIO_Init+0xcc>
 8001b2a:	2b12      	cmp	r3, #18
 8001b2c:	d859      	bhi.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b2e:	a201      	add	r2, pc, #4	; (adr r2, 8001b34 <HAL_GPIO_Init+0x80>)
 8001b30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b34:	08001baf 	.word	0x08001baf
 8001b38:	08001b89 	.word	0x08001b89
 8001b3c:	08001b9b 	.word	0x08001b9b
 8001b40:	08001bdd 	.word	0x08001bdd
 8001b44:	08001be3 	.word	0x08001be3
 8001b48:	08001be3 	.word	0x08001be3
 8001b4c:	08001be3 	.word	0x08001be3
 8001b50:	08001be3 	.word	0x08001be3
 8001b54:	08001be3 	.word	0x08001be3
 8001b58:	08001be3 	.word	0x08001be3
 8001b5c:	08001be3 	.word	0x08001be3
 8001b60:	08001be3 	.word	0x08001be3
 8001b64:	08001be3 	.word	0x08001be3
 8001b68:	08001be3 	.word	0x08001be3
 8001b6c:	08001be3 	.word	0x08001be3
 8001b70:	08001be3 	.word	0x08001be3
 8001b74:	08001be3 	.word	0x08001be3
 8001b78:	08001b91 	.word	0x08001b91
 8001b7c:	08001ba5 	.word	0x08001ba5
 8001b80:	4a79      	ldr	r2, [pc, #484]	; (8001d68 <HAL_GPIO_Init+0x2b4>)
 8001b82:	4293      	cmp	r3, r2
 8001b84:	d013      	beq.n	8001bae <HAL_GPIO_Init+0xfa>
 8001b86:	e02c      	b.n	8001be2 <HAL_GPIO_Init+0x12e>
 8001b88:	683b      	ldr	r3, [r7, #0]
 8001b8a:	68db      	ldr	r3, [r3, #12]
 8001b8c:	623b      	str	r3, [r7, #32]
 8001b8e:	e029      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001b90:	683b      	ldr	r3, [r7, #0]
 8001b92:	68db      	ldr	r3, [r3, #12]
 8001b94:	3304      	adds	r3, #4
 8001b96:	623b      	str	r3, [r7, #32]
 8001b98:	e024      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001b9a:	683b      	ldr	r3, [r7, #0]
 8001b9c:	68db      	ldr	r3, [r3, #12]
 8001b9e:	3308      	adds	r3, #8
 8001ba0:	623b      	str	r3, [r7, #32]
 8001ba2:	e01f      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001ba4:	683b      	ldr	r3, [r7, #0]
 8001ba6:	68db      	ldr	r3, [r3, #12]
 8001ba8:	330c      	adds	r3, #12
 8001baa:	623b      	str	r3, [r7, #32]
 8001bac:	e01a      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001bae:	683b      	ldr	r3, [r7, #0]
 8001bb0:	689b      	ldr	r3, [r3, #8]
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d102      	bne.n	8001bbc <HAL_GPIO_Init+0x108>
 8001bb6:	2304      	movs	r3, #4
 8001bb8:	623b      	str	r3, [r7, #32]
 8001bba:	e013      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001bbc:	683b      	ldr	r3, [r7, #0]
 8001bbe:	689b      	ldr	r3, [r3, #8]
 8001bc0:	2b01      	cmp	r3, #1
 8001bc2:	d105      	bne.n	8001bd0 <HAL_GPIO_Init+0x11c>
 8001bc4:	2308      	movs	r3, #8
 8001bc6:	623b      	str	r3, [r7, #32]
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	69fa      	ldr	r2, [r7, #28]
 8001bcc:	611a      	str	r2, [r3, #16]
 8001bce:	e009      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001bd0:	2308      	movs	r3, #8
 8001bd2:	623b      	str	r3, [r7, #32]
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	69fa      	ldr	r2, [r7, #28]
 8001bd8:	615a      	str	r2, [r3, #20]
 8001bda:	e003      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001bdc:	2300      	movs	r3, #0
 8001bde:	623b      	str	r3, [r7, #32]
 8001be0:	e000      	b.n	8001be4 <HAL_GPIO_Init+0x130>
 8001be2:	bf00      	nop
 8001be4:	69bb      	ldr	r3, [r7, #24]
 8001be6:	2bff      	cmp	r3, #255	; 0xff
 8001be8:	d801      	bhi.n	8001bee <HAL_GPIO_Init+0x13a>
 8001bea:	687b      	ldr	r3, [r7, #4]
 8001bec:	e001      	b.n	8001bf2 <HAL_GPIO_Init+0x13e>
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	3304      	adds	r3, #4
 8001bf2:	617b      	str	r3, [r7, #20]
 8001bf4:	69bb      	ldr	r3, [r7, #24]
 8001bf6:	2bff      	cmp	r3, #255	; 0xff
 8001bf8:	d802      	bhi.n	8001c00 <HAL_GPIO_Init+0x14c>
 8001bfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bfc:	009b      	lsls	r3, r3, #2
 8001bfe:	e002      	b.n	8001c06 <HAL_GPIO_Init+0x152>
 8001c00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c02:	3b08      	subs	r3, #8
 8001c04:	009b      	lsls	r3, r3, #2
 8001c06:	613b      	str	r3, [r7, #16]
 8001c08:	697b      	ldr	r3, [r7, #20]
 8001c0a:	681a      	ldr	r2, [r3, #0]
 8001c0c:	210f      	movs	r1, #15
 8001c0e:	693b      	ldr	r3, [r7, #16]
 8001c10:	fa01 f303 	lsl.w	r3, r1, r3
 8001c14:	43db      	mvns	r3, r3
 8001c16:	401a      	ands	r2, r3
 8001c18:	6a39      	ldr	r1, [r7, #32]
 8001c1a:	693b      	ldr	r3, [r7, #16]
 8001c1c:	fa01 f303 	lsl.w	r3, r1, r3
 8001c20:	431a      	orrs	r2, r3
 8001c22:	697b      	ldr	r3, [r7, #20]
 8001c24:	601a      	str	r2, [r3, #0]
 8001c26:	683b      	ldr	r3, [r7, #0]
 8001c28:	685b      	ldr	r3, [r3, #4]
 8001c2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	f000 80b1 	beq.w	8001d96 <HAL_GPIO_Init+0x2e2>
 8001c34:	4b4d      	ldr	r3, [pc, #308]	; (8001d6c <HAL_GPIO_Init+0x2b8>)
 8001c36:	699b      	ldr	r3, [r3, #24]
 8001c38:	4a4c      	ldr	r2, [pc, #304]	; (8001d6c <HAL_GPIO_Init+0x2b8>)
 8001c3a:	f043 0301 	orr.w	r3, r3, #1
 8001c3e:	6193      	str	r3, [r2, #24]
 8001c40:	4b4a      	ldr	r3, [pc, #296]	; (8001d6c <HAL_GPIO_Init+0x2b8>)
 8001c42:	699b      	ldr	r3, [r3, #24]
 8001c44:	f003 0301 	and.w	r3, r3, #1
 8001c48:	60bb      	str	r3, [r7, #8]
 8001c4a:	68bb      	ldr	r3, [r7, #8]
 8001c4c:	4a48      	ldr	r2, [pc, #288]	; (8001d70 <HAL_GPIO_Init+0x2bc>)
 8001c4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c50:	089b      	lsrs	r3, r3, #2
 8001c52:	3302      	adds	r3, #2
 8001c54:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c58:	60fb      	str	r3, [r7, #12]
 8001c5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c5c:	f003 0303 	and.w	r3, r3, #3
 8001c60:	009b      	lsls	r3, r3, #2
 8001c62:	220f      	movs	r2, #15
 8001c64:	fa02 f303 	lsl.w	r3, r2, r3
 8001c68:	43db      	mvns	r3, r3
 8001c6a:	68fa      	ldr	r2, [r7, #12]
 8001c6c:	4013      	ands	r3, r2
 8001c6e:	60fb      	str	r3, [r7, #12]
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	4a40      	ldr	r2, [pc, #256]	; (8001d74 <HAL_GPIO_Init+0x2c0>)
 8001c74:	4293      	cmp	r3, r2
 8001c76:	d013      	beq.n	8001ca0 <HAL_GPIO_Init+0x1ec>
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	4a3f      	ldr	r2, [pc, #252]	; (8001d78 <HAL_GPIO_Init+0x2c4>)
 8001c7c:	4293      	cmp	r3, r2
 8001c7e:	d00d      	beq.n	8001c9c <HAL_GPIO_Init+0x1e8>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	4a3e      	ldr	r2, [pc, #248]	; (8001d7c <HAL_GPIO_Init+0x2c8>)
 8001c84:	4293      	cmp	r3, r2
 8001c86:	d007      	beq.n	8001c98 <HAL_GPIO_Init+0x1e4>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	4a3d      	ldr	r2, [pc, #244]	; (8001d80 <HAL_GPIO_Init+0x2cc>)
 8001c8c:	4293      	cmp	r3, r2
 8001c8e:	d101      	bne.n	8001c94 <HAL_GPIO_Init+0x1e0>
 8001c90:	2303      	movs	r3, #3
 8001c92:	e006      	b.n	8001ca2 <HAL_GPIO_Init+0x1ee>
 8001c94:	2304      	movs	r3, #4
 8001c96:	e004      	b.n	8001ca2 <HAL_GPIO_Init+0x1ee>
 8001c98:	2302      	movs	r3, #2
 8001c9a:	e002      	b.n	8001ca2 <HAL_GPIO_Init+0x1ee>
 8001c9c:	2301      	movs	r3, #1
 8001c9e:	e000      	b.n	8001ca2 <HAL_GPIO_Init+0x1ee>
 8001ca0:	2300      	movs	r3, #0
 8001ca2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001ca4:	f002 0203 	and.w	r2, r2, #3
 8001ca8:	0092      	lsls	r2, r2, #2
 8001caa:	4093      	lsls	r3, r2
 8001cac:	68fa      	ldr	r2, [r7, #12]
 8001cae:	4313      	orrs	r3, r2
 8001cb0:	60fb      	str	r3, [r7, #12]
 8001cb2:	492f      	ldr	r1, [pc, #188]	; (8001d70 <HAL_GPIO_Init+0x2bc>)
 8001cb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001cb6:	089b      	lsrs	r3, r3, #2
 8001cb8:	3302      	adds	r3, #2
 8001cba:	68fa      	ldr	r2, [r7, #12]
 8001cbc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001cc0:	683b      	ldr	r3, [r7, #0]
 8001cc2:	685b      	ldr	r3, [r3, #4]
 8001cc4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	d006      	beq.n	8001cda <HAL_GPIO_Init+0x226>
 8001ccc:	4b2d      	ldr	r3, [pc, #180]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001cce:	681a      	ldr	r2, [r3, #0]
 8001cd0:	492c      	ldr	r1, [pc, #176]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001cd2:	69bb      	ldr	r3, [r7, #24]
 8001cd4:	4313      	orrs	r3, r2
 8001cd6:	600b      	str	r3, [r1, #0]
 8001cd8:	e006      	b.n	8001ce8 <HAL_GPIO_Init+0x234>
 8001cda:	4b2a      	ldr	r3, [pc, #168]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001cdc:	681a      	ldr	r2, [r3, #0]
 8001cde:	69bb      	ldr	r3, [r7, #24]
 8001ce0:	43db      	mvns	r3, r3
 8001ce2:	4928      	ldr	r1, [pc, #160]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001ce4:	4013      	ands	r3, r2
 8001ce6:	600b      	str	r3, [r1, #0]
 8001ce8:	683b      	ldr	r3, [r7, #0]
 8001cea:	685b      	ldr	r3, [r3, #4]
 8001cec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001cf0:	2b00      	cmp	r3, #0
 8001cf2:	d006      	beq.n	8001d02 <HAL_GPIO_Init+0x24e>
 8001cf4:	4b23      	ldr	r3, [pc, #140]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001cf6:	685a      	ldr	r2, [r3, #4]
 8001cf8:	4922      	ldr	r1, [pc, #136]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001cfa:	69bb      	ldr	r3, [r7, #24]
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	604b      	str	r3, [r1, #4]
 8001d00:	e006      	b.n	8001d10 <HAL_GPIO_Init+0x25c>
 8001d02:	4b20      	ldr	r3, [pc, #128]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d04:	685a      	ldr	r2, [r3, #4]
 8001d06:	69bb      	ldr	r3, [r7, #24]
 8001d08:	43db      	mvns	r3, r3
 8001d0a:	491e      	ldr	r1, [pc, #120]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d0c:	4013      	ands	r3, r2
 8001d0e:	604b      	str	r3, [r1, #4]
 8001d10:	683b      	ldr	r3, [r7, #0]
 8001d12:	685b      	ldr	r3, [r3, #4]
 8001d14:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	d006      	beq.n	8001d2a <HAL_GPIO_Init+0x276>
 8001d1c:	4b19      	ldr	r3, [pc, #100]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d1e:	689a      	ldr	r2, [r3, #8]
 8001d20:	4918      	ldr	r1, [pc, #96]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d22:	69bb      	ldr	r3, [r7, #24]
 8001d24:	4313      	orrs	r3, r2
 8001d26:	608b      	str	r3, [r1, #8]
 8001d28:	e006      	b.n	8001d38 <HAL_GPIO_Init+0x284>
 8001d2a:	4b16      	ldr	r3, [pc, #88]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d2c:	689a      	ldr	r2, [r3, #8]
 8001d2e:	69bb      	ldr	r3, [r7, #24]
 8001d30:	43db      	mvns	r3, r3
 8001d32:	4914      	ldr	r1, [pc, #80]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d34:	4013      	ands	r3, r2
 8001d36:	608b      	str	r3, [r1, #8]
 8001d38:	683b      	ldr	r3, [r7, #0]
 8001d3a:	685b      	ldr	r3, [r3, #4]
 8001d3c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d40:	2b00      	cmp	r3, #0
 8001d42:	d021      	beq.n	8001d88 <HAL_GPIO_Init+0x2d4>
 8001d44:	4b0f      	ldr	r3, [pc, #60]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d46:	68da      	ldr	r2, [r3, #12]
 8001d48:	490e      	ldr	r1, [pc, #56]	; (8001d84 <HAL_GPIO_Init+0x2d0>)
 8001d4a:	69bb      	ldr	r3, [r7, #24]
 8001d4c:	4313      	orrs	r3, r2
 8001d4e:	60cb      	str	r3, [r1, #12]
 8001d50:	e021      	b.n	8001d96 <HAL_GPIO_Init+0x2e2>
 8001d52:	bf00      	nop
 8001d54:	10320000 	.word	0x10320000
 8001d58:	10310000 	.word	0x10310000
 8001d5c:	10220000 	.word	0x10220000
 8001d60:	10210000 	.word	0x10210000
 8001d64:	10120000 	.word	0x10120000
 8001d68:	10110000 	.word	0x10110000
 8001d6c:	40021000 	.word	0x40021000
 8001d70:	40010000 	.word	0x40010000
 8001d74:	40010800 	.word	0x40010800
 8001d78:	40010c00 	.word	0x40010c00
 8001d7c:	40011000 	.word	0x40011000
 8001d80:	40011400 	.word	0x40011400
 8001d84:	40010400 	.word	0x40010400
 8001d88:	4b0b      	ldr	r3, [pc, #44]	; (8001db8 <HAL_GPIO_Init+0x304>)
 8001d8a:	68da      	ldr	r2, [r3, #12]
 8001d8c:	69bb      	ldr	r3, [r7, #24]
 8001d8e:	43db      	mvns	r3, r3
 8001d90:	4909      	ldr	r1, [pc, #36]	; (8001db8 <HAL_GPIO_Init+0x304>)
 8001d92:	4013      	ands	r3, r2
 8001d94:	60cb      	str	r3, [r1, #12]
 8001d96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d98:	3301      	adds	r3, #1
 8001d9a:	627b      	str	r3, [r7, #36]	; 0x24
 8001d9c:	683b      	ldr	r3, [r7, #0]
 8001d9e:	681a      	ldr	r2, [r3, #0]
 8001da0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001da2:	fa22 f303 	lsr.w	r3, r2, r3
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	f47f ae8e 	bne.w	8001ac8 <HAL_GPIO_Init+0x14>
 8001dac:	bf00      	nop
 8001dae:	bf00      	nop
 8001db0:	372c      	adds	r7, #44	; 0x2c
 8001db2:	46bd      	mov	sp, r7
 8001db4:	bc80      	pop	{r7}
 8001db6:	4770      	bx	lr
 8001db8:	40010400 	.word	0x40010400

08001dbc <HAL_GPIO_ReadPin>:
 8001dbc:	b480      	push	{r7}
 8001dbe:	b085      	sub	sp, #20
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	6078      	str	r0, [r7, #4]
 8001dc4:	460b      	mov	r3, r1
 8001dc6:	807b      	strh	r3, [r7, #2]
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	689a      	ldr	r2, [r3, #8]
 8001dcc:	887b      	ldrh	r3, [r7, #2]
 8001dce:	4013      	ands	r3, r2
 8001dd0:	2b00      	cmp	r3, #0
 8001dd2:	d002      	beq.n	8001dda <HAL_GPIO_ReadPin+0x1e>
 8001dd4:	2301      	movs	r3, #1
 8001dd6:	73fb      	strb	r3, [r7, #15]
 8001dd8:	e001      	b.n	8001dde <HAL_GPIO_ReadPin+0x22>
 8001dda:	2300      	movs	r3, #0
 8001ddc:	73fb      	strb	r3, [r7, #15]
 8001dde:	7bfb      	ldrb	r3, [r7, #15]
 8001de0:	4618      	mov	r0, r3
 8001de2:	3714      	adds	r7, #20
 8001de4:	46bd      	mov	sp, r7
 8001de6:	bc80      	pop	{r7}
 8001de8:	4770      	bx	lr

08001dea <HAL_GPIO_WritePin>:
 8001dea:	b480      	push	{r7}
 8001dec:	b083      	sub	sp, #12
 8001dee:	af00      	add	r7, sp, #0
 8001df0:	6078      	str	r0, [r7, #4]
 8001df2:	460b      	mov	r3, r1
 8001df4:	807b      	strh	r3, [r7, #2]
 8001df6:	4613      	mov	r3, r2
 8001df8:	707b      	strb	r3, [r7, #1]
 8001dfa:	787b      	ldrb	r3, [r7, #1]
 8001dfc:	2b00      	cmp	r3, #0
 8001dfe:	d003      	beq.n	8001e08 <HAL_GPIO_WritePin+0x1e>
 8001e00:	887a      	ldrh	r2, [r7, #2]
 8001e02:	687b      	ldr	r3, [r7, #4]
 8001e04:	611a      	str	r2, [r3, #16]
 8001e06:	e003      	b.n	8001e10 <HAL_GPIO_WritePin+0x26>
 8001e08:	887b      	ldrh	r3, [r7, #2]
 8001e0a:	041a      	lsls	r2, r3, #16
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	611a      	str	r2, [r3, #16]
 8001e10:	bf00      	nop
 8001e12:	370c      	adds	r7, #12
 8001e14:	46bd      	mov	sp, r7
 8001e16:	bc80      	pop	{r7}
 8001e18:	4770      	bx	lr

08001e1a <HAL_GPIO_TogglePin>:
 8001e1a:	b480      	push	{r7}
 8001e1c:	b085      	sub	sp, #20
 8001e1e:	af00      	add	r7, sp, #0
 8001e20:	6078      	str	r0, [r7, #4]
 8001e22:	460b      	mov	r3, r1
 8001e24:	807b      	strh	r3, [r7, #2]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	68db      	ldr	r3, [r3, #12]
 8001e2a:	60fb      	str	r3, [r7, #12]
 8001e2c:	887a      	ldrh	r2, [r7, #2]
 8001e2e:	68fb      	ldr	r3, [r7, #12]
 8001e30:	4013      	ands	r3, r2
 8001e32:	041a      	lsls	r2, r3, #16
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	43d9      	mvns	r1, r3
 8001e38:	887b      	ldrh	r3, [r7, #2]
 8001e3a:	400b      	ands	r3, r1
 8001e3c:	431a      	orrs	r2, r3
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	611a      	str	r2, [r3, #16]
 8001e42:	bf00      	nop
 8001e44:	3714      	adds	r7, #20
 8001e46:	46bd      	mov	sp, r7
 8001e48:	bc80      	pop	{r7}
 8001e4a:	4770      	bx	lr

08001e4c <HAL_RCC_OscConfig>:
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b086      	sub	sp, #24
 8001e50:	af00      	add	r7, sp, #0
 8001e52:	6078      	str	r0, [r7, #4]
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d101      	bne.n	8001e5e <HAL_RCC_OscConfig+0x12>
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	e272      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	f003 0301 	and.w	r3, r3, #1
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	f000 8087 	beq.w	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001e6c:	4b92      	ldr	r3, [pc, #584]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e6e:	685b      	ldr	r3, [r3, #4]
 8001e70:	f003 030c 	and.w	r3, r3, #12
 8001e74:	2b04      	cmp	r3, #4
 8001e76:	d00c      	beq.n	8001e92 <HAL_RCC_OscConfig+0x46>
 8001e78:	4b8f      	ldr	r3, [pc, #572]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e7a:	685b      	ldr	r3, [r3, #4]
 8001e7c:	f003 030c 	and.w	r3, r3, #12
 8001e80:	2b08      	cmp	r3, #8
 8001e82:	d112      	bne.n	8001eaa <HAL_RCC_OscConfig+0x5e>
 8001e84:	4b8c      	ldr	r3, [pc, #560]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e86:	685b      	ldr	r3, [r3, #4]
 8001e88:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001e8c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001e90:	d10b      	bne.n	8001eaa <HAL_RCC_OscConfig+0x5e>
 8001e92:	4b89      	ldr	r3, [pc, #548]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001e9a:	2b00      	cmp	r3, #0
 8001e9c:	d06c      	beq.n	8001f78 <HAL_RCC_OscConfig+0x12c>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	685b      	ldr	r3, [r3, #4]
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d168      	bne.n	8001f78 <HAL_RCC_OscConfig+0x12c>
 8001ea6:	2301      	movs	r3, #1
 8001ea8:	e24c      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	685b      	ldr	r3, [r3, #4]
 8001eae:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001eb2:	d106      	bne.n	8001ec2 <HAL_RCC_OscConfig+0x76>
 8001eb4:	4b80      	ldr	r3, [pc, #512]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	4a7f      	ldr	r2, [pc, #508]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001eba:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001ebe:	6013      	str	r3, [r2, #0]
 8001ec0:	e02e      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	685b      	ldr	r3, [r3, #4]
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d10c      	bne.n	8001ee4 <HAL_RCC_OscConfig+0x98>
 8001eca:	4b7b      	ldr	r3, [pc, #492]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	4a7a      	ldr	r2, [pc, #488]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ed0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001ed4:	6013      	str	r3, [r2, #0]
 8001ed6:	4b78      	ldr	r3, [pc, #480]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	4a77      	ldr	r2, [pc, #476]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001edc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ee0:	6013      	str	r3, [r2, #0]
 8001ee2:	e01d      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	685b      	ldr	r3, [r3, #4]
 8001ee8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001eec:	d10c      	bne.n	8001f08 <HAL_RCC_OscConfig+0xbc>
 8001eee:	4b72      	ldr	r3, [pc, #456]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	4a71      	ldr	r2, [pc, #452]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ef4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ef8:	6013      	str	r3, [r2, #0]
 8001efa:	4b6f      	ldr	r3, [pc, #444]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	4a6e      	ldr	r2, [pc, #440]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f00:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001f04:	6013      	str	r3, [r2, #0]
 8001f06:	e00b      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001f08:	4b6b      	ldr	r3, [pc, #428]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	4a6a      	ldr	r2, [pc, #424]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f0e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001f12:	6013      	str	r3, [r2, #0]
 8001f14:	4b68      	ldr	r3, [pc, #416]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	4a67      	ldr	r2, [pc, #412]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f1a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	685b      	ldr	r3, [r3, #4]
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d013      	beq.n	8001f50 <HAL_RCC_OscConfig+0x104>
 8001f28:	f7ff fbfc 	bl	8001724 <HAL_GetTick>
 8001f2c:	6138      	str	r0, [r7, #16]
 8001f2e:	e008      	b.n	8001f42 <HAL_RCC_OscConfig+0xf6>
 8001f30:	f7ff fbf8 	bl	8001724 <HAL_GetTick>
 8001f34:	4602      	mov	r2, r0
 8001f36:	693b      	ldr	r3, [r7, #16]
 8001f38:	1ad3      	subs	r3, r2, r3
 8001f3a:	2b64      	cmp	r3, #100	; 0x64
 8001f3c:	d901      	bls.n	8001f42 <HAL_RCC_OscConfig+0xf6>
 8001f3e:	2303      	movs	r3, #3
 8001f40:	e200      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001f42:	4b5d      	ldr	r3, [pc, #372]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d0f0      	beq.n	8001f30 <HAL_RCC_OscConfig+0xe4>
 8001f4e:	e014      	b.n	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001f50:	f7ff fbe8 	bl	8001724 <HAL_GetTick>
 8001f54:	6138      	str	r0, [r7, #16]
 8001f56:	e008      	b.n	8001f6a <HAL_RCC_OscConfig+0x11e>
 8001f58:	f7ff fbe4 	bl	8001724 <HAL_GetTick>
 8001f5c:	4602      	mov	r2, r0
 8001f5e:	693b      	ldr	r3, [r7, #16]
 8001f60:	1ad3      	subs	r3, r2, r3
 8001f62:	2b64      	cmp	r3, #100	; 0x64
 8001f64:	d901      	bls.n	8001f6a <HAL_RCC_OscConfig+0x11e>
 8001f66:	2303      	movs	r3, #3
 8001f68:	e1ec      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001f6a:	4b53      	ldr	r3, [pc, #332]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d1f0      	bne.n	8001f58 <HAL_RCC_OscConfig+0x10c>
 8001f76:	e000      	b.n	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001f78:	bf00      	nop
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	f003 0302 	and.w	r3, r3, #2
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d063      	beq.n	800204e <HAL_RCC_OscConfig+0x202>
 8001f86:	4b4c      	ldr	r3, [pc, #304]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	f003 030c 	and.w	r3, r3, #12
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d00b      	beq.n	8001faa <HAL_RCC_OscConfig+0x15e>
 8001f92:	4b49      	ldr	r3, [pc, #292]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f94:	685b      	ldr	r3, [r3, #4]
 8001f96:	f003 030c 	and.w	r3, r3, #12
 8001f9a:	2b08      	cmp	r3, #8
 8001f9c:	d11c      	bne.n	8001fd8 <HAL_RCC_OscConfig+0x18c>
 8001f9e:	4b46      	ldr	r3, [pc, #280]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fa0:	685b      	ldr	r3, [r3, #4]
 8001fa2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d116      	bne.n	8001fd8 <HAL_RCC_OscConfig+0x18c>
 8001faa:	4b43      	ldr	r3, [pc, #268]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	f003 0302 	and.w	r3, r3, #2
 8001fb2:	2b00      	cmp	r3, #0
 8001fb4:	d005      	beq.n	8001fc2 <HAL_RCC_OscConfig+0x176>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	691b      	ldr	r3, [r3, #16]
 8001fba:	2b01      	cmp	r3, #1
 8001fbc:	d001      	beq.n	8001fc2 <HAL_RCC_OscConfig+0x176>
 8001fbe:	2301      	movs	r3, #1
 8001fc0:	e1c0      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001fc2:	4b3d      	ldr	r3, [pc, #244]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	695b      	ldr	r3, [r3, #20]
 8001fce:	00db      	lsls	r3, r3, #3
 8001fd0:	4939      	ldr	r1, [pc, #228]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fd2:	4313      	orrs	r3, r2
 8001fd4:	600b      	str	r3, [r1, #0]
 8001fd6:	e03a      	b.n	800204e <HAL_RCC_OscConfig+0x202>
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	691b      	ldr	r3, [r3, #16]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d020      	beq.n	8002022 <HAL_RCC_OscConfig+0x1d6>
 8001fe0:	4b36      	ldr	r3, [pc, #216]	; (80020bc <HAL_RCC_OscConfig+0x270>)
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	601a      	str	r2, [r3, #0]
 8001fe6:	f7ff fb9d 	bl	8001724 <HAL_GetTick>
 8001fea:	6138      	str	r0, [r7, #16]
 8001fec:	e008      	b.n	8002000 <HAL_RCC_OscConfig+0x1b4>
 8001fee:	f7ff fb99 	bl	8001724 <HAL_GetTick>
 8001ff2:	4602      	mov	r2, r0
 8001ff4:	693b      	ldr	r3, [r7, #16]
 8001ff6:	1ad3      	subs	r3, r2, r3
 8001ff8:	2b02      	cmp	r3, #2
 8001ffa:	d901      	bls.n	8002000 <HAL_RCC_OscConfig+0x1b4>
 8001ffc:	2303      	movs	r3, #3
 8001ffe:	e1a1      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002000:	4b2d      	ldr	r3, [pc, #180]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f003 0302 	and.w	r3, r3, #2
 8002008:	2b00      	cmp	r3, #0
 800200a:	d0f0      	beq.n	8001fee <HAL_RCC_OscConfig+0x1a2>
 800200c:	4b2a      	ldr	r3, [pc, #168]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	695b      	ldr	r3, [r3, #20]
 8002018:	00db      	lsls	r3, r3, #3
 800201a:	4927      	ldr	r1, [pc, #156]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 800201c:	4313      	orrs	r3, r2
 800201e:	600b      	str	r3, [r1, #0]
 8002020:	e015      	b.n	800204e <HAL_RCC_OscConfig+0x202>
 8002022:	4b26      	ldr	r3, [pc, #152]	; (80020bc <HAL_RCC_OscConfig+0x270>)
 8002024:	2200      	movs	r2, #0
 8002026:	601a      	str	r2, [r3, #0]
 8002028:	f7ff fb7c 	bl	8001724 <HAL_GetTick>
 800202c:	6138      	str	r0, [r7, #16]
 800202e:	e008      	b.n	8002042 <HAL_RCC_OscConfig+0x1f6>
 8002030:	f7ff fb78 	bl	8001724 <HAL_GetTick>
 8002034:	4602      	mov	r2, r0
 8002036:	693b      	ldr	r3, [r7, #16]
 8002038:	1ad3      	subs	r3, r2, r3
 800203a:	2b02      	cmp	r3, #2
 800203c:	d901      	bls.n	8002042 <HAL_RCC_OscConfig+0x1f6>
 800203e:	2303      	movs	r3, #3
 8002040:	e180      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002042:	4b1d      	ldr	r3, [pc, #116]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f003 0302 	and.w	r3, r3, #2
 800204a:	2b00      	cmp	r3, #0
 800204c:	d1f0      	bne.n	8002030 <HAL_RCC_OscConfig+0x1e4>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	f003 0308 	and.w	r3, r3, #8
 8002056:	2b00      	cmp	r3, #0
 8002058:	d03a      	beq.n	80020d0 <HAL_RCC_OscConfig+0x284>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	699b      	ldr	r3, [r3, #24]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d019      	beq.n	8002096 <HAL_RCC_OscConfig+0x24a>
 8002062:	4b17      	ldr	r3, [pc, #92]	; (80020c0 <HAL_RCC_OscConfig+0x274>)
 8002064:	2201      	movs	r2, #1
 8002066:	601a      	str	r2, [r3, #0]
 8002068:	f7ff fb5c 	bl	8001724 <HAL_GetTick>
 800206c:	6138      	str	r0, [r7, #16]
 800206e:	e008      	b.n	8002082 <HAL_RCC_OscConfig+0x236>
 8002070:	f7ff fb58 	bl	8001724 <HAL_GetTick>
 8002074:	4602      	mov	r2, r0
 8002076:	693b      	ldr	r3, [r7, #16]
 8002078:	1ad3      	subs	r3, r2, r3
 800207a:	2b02      	cmp	r3, #2
 800207c:	d901      	bls.n	8002082 <HAL_RCC_OscConfig+0x236>
 800207e:	2303      	movs	r3, #3
 8002080:	e160      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002082:	4b0d      	ldr	r3, [pc, #52]	; (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002086:	f003 0302 	and.w	r3, r3, #2
 800208a:	2b00      	cmp	r3, #0
 800208c:	d0f0      	beq.n	8002070 <HAL_RCC_OscConfig+0x224>
 800208e:	2001      	movs	r0, #1
 8002090:	f000 fad8 	bl	8002644 <RCC_Delay>
 8002094:	e01c      	b.n	80020d0 <HAL_RCC_OscConfig+0x284>
 8002096:	4b0a      	ldr	r3, [pc, #40]	; (80020c0 <HAL_RCC_OscConfig+0x274>)
 8002098:	2200      	movs	r2, #0
 800209a:	601a      	str	r2, [r3, #0]
 800209c:	f7ff fb42 	bl	8001724 <HAL_GetTick>
 80020a0:	6138      	str	r0, [r7, #16]
 80020a2:	e00f      	b.n	80020c4 <HAL_RCC_OscConfig+0x278>
 80020a4:	f7ff fb3e 	bl	8001724 <HAL_GetTick>
 80020a8:	4602      	mov	r2, r0
 80020aa:	693b      	ldr	r3, [r7, #16]
 80020ac:	1ad3      	subs	r3, r2, r3
 80020ae:	2b02      	cmp	r3, #2
 80020b0:	d908      	bls.n	80020c4 <HAL_RCC_OscConfig+0x278>
 80020b2:	2303      	movs	r3, #3
 80020b4:	e146      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80020b6:	bf00      	nop
 80020b8:	40021000 	.word	0x40021000
 80020bc:	42420000 	.word	0x42420000
 80020c0:	42420480 	.word	0x42420480
 80020c4:	4b92      	ldr	r3, [pc, #584]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020c8:	f003 0302 	and.w	r3, r3, #2
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d1e9      	bne.n	80020a4 <HAL_RCC_OscConfig+0x258>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	f003 0304 	and.w	r3, r3, #4
 80020d8:	2b00      	cmp	r3, #0
 80020da:	f000 80a6 	beq.w	800222a <HAL_RCC_OscConfig+0x3de>
 80020de:	2300      	movs	r3, #0
 80020e0:	75fb      	strb	r3, [r7, #23]
 80020e2:	4b8b      	ldr	r3, [pc, #556]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020e4:	69db      	ldr	r3, [r3, #28]
 80020e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d10d      	bne.n	800210a <HAL_RCC_OscConfig+0x2be>
 80020ee:	4b88      	ldr	r3, [pc, #544]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020f0:	69db      	ldr	r3, [r3, #28]
 80020f2:	4a87      	ldr	r2, [pc, #540]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020f4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80020f8:	61d3      	str	r3, [r2, #28]
 80020fa:	4b85      	ldr	r3, [pc, #532]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020fc:	69db      	ldr	r3, [r3, #28]
 80020fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002102:	60bb      	str	r3, [r7, #8]
 8002104:	68bb      	ldr	r3, [r7, #8]
 8002106:	2301      	movs	r3, #1
 8002108:	75fb      	strb	r3, [r7, #23]
 800210a:	4b82      	ldr	r3, [pc, #520]	; (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002112:	2b00      	cmp	r3, #0
 8002114:	d118      	bne.n	8002148 <HAL_RCC_OscConfig+0x2fc>
 8002116:	4b7f      	ldr	r3, [pc, #508]	; (8002314 <HAL_RCC_OscConfig+0x4c8>)
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	4a7e      	ldr	r2, [pc, #504]	; (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800211c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002120:	6013      	str	r3, [r2, #0]
 8002122:	f7ff faff 	bl	8001724 <HAL_GetTick>
 8002126:	6138      	str	r0, [r7, #16]
 8002128:	e008      	b.n	800213c <HAL_RCC_OscConfig+0x2f0>
 800212a:	f7ff fafb 	bl	8001724 <HAL_GetTick>
 800212e:	4602      	mov	r2, r0
 8002130:	693b      	ldr	r3, [r7, #16]
 8002132:	1ad3      	subs	r3, r2, r3
 8002134:	2b64      	cmp	r3, #100	; 0x64
 8002136:	d901      	bls.n	800213c <HAL_RCC_OscConfig+0x2f0>
 8002138:	2303      	movs	r3, #3
 800213a:	e103      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 800213c:	4b75      	ldr	r3, [pc, #468]	; (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002144:	2b00      	cmp	r3, #0
 8002146:	d0f0      	beq.n	800212a <HAL_RCC_OscConfig+0x2de>
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	68db      	ldr	r3, [r3, #12]
 800214c:	2b01      	cmp	r3, #1
 800214e:	d106      	bne.n	800215e <HAL_RCC_OscConfig+0x312>
 8002150:	4b6f      	ldr	r3, [pc, #444]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002152:	6a1b      	ldr	r3, [r3, #32]
 8002154:	4a6e      	ldr	r2, [pc, #440]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002156:	f043 0301 	orr.w	r3, r3, #1
 800215a:	6213      	str	r3, [r2, #32]
 800215c:	e02d      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	68db      	ldr	r3, [r3, #12]
 8002162:	2b00      	cmp	r3, #0
 8002164:	d10c      	bne.n	8002180 <HAL_RCC_OscConfig+0x334>
 8002166:	4b6a      	ldr	r3, [pc, #424]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002168:	6a1b      	ldr	r3, [r3, #32]
 800216a:	4a69      	ldr	r2, [pc, #420]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800216c:	f023 0301 	bic.w	r3, r3, #1
 8002170:	6213      	str	r3, [r2, #32]
 8002172:	4b67      	ldr	r3, [pc, #412]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002174:	6a1b      	ldr	r3, [r3, #32]
 8002176:	4a66      	ldr	r2, [pc, #408]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002178:	f023 0304 	bic.w	r3, r3, #4
 800217c:	6213      	str	r3, [r2, #32]
 800217e:	e01c      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	68db      	ldr	r3, [r3, #12]
 8002184:	2b05      	cmp	r3, #5
 8002186:	d10c      	bne.n	80021a2 <HAL_RCC_OscConfig+0x356>
 8002188:	4b61      	ldr	r3, [pc, #388]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800218a:	6a1b      	ldr	r3, [r3, #32]
 800218c:	4a60      	ldr	r2, [pc, #384]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800218e:	f043 0304 	orr.w	r3, r3, #4
 8002192:	6213      	str	r3, [r2, #32]
 8002194:	4b5e      	ldr	r3, [pc, #376]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002196:	6a1b      	ldr	r3, [r3, #32]
 8002198:	4a5d      	ldr	r2, [pc, #372]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800219a:	f043 0301 	orr.w	r3, r3, #1
 800219e:	6213      	str	r3, [r2, #32]
 80021a0:	e00b      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 80021a2:	4b5b      	ldr	r3, [pc, #364]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021a4:	6a1b      	ldr	r3, [r3, #32]
 80021a6:	4a5a      	ldr	r2, [pc, #360]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021a8:	f023 0301 	bic.w	r3, r3, #1
 80021ac:	6213      	str	r3, [r2, #32]
 80021ae:	4b58      	ldr	r3, [pc, #352]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021b0:	6a1b      	ldr	r3, [r3, #32]
 80021b2:	4a57      	ldr	r2, [pc, #348]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021b4:	f023 0304 	bic.w	r3, r3, #4
 80021b8:	6213      	str	r3, [r2, #32]
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	68db      	ldr	r3, [r3, #12]
 80021be:	2b00      	cmp	r3, #0
 80021c0:	d015      	beq.n	80021ee <HAL_RCC_OscConfig+0x3a2>
 80021c2:	f7ff faaf 	bl	8001724 <HAL_GetTick>
 80021c6:	6138      	str	r0, [r7, #16]
 80021c8:	e00a      	b.n	80021e0 <HAL_RCC_OscConfig+0x394>
 80021ca:	f7ff faab 	bl	8001724 <HAL_GetTick>
 80021ce:	4602      	mov	r2, r0
 80021d0:	693b      	ldr	r3, [r7, #16]
 80021d2:	1ad3      	subs	r3, r2, r3
 80021d4:	f241 3288 	movw	r2, #5000	; 0x1388
 80021d8:	4293      	cmp	r3, r2
 80021da:	d901      	bls.n	80021e0 <HAL_RCC_OscConfig+0x394>
 80021dc:	2303      	movs	r3, #3
 80021de:	e0b1      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80021e0:	4b4b      	ldr	r3, [pc, #300]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021e2:	6a1b      	ldr	r3, [r3, #32]
 80021e4:	f003 0302 	and.w	r3, r3, #2
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d0ee      	beq.n	80021ca <HAL_RCC_OscConfig+0x37e>
 80021ec:	e014      	b.n	8002218 <HAL_RCC_OscConfig+0x3cc>
 80021ee:	f7ff fa99 	bl	8001724 <HAL_GetTick>
 80021f2:	6138      	str	r0, [r7, #16]
 80021f4:	e00a      	b.n	800220c <HAL_RCC_OscConfig+0x3c0>
 80021f6:	f7ff fa95 	bl	8001724 <HAL_GetTick>
 80021fa:	4602      	mov	r2, r0
 80021fc:	693b      	ldr	r3, [r7, #16]
 80021fe:	1ad3      	subs	r3, r2, r3
 8002200:	f241 3288 	movw	r2, #5000	; 0x1388
 8002204:	4293      	cmp	r3, r2
 8002206:	d901      	bls.n	800220c <HAL_RCC_OscConfig+0x3c0>
 8002208:	2303      	movs	r3, #3
 800220a:	e09b      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 800220c:	4b40      	ldr	r3, [pc, #256]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800220e:	6a1b      	ldr	r3, [r3, #32]
 8002210:	f003 0302 	and.w	r3, r3, #2
 8002214:	2b00      	cmp	r3, #0
 8002216:	d1ee      	bne.n	80021f6 <HAL_RCC_OscConfig+0x3aa>
 8002218:	7dfb      	ldrb	r3, [r7, #23]
 800221a:	2b01      	cmp	r3, #1
 800221c:	d105      	bne.n	800222a <HAL_RCC_OscConfig+0x3de>
 800221e:	4b3c      	ldr	r3, [pc, #240]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002220:	69db      	ldr	r3, [r3, #28]
 8002222:	4a3b      	ldr	r2, [pc, #236]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002224:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002228:	61d3      	str	r3, [r2, #28]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	69db      	ldr	r3, [r3, #28]
 800222e:	2b00      	cmp	r3, #0
 8002230:	f000 8087 	beq.w	8002342 <HAL_RCC_OscConfig+0x4f6>
 8002234:	4b36      	ldr	r3, [pc, #216]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002236:	685b      	ldr	r3, [r3, #4]
 8002238:	f003 030c 	and.w	r3, r3, #12
 800223c:	2b08      	cmp	r3, #8
 800223e:	d061      	beq.n	8002304 <HAL_RCC_OscConfig+0x4b8>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	69db      	ldr	r3, [r3, #28]
 8002244:	2b02      	cmp	r3, #2
 8002246:	d146      	bne.n	80022d6 <HAL_RCC_OscConfig+0x48a>
 8002248:	4b33      	ldr	r3, [pc, #204]	; (8002318 <HAL_RCC_OscConfig+0x4cc>)
 800224a:	2200      	movs	r2, #0
 800224c:	601a      	str	r2, [r3, #0]
 800224e:	f7ff fa69 	bl	8001724 <HAL_GetTick>
 8002252:	6138      	str	r0, [r7, #16]
 8002254:	e008      	b.n	8002268 <HAL_RCC_OscConfig+0x41c>
 8002256:	f7ff fa65 	bl	8001724 <HAL_GetTick>
 800225a:	4602      	mov	r2, r0
 800225c:	693b      	ldr	r3, [r7, #16]
 800225e:	1ad3      	subs	r3, r2, r3
 8002260:	2b02      	cmp	r3, #2
 8002262:	d901      	bls.n	8002268 <HAL_RCC_OscConfig+0x41c>
 8002264:	2303      	movs	r3, #3
 8002266:	e06d      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002268:	4b29      	ldr	r3, [pc, #164]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800226a:	681b      	ldr	r3, [r3, #0]
 800226c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002270:	2b00      	cmp	r3, #0
 8002272:	d1f0      	bne.n	8002256 <HAL_RCC_OscConfig+0x40a>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	6a1b      	ldr	r3, [r3, #32]
 8002278:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800227c:	d108      	bne.n	8002290 <HAL_RCC_OscConfig+0x444>
 800227e:	4b24      	ldr	r3, [pc, #144]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002280:	685b      	ldr	r3, [r3, #4]
 8002282:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	689b      	ldr	r3, [r3, #8]
 800228a:	4921      	ldr	r1, [pc, #132]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800228c:	4313      	orrs	r3, r2
 800228e:	604b      	str	r3, [r1, #4]
 8002290:	4b1f      	ldr	r3, [pc, #124]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002292:	685b      	ldr	r3, [r3, #4]
 8002294:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	6a19      	ldr	r1, [r3, #32]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a0:	430b      	orrs	r3, r1
 80022a2:	491b      	ldr	r1, [pc, #108]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022a4:	4313      	orrs	r3, r2
 80022a6:	604b      	str	r3, [r1, #4]
 80022a8:	4b1b      	ldr	r3, [pc, #108]	; (8002318 <HAL_RCC_OscConfig+0x4cc>)
 80022aa:	2201      	movs	r2, #1
 80022ac:	601a      	str	r2, [r3, #0]
 80022ae:	f7ff fa39 	bl	8001724 <HAL_GetTick>
 80022b2:	6138      	str	r0, [r7, #16]
 80022b4:	e008      	b.n	80022c8 <HAL_RCC_OscConfig+0x47c>
 80022b6:	f7ff fa35 	bl	8001724 <HAL_GetTick>
 80022ba:	4602      	mov	r2, r0
 80022bc:	693b      	ldr	r3, [r7, #16]
 80022be:	1ad3      	subs	r3, r2, r3
 80022c0:	2b02      	cmp	r3, #2
 80022c2:	d901      	bls.n	80022c8 <HAL_RCC_OscConfig+0x47c>
 80022c4:	2303      	movs	r3, #3
 80022c6:	e03d      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80022c8:	4b11      	ldr	r3, [pc, #68]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d0f0      	beq.n	80022b6 <HAL_RCC_OscConfig+0x46a>
 80022d4:	e035      	b.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 80022d6:	4b10      	ldr	r3, [pc, #64]	; (8002318 <HAL_RCC_OscConfig+0x4cc>)
 80022d8:	2200      	movs	r2, #0
 80022da:	601a      	str	r2, [r3, #0]
 80022dc:	f7ff fa22 	bl	8001724 <HAL_GetTick>
 80022e0:	6138      	str	r0, [r7, #16]
 80022e2:	e008      	b.n	80022f6 <HAL_RCC_OscConfig+0x4aa>
 80022e4:	f7ff fa1e 	bl	8001724 <HAL_GetTick>
 80022e8:	4602      	mov	r2, r0
 80022ea:	693b      	ldr	r3, [r7, #16]
 80022ec:	1ad3      	subs	r3, r2, r3
 80022ee:	2b02      	cmp	r3, #2
 80022f0:	d901      	bls.n	80022f6 <HAL_RCC_OscConfig+0x4aa>
 80022f2:	2303      	movs	r3, #3
 80022f4:	e026      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80022f6:	4b06      	ldr	r3, [pc, #24]	; (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80022fe:	2b00      	cmp	r3, #0
 8002300:	d1f0      	bne.n	80022e4 <HAL_RCC_OscConfig+0x498>
 8002302:	e01e      	b.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	69db      	ldr	r3, [r3, #28]
 8002308:	2b01      	cmp	r3, #1
 800230a:	d107      	bne.n	800231c <HAL_RCC_OscConfig+0x4d0>
 800230c:	2301      	movs	r3, #1
 800230e:	e019      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002310:	40021000 	.word	0x40021000
 8002314:	40007000 	.word	0x40007000
 8002318:	42420060 	.word	0x42420060
 800231c:	4b0b      	ldr	r3, [pc, #44]	; (800234c <HAL_RCC_OscConfig+0x500>)
 800231e:	685b      	ldr	r3, [r3, #4]
 8002320:	60fb      	str	r3, [r7, #12]
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	6a1b      	ldr	r3, [r3, #32]
 800232c:	429a      	cmp	r2, r3
 800232e:	d106      	bne.n	800233e <HAL_RCC_OscConfig+0x4f2>
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800233a:	429a      	cmp	r2, r3
 800233c:	d001      	beq.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 800233e:	2301      	movs	r3, #1
 8002340:	e000      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002342:	2300      	movs	r3, #0
 8002344:	4618      	mov	r0, r3
 8002346:	3718      	adds	r7, #24
 8002348:	46bd      	mov	sp, r7
 800234a:	bd80      	pop	{r7, pc}
 800234c:	40021000 	.word	0x40021000

08002350 <HAL_RCC_ClockConfig>:
 8002350:	b580      	push	{r7, lr}
 8002352:	b084      	sub	sp, #16
 8002354:	af00      	add	r7, sp, #0
 8002356:	6078      	str	r0, [r7, #4]
 8002358:	6039      	str	r1, [r7, #0]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	2b00      	cmp	r3, #0
 800235e:	d101      	bne.n	8002364 <HAL_RCC_ClockConfig+0x14>
 8002360:	2301      	movs	r3, #1
 8002362:	e0d0      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002364:	4b6a      	ldr	r3, [pc, #424]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f003 0307 	and.w	r3, r3, #7
 800236c:	683a      	ldr	r2, [r7, #0]
 800236e:	429a      	cmp	r2, r3
 8002370:	d910      	bls.n	8002394 <HAL_RCC_ClockConfig+0x44>
 8002372:	4b67      	ldr	r3, [pc, #412]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f023 0207 	bic.w	r2, r3, #7
 800237a:	4965      	ldr	r1, [pc, #404]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 800237c:	683b      	ldr	r3, [r7, #0]
 800237e:	4313      	orrs	r3, r2
 8002380:	600b      	str	r3, [r1, #0]
 8002382:	4b63      	ldr	r3, [pc, #396]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	f003 0307 	and.w	r3, r3, #7
 800238a:	683a      	ldr	r2, [r7, #0]
 800238c:	429a      	cmp	r2, r3
 800238e:	d001      	beq.n	8002394 <HAL_RCC_ClockConfig+0x44>
 8002390:	2301      	movs	r3, #1
 8002392:	e0b8      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f003 0302 	and.w	r3, r3, #2
 800239c:	2b00      	cmp	r3, #0
 800239e:	d020      	beq.n	80023e2 <HAL_RCC_ClockConfig+0x92>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 0304 	and.w	r3, r3, #4
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d005      	beq.n	80023b8 <HAL_RCC_ClockConfig+0x68>
 80023ac:	4b59      	ldr	r3, [pc, #356]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	4a58      	ldr	r2, [pc, #352]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023b2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80023b6:	6053      	str	r3, [r2, #4]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	f003 0308 	and.w	r3, r3, #8
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d005      	beq.n	80023d0 <HAL_RCC_ClockConfig+0x80>
 80023c4:	4b53      	ldr	r3, [pc, #332]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023c6:	685b      	ldr	r3, [r3, #4]
 80023c8:	4a52      	ldr	r2, [pc, #328]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023ca:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80023ce:	6053      	str	r3, [r2, #4]
 80023d0:	4b50      	ldr	r3, [pc, #320]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023d2:	685b      	ldr	r3, [r3, #4]
 80023d4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	689b      	ldr	r3, [r3, #8]
 80023dc:	494d      	ldr	r1, [pc, #308]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023de:	4313      	orrs	r3, r2
 80023e0:	604b      	str	r3, [r1, #4]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	f003 0301 	and.w	r3, r3, #1
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d040      	beq.n	8002470 <HAL_RCC_ClockConfig+0x120>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	2b01      	cmp	r3, #1
 80023f4:	d107      	bne.n	8002406 <HAL_RCC_ClockConfig+0xb6>
 80023f6:	4b47      	ldr	r3, [pc, #284]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d115      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 8002402:	2301      	movs	r3, #1
 8002404:	e07f      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	685b      	ldr	r3, [r3, #4]
 800240a:	2b02      	cmp	r3, #2
 800240c:	d107      	bne.n	800241e <HAL_RCC_ClockConfig+0xce>
 800240e:	4b41      	ldr	r3, [pc, #260]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002416:	2b00      	cmp	r3, #0
 8002418:	d109      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 800241a:	2301      	movs	r3, #1
 800241c:	e073      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800241e:	4b3d      	ldr	r3, [pc, #244]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f003 0302 	and.w	r3, r3, #2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d101      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 800242a:	2301      	movs	r3, #1
 800242c:	e06b      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800242e:	4b39      	ldr	r3, [pc, #228]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002430:	685b      	ldr	r3, [r3, #4]
 8002432:	f023 0203 	bic.w	r2, r3, #3
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	685b      	ldr	r3, [r3, #4]
 800243a:	4936      	ldr	r1, [pc, #216]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 800243c:	4313      	orrs	r3, r2
 800243e:	604b      	str	r3, [r1, #4]
 8002440:	f7ff f970 	bl	8001724 <HAL_GetTick>
 8002444:	60f8      	str	r0, [r7, #12]
 8002446:	e00a      	b.n	800245e <HAL_RCC_ClockConfig+0x10e>
 8002448:	f7ff f96c 	bl	8001724 <HAL_GetTick>
 800244c:	4602      	mov	r2, r0
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	1ad3      	subs	r3, r2, r3
 8002452:	f241 3288 	movw	r2, #5000	; 0x1388
 8002456:	4293      	cmp	r3, r2
 8002458:	d901      	bls.n	800245e <HAL_RCC_ClockConfig+0x10e>
 800245a:	2303      	movs	r3, #3
 800245c:	e053      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800245e:	4b2d      	ldr	r3, [pc, #180]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002460:	685b      	ldr	r3, [r3, #4]
 8002462:	f003 020c 	and.w	r2, r3, #12
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	009b      	lsls	r3, r3, #2
 800246c:	429a      	cmp	r2, r3
 800246e:	d1eb      	bne.n	8002448 <HAL_RCC_ClockConfig+0xf8>
 8002470:	4b27      	ldr	r3, [pc, #156]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 0307 	and.w	r3, r3, #7
 8002478:	683a      	ldr	r2, [r7, #0]
 800247a:	429a      	cmp	r2, r3
 800247c:	d210      	bcs.n	80024a0 <HAL_RCC_ClockConfig+0x150>
 800247e:	4b24      	ldr	r3, [pc, #144]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	f023 0207 	bic.w	r2, r3, #7
 8002486:	4922      	ldr	r1, [pc, #136]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002488:	683b      	ldr	r3, [r7, #0]
 800248a:	4313      	orrs	r3, r2
 800248c:	600b      	str	r3, [r1, #0]
 800248e:	4b20      	ldr	r3, [pc, #128]	; (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f003 0307 	and.w	r3, r3, #7
 8002496:	683a      	ldr	r2, [r7, #0]
 8002498:	429a      	cmp	r2, r3
 800249a:	d001      	beq.n	80024a0 <HAL_RCC_ClockConfig+0x150>
 800249c:	2301      	movs	r3, #1
 800249e:	e032      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	f003 0304 	and.w	r3, r3, #4
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d008      	beq.n	80024be <HAL_RCC_ClockConfig+0x16e>
 80024ac:	4b19      	ldr	r3, [pc, #100]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	68db      	ldr	r3, [r3, #12]
 80024b8:	4916      	ldr	r1, [pc, #88]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024ba:	4313      	orrs	r3, r2
 80024bc:	604b      	str	r3, [r1, #4]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0308 	and.w	r3, r3, #8
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d009      	beq.n	80024de <HAL_RCC_ClockConfig+0x18e>
 80024ca:	4b12      	ldr	r3, [pc, #72]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024cc:	685b      	ldr	r3, [r3, #4]
 80024ce:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	691b      	ldr	r3, [r3, #16]
 80024d6:	00db      	lsls	r3, r3, #3
 80024d8:	490e      	ldr	r1, [pc, #56]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024da:	4313      	orrs	r3, r2
 80024dc:	604b      	str	r3, [r1, #4]
 80024de:	f000 f821 	bl	8002524 <HAL_RCC_GetSysClockFreq>
 80024e2:	4602      	mov	r2, r0
 80024e4:	4b0b      	ldr	r3, [pc, #44]	; (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024e6:	685b      	ldr	r3, [r3, #4]
 80024e8:	091b      	lsrs	r3, r3, #4
 80024ea:	f003 030f 	and.w	r3, r3, #15
 80024ee:	490a      	ldr	r1, [pc, #40]	; (8002518 <HAL_RCC_ClockConfig+0x1c8>)
 80024f0:	5ccb      	ldrb	r3, [r1, r3]
 80024f2:	fa22 f303 	lsr.w	r3, r2, r3
 80024f6:	4a09      	ldr	r2, [pc, #36]	; (800251c <HAL_RCC_ClockConfig+0x1cc>)
 80024f8:	6013      	str	r3, [r2, #0]
 80024fa:	4b09      	ldr	r3, [pc, #36]	; (8002520 <HAL_RCC_ClockConfig+0x1d0>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	4618      	mov	r0, r3
 8002500:	f7ff f8ce 	bl	80016a0 <HAL_InitTick>
 8002504:	2300      	movs	r3, #0
 8002506:	4618      	mov	r0, r3
 8002508:	3710      	adds	r7, #16
 800250a:	46bd      	mov	sp, r7
 800250c:	bd80      	pop	{r7, pc}
 800250e:	bf00      	nop
 8002510:	40022000 	.word	0x40022000
 8002514:	40021000 	.word	0x40021000
 8002518:	0800487c 	.word	0x0800487c
 800251c:	20000024 	.word	0x20000024
 8002520:	20000028 	.word	0x20000028

08002524 <HAL_RCC_GetSysClockFreq>:
 8002524:	b490      	push	{r4, r7}
 8002526:	b08a      	sub	sp, #40	; 0x28
 8002528:	af00      	add	r7, sp, #0
 800252a:	4b29      	ldr	r3, [pc, #164]	; (80025d0 <HAL_RCC_GetSysClockFreq+0xac>)
 800252c:	1d3c      	adds	r4, r7, #4
 800252e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002530:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002534:	f240 2301 	movw	r3, #513	; 0x201
 8002538:	803b      	strh	r3, [r7, #0]
 800253a:	2300      	movs	r3, #0
 800253c:	61fb      	str	r3, [r7, #28]
 800253e:	2300      	movs	r3, #0
 8002540:	61bb      	str	r3, [r7, #24]
 8002542:	2300      	movs	r3, #0
 8002544:	627b      	str	r3, [r7, #36]	; 0x24
 8002546:	2300      	movs	r3, #0
 8002548:	617b      	str	r3, [r7, #20]
 800254a:	2300      	movs	r3, #0
 800254c:	623b      	str	r3, [r7, #32]
 800254e:	4b21      	ldr	r3, [pc, #132]	; (80025d4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002550:	685b      	ldr	r3, [r3, #4]
 8002552:	61fb      	str	r3, [r7, #28]
 8002554:	69fb      	ldr	r3, [r7, #28]
 8002556:	f003 030c 	and.w	r3, r3, #12
 800255a:	2b04      	cmp	r3, #4
 800255c:	d002      	beq.n	8002564 <HAL_RCC_GetSysClockFreq+0x40>
 800255e:	2b08      	cmp	r3, #8
 8002560:	d003      	beq.n	800256a <HAL_RCC_GetSysClockFreq+0x46>
 8002562:	e02b      	b.n	80025bc <HAL_RCC_GetSysClockFreq+0x98>
 8002564:	4b1c      	ldr	r3, [pc, #112]	; (80025d8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002566:	623b      	str	r3, [r7, #32]
 8002568:	e02b      	b.n	80025c2 <HAL_RCC_GetSysClockFreq+0x9e>
 800256a:	69fb      	ldr	r3, [r7, #28]
 800256c:	0c9b      	lsrs	r3, r3, #18
 800256e:	f003 030f 	and.w	r3, r3, #15
 8002572:	3328      	adds	r3, #40	; 0x28
 8002574:	443b      	add	r3, r7
 8002576:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800257a:	617b      	str	r3, [r7, #20]
 800257c:	69fb      	ldr	r3, [r7, #28]
 800257e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002582:	2b00      	cmp	r3, #0
 8002584:	d012      	beq.n	80025ac <HAL_RCC_GetSysClockFreq+0x88>
 8002586:	4b13      	ldr	r3, [pc, #76]	; (80025d4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002588:	685b      	ldr	r3, [r3, #4]
 800258a:	0c5b      	lsrs	r3, r3, #17
 800258c:	f003 0301 	and.w	r3, r3, #1
 8002590:	3328      	adds	r3, #40	; 0x28
 8002592:	443b      	add	r3, r7
 8002594:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002598:	61bb      	str	r3, [r7, #24]
 800259a:	697b      	ldr	r3, [r7, #20]
 800259c:	4a0e      	ldr	r2, [pc, #56]	; (80025d8 <HAL_RCC_GetSysClockFreq+0xb4>)
 800259e:	fb03 f202 	mul.w	r2, r3, r2
 80025a2:	69bb      	ldr	r3, [r7, #24]
 80025a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80025a8:	627b      	str	r3, [r7, #36]	; 0x24
 80025aa:	e004      	b.n	80025b6 <HAL_RCC_GetSysClockFreq+0x92>
 80025ac:	697b      	ldr	r3, [r7, #20]
 80025ae:	4a0b      	ldr	r2, [pc, #44]	; (80025dc <HAL_RCC_GetSysClockFreq+0xb8>)
 80025b0:	fb02 f303 	mul.w	r3, r2, r3
 80025b4:	627b      	str	r3, [r7, #36]	; 0x24
 80025b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025b8:	623b      	str	r3, [r7, #32]
 80025ba:	e002      	b.n	80025c2 <HAL_RCC_GetSysClockFreq+0x9e>
 80025bc:	4b06      	ldr	r3, [pc, #24]	; (80025d8 <HAL_RCC_GetSysClockFreq+0xb4>)
 80025be:	623b      	str	r3, [r7, #32]
 80025c0:	bf00      	nop
 80025c2:	6a3b      	ldr	r3, [r7, #32]
 80025c4:	4618      	mov	r0, r3
 80025c6:	3728      	adds	r7, #40	; 0x28
 80025c8:	46bd      	mov	sp, r7
 80025ca:	bc90      	pop	{r4, r7}
 80025cc:	4770      	bx	lr
 80025ce:	bf00      	nop
 80025d0:	0800486c 	.word	0x0800486c
 80025d4:	40021000 	.word	0x40021000
 80025d8:	007a1200 	.word	0x007a1200
 80025dc:	003d0900 	.word	0x003d0900

080025e0 <HAL_RCC_GetHCLKFreq>:
 80025e0:	b480      	push	{r7}
 80025e2:	af00      	add	r7, sp, #0
 80025e4:	4b02      	ldr	r3, [pc, #8]	; (80025f0 <HAL_RCC_GetHCLKFreq+0x10>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	4618      	mov	r0, r3
 80025ea:	46bd      	mov	sp, r7
 80025ec:	bc80      	pop	{r7}
 80025ee:	4770      	bx	lr
 80025f0:	20000024 	.word	0x20000024

080025f4 <HAL_RCC_GetPCLK1Freq>:
 80025f4:	b580      	push	{r7, lr}
 80025f6:	af00      	add	r7, sp, #0
 80025f8:	f7ff fff2 	bl	80025e0 <HAL_RCC_GetHCLKFreq>
 80025fc:	4602      	mov	r2, r0
 80025fe:	4b05      	ldr	r3, [pc, #20]	; (8002614 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002600:	685b      	ldr	r3, [r3, #4]
 8002602:	0a1b      	lsrs	r3, r3, #8
 8002604:	f003 0307 	and.w	r3, r3, #7
 8002608:	4903      	ldr	r1, [pc, #12]	; (8002618 <HAL_RCC_GetPCLK1Freq+0x24>)
 800260a:	5ccb      	ldrb	r3, [r1, r3]
 800260c:	fa22 f303 	lsr.w	r3, r2, r3
 8002610:	4618      	mov	r0, r3
 8002612:	bd80      	pop	{r7, pc}
 8002614:	40021000 	.word	0x40021000
 8002618:	0800488c 	.word	0x0800488c

0800261c <HAL_RCC_GetPCLK2Freq>:
 800261c:	b580      	push	{r7, lr}
 800261e:	af00      	add	r7, sp, #0
 8002620:	f7ff ffde 	bl	80025e0 <HAL_RCC_GetHCLKFreq>
 8002624:	4602      	mov	r2, r0
 8002626:	4b05      	ldr	r3, [pc, #20]	; (800263c <HAL_RCC_GetPCLK2Freq+0x20>)
 8002628:	685b      	ldr	r3, [r3, #4]
 800262a:	0adb      	lsrs	r3, r3, #11
 800262c:	f003 0307 	and.w	r3, r3, #7
 8002630:	4903      	ldr	r1, [pc, #12]	; (8002640 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002632:	5ccb      	ldrb	r3, [r1, r3]
 8002634:	fa22 f303 	lsr.w	r3, r2, r3
 8002638:	4618      	mov	r0, r3
 800263a:	bd80      	pop	{r7, pc}
 800263c:	40021000 	.word	0x40021000
 8002640:	0800488c 	.word	0x0800488c

08002644 <RCC_Delay>:
 8002644:	b480      	push	{r7}
 8002646:	b085      	sub	sp, #20
 8002648:	af00      	add	r7, sp, #0
 800264a:	6078      	str	r0, [r7, #4]
 800264c:	4b0a      	ldr	r3, [pc, #40]	; (8002678 <RCC_Delay+0x34>)
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	4a0a      	ldr	r2, [pc, #40]	; (800267c <RCC_Delay+0x38>)
 8002652:	fba2 2303 	umull	r2, r3, r2, r3
 8002656:	0a5b      	lsrs	r3, r3, #9
 8002658:	687a      	ldr	r2, [r7, #4]
 800265a:	fb02 f303 	mul.w	r3, r2, r3
 800265e:	60fb      	str	r3, [r7, #12]
 8002660:	bf00      	nop
 8002662:	68fb      	ldr	r3, [r7, #12]
 8002664:	1e5a      	subs	r2, r3, #1
 8002666:	60fa      	str	r2, [r7, #12]
 8002668:	2b00      	cmp	r3, #0
 800266a:	d1f9      	bne.n	8002660 <RCC_Delay+0x1c>
 800266c:	bf00      	nop
 800266e:	bf00      	nop
 8002670:	3714      	adds	r7, #20
 8002672:	46bd      	mov	sp, r7
 8002674:	bc80      	pop	{r7}
 8002676:	4770      	bx	lr
 8002678:	20000024 	.word	0x20000024
 800267c:	10624dd3 	.word	0x10624dd3

08002680 <HAL_TIM_Base_Init>:
 8002680:	b580      	push	{r7, lr}
 8002682:	b082      	sub	sp, #8
 8002684:	af00      	add	r7, sp, #0
 8002686:	6078      	str	r0, [r7, #4]
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	2b00      	cmp	r3, #0
 800268c:	d101      	bne.n	8002692 <HAL_TIM_Base_Init+0x12>
 800268e:	2301      	movs	r3, #1
 8002690:	e041      	b.n	8002716 <HAL_TIM_Base_Init+0x96>
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002698:	b2db      	uxtb	r3, r3
 800269a:	2b00      	cmp	r3, #0
 800269c:	d106      	bne.n	80026ac <HAL_TIM_Base_Init+0x2c>
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	2200      	movs	r2, #0
 80026a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026a6:	6878      	ldr	r0, [r7, #4]
 80026a8:	f7fe fd3c 	bl	8001124 <HAL_TIM_Base_MspInit>
 80026ac:	687b      	ldr	r3, [r7, #4]
 80026ae:	2202      	movs	r2, #2
 80026b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681a      	ldr	r2, [r3, #0]
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	3304      	adds	r3, #4
 80026bc:	4619      	mov	r1, r3
 80026be:	4610      	mov	r0, r2
 80026c0:	f000 fc28 	bl	8002f14 <TIM_Base_SetConfig>
 80026c4:	687b      	ldr	r3, [r7, #4]
 80026c6:	2201      	movs	r2, #1
 80026c8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	2201      	movs	r2, #1
 80026d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80026d4:	687b      	ldr	r3, [r7, #4]
 80026d6:	2201      	movs	r2, #1
 80026d8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	2201      	movs	r2, #1
 80026e0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80026e4:	687b      	ldr	r3, [r7, #4]
 80026e6:	2201      	movs	r2, #1
 80026e8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80026ec:	687b      	ldr	r3, [r7, #4]
 80026ee:	2201      	movs	r2, #1
 80026f0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80026f4:	687b      	ldr	r3, [r7, #4]
 80026f6:	2201      	movs	r2, #1
 80026f8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	2201      	movs	r2, #1
 8002700:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002704:	687b      	ldr	r3, [r7, #4]
 8002706:	2201      	movs	r2, #1
 8002708:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	2201      	movs	r2, #1
 8002710:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002714:	2300      	movs	r3, #0
 8002716:	4618      	mov	r0, r3
 8002718:	3708      	adds	r7, #8
 800271a:	46bd      	mov	sp, r7
 800271c:	bd80      	pop	{r7, pc}
	...

08002720 <HAL_TIM_Base_Start_IT>:
 8002720:	b480      	push	{r7}
 8002722:	b085      	sub	sp, #20
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800272e:	b2db      	uxtb	r3, r3
 8002730:	2b01      	cmp	r3, #1
 8002732:	d001      	beq.n	8002738 <HAL_TIM_Base_Start_IT+0x18>
 8002734:	2301      	movs	r3, #1
 8002736:	e03a      	b.n	80027ae <HAL_TIM_Base_Start_IT+0x8e>
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	2202      	movs	r2, #2
 800273c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	681b      	ldr	r3, [r3, #0]
 8002744:	68da      	ldr	r2, [r3, #12]
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	681b      	ldr	r3, [r3, #0]
 800274a:	f042 0201 	orr.w	r2, r2, #1
 800274e:	60da      	str	r2, [r3, #12]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	4a18      	ldr	r2, [pc, #96]	; (80027b8 <HAL_TIM_Base_Start_IT+0x98>)
 8002756:	4293      	cmp	r3, r2
 8002758:	d00e      	beq.n	8002778 <HAL_TIM_Base_Start_IT+0x58>
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002762:	d009      	beq.n	8002778 <HAL_TIM_Base_Start_IT+0x58>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	4a14      	ldr	r2, [pc, #80]	; (80027bc <HAL_TIM_Base_Start_IT+0x9c>)
 800276a:	4293      	cmp	r3, r2
 800276c:	d004      	beq.n	8002778 <HAL_TIM_Base_Start_IT+0x58>
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	4a13      	ldr	r2, [pc, #76]	; (80027c0 <HAL_TIM_Base_Start_IT+0xa0>)
 8002774:	4293      	cmp	r3, r2
 8002776:	d111      	bne.n	800279c <HAL_TIM_Base_Start_IT+0x7c>
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	689b      	ldr	r3, [r3, #8]
 800277e:	f003 0307 	and.w	r3, r3, #7
 8002782:	60fb      	str	r3, [r7, #12]
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	2b06      	cmp	r3, #6
 8002788:	d010      	beq.n	80027ac <HAL_TIM_Base_Start_IT+0x8c>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	681b      	ldr	r3, [r3, #0]
 800278e:	681a      	ldr	r2, [r3, #0]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	f042 0201 	orr.w	r2, r2, #1
 8002798:	601a      	str	r2, [r3, #0]
 800279a:	e007      	b.n	80027ac <HAL_TIM_Base_Start_IT+0x8c>
 800279c:	687b      	ldr	r3, [r7, #4]
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	681a      	ldr	r2, [r3, #0]
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	681b      	ldr	r3, [r3, #0]
 80027a6:	f042 0201 	orr.w	r2, r2, #1
 80027aa:	601a      	str	r2, [r3, #0]
 80027ac:	2300      	movs	r3, #0
 80027ae:	4618      	mov	r0, r3
 80027b0:	3714      	adds	r7, #20
 80027b2:	46bd      	mov	sp, r7
 80027b4:	bc80      	pop	{r7}
 80027b6:	4770      	bx	lr
 80027b8:	40012c00 	.word	0x40012c00
 80027bc:	40000400 	.word	0x40000400
 80027c0:	40000800 	.word	0x40000800

080027c4 <HAL_TIM_PWM_Init>:
 80027c4:	b580      	push	{r7, lr}
 80027c6:	b082      	sub	sp, #8
 80027c8:	af00      	add	r7, sp, #0
 80027ca:	6078      	str	r0, [r7, #4]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	d101      	bne.n	80027d6 <HAL_TIM_PWM_Init+0x12>
 80027d2:	2301      	movs	r3, #1
 80027d4:	e041      	b.n	800285a <HAL_TIM_PWM_Init+0x96>
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80027dc:	b2db      	uxtb	r3, r3
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d106      	bne.n	80027f0 <HAL_TIM_PWM_Init+0x2c>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	2200      	movs	r2, #0
 80027e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80027ea:	6878      	ldr	r0, [r7, #4]
 80027ec:	f000 f839 	bl	8002862 <HAL_TIM_PWM_MspInit>
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	2202      	movs	r2, #2
 80027f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681a      	ldr	r2, [r3, #0]
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	3304      	adds	r3, #4
 8002800:	4619      	mov	r1, r3
 8002802:	4610      	mov	r0, r2
 8002804:	f000 fb86 	bl	8002f14 <TIM_Base_SetConfig>
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	2201      	movs	r2, #1
 800280c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	2201      	movs	r2, #1
 8002814:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	2201      	movs	r2, #1
 800281c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	2201      	movs	r2, #1
 8002824:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	2201      	movs	r2, #1
 800282c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	2201      	movs	r2, #1
 8002834:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	2201      	movs	r2, #1
 800283c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	2201      	movs	r2, #1
 8002844:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	2201      	movs	r2, #1
 800284c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	2201      	movs	r2, #1
 8002854:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002858:	2300      	movs	r3, #0
 800285a:	4618      	mov	r0, r3
 800285c:	3708      	adds	r7, #8
 800285e:	46bd      	mov	sp, r7
 8002860:	bd80      	pop	{r7, pc}

08002862 <HAL_TIM_PWM_MspInit>:
 8002862:	b480      	push	{r7}
 8002864:	b083      	sub	sp, #12
 8002866:	af00      	add	r7, sp, #0
 8002868:	6078      	str	r0, [r7, #4]
 800286a:	bf00      	nop
 800286c:	370c      	adds	r7, #12
 800286e:	46bd      	mov	sp, r7
 8002870:	bc80      	pop	{r7}
 8002872:	4770      	bx	lr

08002874 <HAL_TIM_PWM_Start>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b084      	sub	sp, #16
 8002878:	af00      	add	r7, sp, #0
 800287a:	6078      	str	r0, [r7, #4]
 800287c:	6039      	str	r1, [r7, #0]
 800287e:	683b      	ldr	r3, [r7, #0]
 8002880:	2b00      	cmp	r3, #0
 8002882:	d109      	bne.n	8002898 <HAL_TIM_PWM_Start+0x24>
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800288a:	b2db      	uxtb	r3, r3
 800288c:	2b01      	cmp	r3, #1
 800288e:	bf14      	ite	ne
 8002890:	2301      	movne	r3, #1
 8002892:	2300      	moveq	r3, #0
 8002894:	b2db      	uxtb	r3, r3
 8002896:	e022      	b.n	80028de <HAL_TIM_PWM_Start+0x6a>
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	2b04      	cmp	r3, #4
 800289c:	d109      	bne.n	80028b2 <HAL_TIM_PWM_Start+0x3e>
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80028a4:	b2db      	uxtb	r3, r3
 80028a6:	2b01      	cmp	r3, #1
 80028a8:	bf14      	ite	ne
 80028aa:	2301      	movne	r3, #1
 80028ac:	2300      	moveq	r3, #0
 80028ae:	b2db      	uxtb	r3, r3
 80028b0:	e015      	b.n	80028de <HAL_TIM_PWM_Start+0x6a>
 80028b2:	683b      	ldr	r3, [r7, #0]
 80028b4:	2b08      	cmp	r3, #8
 80028b6:	d109      	bne.n	80028cc <HAL_TIM_PWM_Start+0x58>
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80028be:	b2db      	uxtb	r3, r3
 80028c0:	2b01      	cmp	r3, #1
 80028c2:	bf14      	ite	ne
 80028c4:	2301      	movne	r3, #1
 80028c6:	2300      	moveq	r3, #0
 80028c8:	b2db      	uxtb	r3, r3
 80028ca:	e008      	b.n	80028de <HAL_TIM_PWM_Start+0x6a>
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80028d2:	b2db      	uxtb	r3, r3
 80028d4:	2b01      	cmp	r3, #1
 80028d6:	bf14      	ite	ne
 80028d8:	2301      	movne	r3, #1
 80028da:	2300      	moveq	r3, #0
 80028dc:	b2db      	uxtb	r3, r3
 80028de:	2b00      	cmp	r3, #0
 80028e0:	d001      	beq.n	80028e6 <HAL_TIM_PWM_Start+0x72>
 80028e2:	2301      	movs	r3, #1
 80028e4:	e05e      	b.n	80029a4 <HAL_TIM_PWM_Start+0x130>
 80028e6:	683b      	ldr	r3, [r7, #0]
 80028e8:	2b00      	cmp	r3, #0
 80028ea:	d104      	bne.n	80028f6 <HAL_TIM_PWM_Start+0x82>
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	2202      	movs	r2, #2
 80028f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80028f4:	e013      	b.n	800291e <HAL_TIM_PWM_Start+0xaa>
 80028f6:	683b      	ldr	r3, [r7, #0]
 80028f8:	2b04      	cmp	r3, #4
 80028fa:	d104      	bne.n	8002906 <HAL_TIM_PWM_Start+0x92>
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	2202      	movs	r2, #2
 8002900:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002904:	e00b      	b.n	800291e <HAL_TIM_PWM_Start+0xaa>
 8002906:	683b      	ldr	r3, [r7, #0]
 8002908:	2b08      	cmp	r3, #8
 800290a:	d104      	bne.n	8002916 <HAL_TIM_PWM_Start+0xa2>
 800290c:	687b      	ldr	r3, [r7, #4]
 800290e:	2202      	movs	r2, #2
 8002910:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002914:	e003      	b.n	800291e <HAL_TIM_PWM_Start+0xaa>
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	2202      	movs	r2, #2
 800291a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800291e:	687b      	ldr	r3, [r7, #4]
 8002920:	681b      	ldr	r3, [r3, #0]
 8002922:	2201      	movs	r2, #1
 8002924:	6839      	ldr	r1, [r7, #0]
 8002926:	4618      	mov	r0, r3
 8002928:	f000 fd74 	bl	8003414 <TIM_CCxChannelCmd>
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	4a1e      	ldr	r2, [pc, #120]	; (80029ac <HAL_TIM_PWM_Start+0x138>)
 8002932:	4293      	cmp	r3, r2
 8002934:	d107      	bne.n	8002946 <HAL_TIM_PWM_Start+0xd2>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	681b      	ldr	r3, [r3, #0]
 8002940:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002944:	645a      	str	r2, [r3, #68]	; 0x44
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	4a18      	ldr	r2, [pc, #96]	; (80029ac <HAL_TIM_PWM_Start+0x138>)
 800294c:	4293      	cmp	r3, r2
 800294e:	d00e      	beq.n	800296e <HAL_TIM_PWM_Start+0xfa>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002958:	d009      	beq.n	800296e <HAL_TIM_PWM_Start+0xfa>
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	4a14      	ldr	r2, [pc, #80]	; (80029b0 <HAL_TIM_PWM_Start+0x13c>)
 8002960:	4293      	cmp	r3, r2
 8002962:	d004      	beq.n	800296e <HAL_TIM_PWM_Start+0xfa>
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	4a12      	ldr	r2, [pc, #72]	; (80029b4 <HAL_TIM_PWM_Start+0x140>)
 800296a:	4293      	cmp	r3, r2
 800296c:	d111      	bne.n	8002992 <HAL_TIM_PWM_Start+0x11e>
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	681b      	ldr	r3, [r3, #0]
 8002972:	689b      	ldr	r3, [r3, #8]
 8002974:	f003 0307 	and.w	r3, r3, #7
 8002978:	60fb      	str	r3, [r7, #12]
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	2b06      	cmp	r3, #6
 800297e:	d010      	beq.n	80029a2 <HAL_TIM_PWM_Start+0x12e>
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	681a      	ldr	r2, [r3, #0]
 8002986:	687b      	ldr	r3, [r7, #4]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	f042 0201 	orr.w	r2, r2, #1
 800298e:	601a      	str	r2, [r3, #0]
 8002990:	e007      	b.n	80029a2 <HAL_TIM_PWM_Start+0x12e>
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	681a      	ldr	r2, [r3, #0]
 8002998:	687b      	ldr	r3, [r7, #4]
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	f042 0201 	orr.w	r2, r2, #1
 80029a0:	601a      	str	r2, [r3, #0]
 80029a2:	2300      	movs	r3, #0
 80029a4:	4618      	mov	r0, r3
 80029a6:	3710      	adds	r7, #16
 80029a8:	46bd      	mov	sp, r7
 80029aa:	bd80      	pop	{r7, pc}
 80029ac:	40012c00 	.word	0x40012c00
 80029b0:	40000400 	.word	0x40000400
 80029b4:	40000800 	.word	0x40000800

080029b8 <HAL_TIM_IRQHandler>:
 80029b8:	b580      	push	{r7, lr}
 80029ba:	b082      	sub	sp, #8
 80029bc:	af00      	add	r7, sp, #0
 80029be:	6078      	str	r0, [r7, #4]
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	691b      	ldr	r3, [r3, #16]
 80029c6:	f003 0302 	and.w	r3, r3, #2
 80029ca:	2b02      	cmp	r3, #2
 80029cc:	d122      	bne.n	8002a14 <HAL_TIM_IRQHandler+0x5c>
 80029ce:	687b      	ldr	r3, [r7, #4]
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	68db      	ldr	r3, [r3, #12]
 80029d4:	f003 0302 	and.w	r3, r3, #2
 80029d8:	2b02      	cmp	r3, #2
 80029da:	d11b      	bne.n	8002a14 <HAL_TIM_IRQHandler+0x5c>
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	f06f 0202 	mvn.w	r2, #2
 80029e4:	611a      	str	r2, [r3, #16]
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	2201      	movs	r2, #1
 80029ea:	771a      	strb	r2, [r3, #28]
 80029ec:	687b      	ldr	r3, [r7, #4]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	699b      	ldr	r3, [r3, #24]
 80029f2:	f003 0303 	and.w	r3, r3, #3
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d003      	beq.n	8002a02 <HAL_TIM_IRQHandler+0x4a>
 80029fa:	6878      	ldr	r0, [r7, #4]
 80029fc:	f000 fa6f 	bl	8002ede <HAL_TIM_IC_CaptureCallback>
 8002a00:	e005      	b.n	8002a0e <HAL_TIM_IRQHandler+0x56>
 8002a02:	6878      	ldr	r0, [r7, #4]
 8002a04:	f000 fa62 	bl	8002ecc <HAL_TIM_OC_DelayElapsedCallback>
 8002a08:	6878      	ldr	r0, [r7, #4]
 8002a0a:	f000 fa71 	bl	8002ef0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	2200      	movs	r2, #0
 8002a12:	771a      	strb	r2, [r3, #28]
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	691b      	ldr	r3, [r3, #16]
 8002a1a:	f003 0304 	and.w	r3, r3, #4
 8002a1e:	2b04      	cmp	r3, #4
 8002a20:	d122      	bne.n	8002a68 <HAL_TIM_IRQHandler+0xb0>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	681b      	ldr	r3, [r3, #0]
 8002a26:	68db      	ldr	r3, [r3, #12]
 8002a28:	f003 0304 	and.w	r3, r3, #4
 8002a2c:	2b04      	cmp	r3, #4
 8002a2e:	d11b      	bne.n	8002a68 <HAL_TIM_IRQHandler+0xb0>
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	f06f 0204 	mvn.w	r2, #4
 8002a38:	611a      	str	r2, [r3, #16]
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	2202      	movs	r2, #2
 8002a3e:	771a      	strb	r2, [r3, #28]
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	699b      	ldr	r3, [r3, #24]
 8002a46:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d003      	beq.n	8002a56 <HAL_TIM_IRQHandler+0x9e>
 8002a4e:	6878      	ldr	r0, [r7, #4]
 8002a50:	f000 fa45 	bl	8002ede <HAL_TIM_IC_CaptureCallback>
 8002a54:	e005      	b.n	8002a62 <HAL_TIM_IRQHandler+0xaa>
 8002a56:	6878      	ldr	r0, [r7, #4]
 8002a58:	f000 fa38 	bl	8002ecc <HAL_TIM_OC_DelayElapsedCallback>
 8002a5c:	6878      	ldr	r0, [r7, #4]
 8002a5e:	f000 fa47 	bl	8002ef0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	2200      	movs	r2, #0
 8002a66:	771a      	strb	r2, [r3, #28]
 8002a68:	687b      	ldr	r3, [r7, #4]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	691b      	ldr	r3, [r3, #16]
 8002a6e:	f003 0308 	and.w	r3, r3, #8
 8002a72:	2b08      	cmp	r3, #8
 8002a74:	d122      	bne.n	8002abc <HAL_TIM_IRQHandler+0x104>
 8002a76:	687b      	ldr	r3, [r7, #4]
 8002a78:	681b      	ldr	r3, [r3, #0]
 8002a7a:	68db      	ldr	r3, [r3, #12]
 8002a7c:	f003 0308 	and.w	r3, r3, #8
 8002a80:	2b08      	cmp	r3, #8
 8002a82:	d11b      	bne.n	8002abc <HAL_TIM_IRQHandler+0x104>
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	f06f 0208 	mvn.w	r2, #8
 8002a8c:	611a      	str	r2, [r3, #16]
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	2204      	movs	r2, #4
 8002a92:	771a      	strb	r2, [r3, #28]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	69db      	ldr	r3, [r3, #28]
 8002a9a:	f003 0303 	and.w	r3, r3, #3
 8002a9e:	2b00      	cmp	r3, #0
 8002aa0:	d003      	beq.n	8002aaa <HAL_TIM_IRQHandler+0xf2>
 8002aa2:	6878      	ldr	r0, [r7, #4]
 8002aa4:	f000 fa1b 	bl	8002ede <HAL_TIM_IC_CaptureCallback>
 8002aa8:	e005      	b.n	8002ab6 <HAL_TIM_IRQHandler+0xfe>
 8002aaa:	6878      	ldr	r0, [r7, #4]
 8002aac:	f000 fa0e 	bl	8002ecc <HAL_TIM_OC_DelayElapsedCallback>
 8002ab0:	6878      	ldr	r0, [r7, #4]
 8002ab2:	f000 fa1d 	bl	8002ef0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	2200      	movs	r2, #0
 8002aba:	771a      	strb	r2, [r3, #28]
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	691b      	ldr	r3, [r3, #16]
 8002ac2:	f003 0310 	and.w	r3, r3, #16
 8002ac6:	2b10      	cmp	r3, #16
 8002ac8:	d122      	bne.n	8002b10 <HAL_TIM_IRQHandler+0x158>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	68db      	ldr	r3, [r3, #12]
 8002ad0:	f003 0310 	and.w	r3, r3, #16
 8002ad4:	2b10      	cmp	r3, #16
 8002ad6:	d11b      	bne.n	8002b10 <HAL_TIM_IRQHandler+0x158>
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	f06f 0210 	mvn.w	r2, #16
 8002ae0:	611a      	str	r2, [r3, #16]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	2208      	movs	r2, #8
 8002ae6:	771a      	strb	r2, [r3, #28]
 8002ae8:	687b      	ldr	r3, [r7, #4]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	69db      	ldr	r3, [r3, #28]
 8002aee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d003      	beq.n	8002afe <HAL_TIM_IRQHandler+0x146>
 8002af6:	6878      	ldr	r0, [r7, #4]
 8002af8:	f000 f9f1 	bl	8002ede <HAL_TIM_IC_CaptureCallback>
 8002afc:	e005      	b.n	8002b0a <HAL_TIM_IRQHandler+0x152>
 8002afe:	6878      	ldr	r0, [r7, #4]
 8002b00:	f000 f9e4 	bl	8002ecc <HAL_TIM_OC_DelayElapsedCallback>
 8002b04:	6878      	ldr	r0, [r7, #4]
 8002b06:	f000 f9f3 	bl	8002ef0 <HAL_TIM_PWM_PulseFinishedCallback>
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	2200      	movs	r2, #0
 8002b0e:	771a      	strb	r2, [r3, #28]
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	681b      	ldr	r3, [r3, #0]
 8002b14:	691b      	ldr	r3, [r3, #16]
 8002b16:	f003 0301 	and.w	r3, r3, #1
 8002b1a:	2b01      	cmp	r3, #1
 8002b1c:	d10e      	bne.n	8002b3c <HAL_TIM_IRQHandler+0x184>
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	68db      	ldr	r3, [r3, #12]
 8002b24:	f003 0301 	and.w	r3, r3, #1
 8002b28:	2b01      	cmp	r3, #1
 8002b2a:	d107      	bne.n	8002b3c <HAL_TIM_IRQHandler+0x184>
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	681b      	ldr	r3, [r3, #0]
 8002b30:	f06f 0201 	mvn.w	r2, #1
 8002b34:	611a      	str	r2, [r3, #16]
 8002b36:	6878      	ldr	r0, [r7, #4]
 8002b38:	f7fe fab6 	bl	80010a8 <HAL_TIM_PeriodElapsedCallback>
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	691b      	ldr	r3, [r3, #16]
 8002b42:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b46:	2b80      	cmp	r3, #128	; 0x80
 8002b48:	d10e      	bne.n	8002b68 <HAL_TIM_IRQHandler+0x1b0>
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	68db      	ldr	r3, [r3, #12]
 8002b50:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002b54:	2b80      	cmp	r3, #128	; 0x80
 8002b56:	d107      	bne.n	8002b68 <HAL_TIM_IRQHandler+0x1b0>
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002b60:	611a      	str	r2, [r3, #16]
 8002b62:	6878      	ldr	r0, [r7, #4]
 8002b64:	f000 fce1 	bl	800352a <HAL_TIMEx_BreakCallback>
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	681b      	ldr	r3, [r3, #0]
 8002b6c:	691b      	ldr	r3, [r3, #16]
 8002b6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b72:	2b40      	cmp	r3, #64	; 0x40
 8002b74:	d10e      	bne.n	8002b94 <HAL_TIM_IRQHandler+0x1dc>
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	68db      	ldr	r3, [r3, #12]
 8002b7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002b80:	2b40      	cmp	r3, #64	; 0x40
 8002b82:	d107      	bne.n	8002b94 <HAL_TIM_IRQHandler+0x1dc>
 8002b84:	687b      	ldr	r3, [r7, #4]
 8002b86:	681b      	ldr	r3, [r3, #0]
 8002b88:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002b8c:	611a      	str	r2, [r3, #16]
 8002b8e:	6878      	ldr	r0, [r7, #4]
 8002b90:	f000 f9b7 	bl	8002f02 <HAL_TIM_TriggerCallback>
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	691b      	ldr	r3, [r3, #16]
 8002b9a:	f003 0320 	and.w	r3, r3, #32
 8002b9e:	2b20      	cmp	r3, #32
 8002ba0:	d10e      	bne.n	8002bc0 <HAL_TIM_IRQHandler+0x208>
 8002ba2:	687b      	ldr	r3, [r7, #4]
 8002ba4:	681b      	ldr	r3, [r3, #0]
 8002ba6:	68db      	ldr	r3, [r3, #12]
 8002ba8:	f003 0320 	and.w	r3, r3, #32
 8002bac:	2b20      	cmp	r3, #32
 8002bae:	d107      	bne.n	8002bc0 <HAL_TIM_IRQHandler+0x208>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	f06f 0220 	mvn.w	r2, #32
 8002bb8:	611a      	str	r2, [r3, #16]
 8002bba:	6878      	ldr	r0, [r7, #4]
 8002bbc:	f000 fcac 	bl	8003518 <HAL_TIMEx_CommutCallback>
 8002bc0:	bf00      	nop
 8002bc2:	3708      	adds	r7, #8
 8002bc4:	46bd      	mov	sp, r7
 8002bc6:	bd80      	pop	{r7, pc}

08002bc8 <HAL_TIM_PWM_ConfigChannel>:
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b084      	sub	sp, #16
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	60f8      	str	r0, [r7, #12]
 8002bd0:	60b9      	str	r1, [r7, #8]
 8002bd2:	607a      	str	r2, [r7, #4]
 8002bd4:	68fb      	ldr	r3, [r7, #12]
 8002bd6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002bda:	2b01      	cmp	r3, #1
 8002bdc:	d101      	bne.n	8002be2 <HAL_TIM_PWM_ConfigChannel+0x1a>
 8002bde:	2302      	movs	r3, #2
 8002be0:	e0ac      	b.n	8002d3c <HAL_TIM_PWM_ConfigChannel+0x174>
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	2201      	movs	r2, #1
 8002be6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	2b0c      	cmp	r3, #12
 8002bee:	f200 809f 	bhi.w	8002d30 <HAL_TIM_PWM_ConfigChannel+0x168>
 8002bf2:	a201      	add	r2, pc, #4	; (adr r2, 8002bf8 <HAL_TIM_PWM_ConfigChannel+0x30>)
 8002bf4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002bf8:	08002c2d 	.word	0x08002c2d
 8002bfc:	08002d31 	.word	0x08002d31
 8002c00:	08002d31 	.word	0x08002d31
 8002c04:	08002d31 	.word	0x08002d31
 8002c08:	08002c6d 	.word	0x08002c6d
 8002c0c:	08002d31 	.word	0x08002d31
 8002c10:	08002d31 	.word	0x08002d31
 8002c14:	08002d31 	.word	0x08002d31
 8002c18:	08002caf 	.word	0x08002caf
 8002c1c:	08002d31 	.word	0x08002d31
 8002c20:	08002d31 	.word	0x08002d31
 8002c24:	08002d31 	.word	0x08002d31
 8002c28:	08002cef 	.word	0x08002cef
 8002c2c:	68fb      	ldr	r3, [r7, #12]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	68b9      	ldr	r1, [r7, #8]
 8002c32:	4618      	mov	r0, r3
 8002c34:	f000 f9d0 	bl	8002fd8 <TIM_OC1_SetConfig>
 8002c38:	68fb      	ldr	r3, [r7, #12]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	699a      	ldr	r2, [r3, #24]
 8002c3e:	68fb      	ldr	r3, [r7, #12]
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	f042 0208 	orr.w	r2, r2, #8
 8002c46:	619a      	str	r2, [r3, #24]
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	699a      	ldr	r2, [r3, #24]
 8002c4e:	68fb      	ldr	r3, [r7, #12]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	f022 0204 	bic.w	r2, r2, #4
 8002c56:	619a      	str	r2, [r3, #24]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	681b      	ldr	r3, [r3, #0]
 8002c5c:	6999      	ldr	r1, [r3, #24]
 8002c5e:	68bb      	ldr	r3, [r7, #8]
 8002c60:	691a      	ldr	r2, [r3, #16]
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	430a      	orrs	r2, r1
 8002c68:	619a      	str	r2, [r3, #24]
 8002c6a:	e062      	b.n	8002d32 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	68b9      	ldr	r1, [r7, #8]
 8002c72:	4618      	mov	r0, r3
 8002c74:	f000 fa16 	bl	80030a4 <TIM_OC2_SetConfig>
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	699a      	ldr	r2, [r3, #24]
 8002c7e:	68fb      	ldr	r3, [r7, #12]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002c86:	619a      	str	r2, [r3, #24]
 8002c88:	68fb      	ldr	r3, [r7, #12]
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	699a      	ldr	r2, [r3, #24]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002c96:	619a      	str	r2, [r3, #24]
 8002c98:	68fb      	ldr	r3, [r7, #12]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	6999      	ldr	r1, [r3, #24]
 8002c9e:	68bb      	ldr	r3, [r7, #8]
 8002ca0:	691b      	ldr	r3, [r3, #16]
 8002ca2:	021a      	lsls	r2, r3, #8
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	430a      	orrs	r2, r1
 8002caa:	619a      	str	r2, [r3, #24]
 8002cac:	e041      	b.n	8002d32 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002cae:	68fb      	ldr	r3, [r7, #12]
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	68b9      	ldr	r1, [r7, #8]
 8002cb4:	4618      	mov	r0, r3
 8002cb6:	f000 fa5f 	bl	8003178 <TIM_OC3_SetConfig>
 8002cba:	68fb      	ldr	r3, [r7, #12]
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	69da      	ldr	r2, [r3, #28]
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	681b      	ldr	r3, [r3, #0]
 8002cc4:	f042 0208 	orr.w	r2, r2, #8
 8002cc8:	61da      	str	r2, [r3, #28]
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	69da      	ldr	r2, [r3, #28]
 8002cd0:	68fb      	ldr	r3, [r7, #12]
 8002cd2:	681b      	ldr	r3, [r3, #0]
 8002cd4:	f022 0204 	bic.w	r2, r2, #4
 8002cd8:	61da      	str	r2, [r3, #28]
 8002cda:	68fb      	ldr	r3, [r7, #12]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	69d9      	ldr	r1, [r3, #28]
 8002ce0:	68bb      	ldr	r3, [r7, #8]
 8002ce2:	691a      	ldr	r2, [r3, #16]
 8002ce4:	68fb      	ldr	r3, [r7, #12]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	430a      	orrs	r2, r1
 8002cea:	61da      	str	r2, [r3, #28]
 8002cec:	e021      	b.n	8002d32 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002cee:	68fb      	ldr	r3, [r7, #12]
 8002cf0:	681b      	ldr	r3, [r3, #0]
 8002cf2:	68b9      	ldr	r1, [r7, #8]
 8002cf4:	4618      	mov	r0, r3
 8002cf6:	f000 faa9 	bl	800324c <TIM_OC4_SetConfig>
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	69da      	ldr	r2, [r3, #28]
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002d08:	61da      	str	r2, [r3, #28]
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	69da      	ldr	r2, [r3, #28]
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	681b      	ldr	r3, [r3, #0]
 8002d14:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002d18:	61da      	str	r2, [r3, #28]
 8002d1a:	68fb      	ldr	r3, [r7, #12]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	69d9      	ldr	r1, [r3, #28]
 8002d20:	68bb      	ldr	r3, [r7, #8]
 8002d22:	691b      	ldr	r3, [r3, #16]
 8002d24:	021a      	lsls	r2, r3, #8
 8002d26:	68fb      	ldr	r3, [r7, #12]
 8002d28:	681b      	ldr	r3, [r3, #0]
 8002d2a:	430a      	orrs	r2, r1
 8002d2c:	61da      	str	r2, [r3, #28]
 8002d2e:	e000      	b.n	8002d32 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8002d30:	bf00      	nop
 8002d32:	68fb      	ldr	r3, [r7, #12]
 8002d34:	2200      	movs	r2, #0
 8002d36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d3a:	2300      	movs	r3, #0
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	3710      	adds	r7, #16
 8002d40:	46bd      	mov	sp, r7
 8002d42:	bd80      	pop	{r7, pc}

08002d44 <HAL_TIM_ConfigClockSource>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	b084      	sub	sp, #16
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	6078      	str	r0, [r7, #4]
 8002d4c:	6039      	str	r1, [r7, #0]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d54:	2b01      	cmp	r3, #1
 8002d56:	d101      	bne.n	8002d5c <HAL_TIM_ConfigClockSource+0x18>
 8002d58:	2302      	movs	r3, #2
 8002d5a:	e0b3      	b.n	8002ec4 <HAL_TIM_ConfigClockSource+0x180>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2201      	movs	r2, #1
 8002d60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d64:	687b      	ldr	r3, [r7, #4]
 8002d66:	2202      	movs	r2, #2
 8002d68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	689b      	ldr	r3, [r3, #8]
 8002d72:	60fb      	str	r3, [r7, #12]
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002d7a:	60fb      	str	r3, [r7, #12]
 8002d7c:	68fb      	ldr	r3, [r7, #12]
 8002d7e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d82:	60fb      	str	r3, [r7, #12]
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	68fa      	ldr	r2, [r7, #12]
 8002d8a:	609a      	str	r2, [r3, #8]
 8002d8c:	683b      	ldr	r3, [r7, #0]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d94:	d03e      	beq.n	8002e14 <HAL_TIM_ConfigClockSource+0xd0>
 8002d96:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d9a:	f200 8087 	bhi.w	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002d9e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002da2:	f000 8085 	beq.w	8002eb0 <HAL_TIM_ConfigClockSource+0x16c>
 8002da6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002daa:	d87f      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002dac:	2b70      	cmp	r3, #112	; 0x70
 8002dae:	d01a      	beq.n	8002de6 <HAL_TIM_ConfigClockSource+0xa2>
 8002db0:	2b70      	cmp	r3, #112	; 0x70
 8002db2:	d87b      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002db4:	2b60      	cmp	r3, #96	; 0x60
 8002db6:	d050      	beq.n	8002e5a <HAL_TIM_ConfigClockSource+0x116>
 8002db8:	2b60      	cmp	r3, #96	; 0x60
 8002dba:	d877      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002dbc:	2b50      	cmp	r3, #80	; 0x50
 8002dbe:	d03c      	beq.n	8002e3a <HAL_TIM_ConfigClockSource+0xf6>
 8002dc0:	2b50      	cmp	r3, #80	; 0x50
 8002dc2:	d873      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002dc4:	2b40      	cmp	r3, #64	; 0x40
 8002dc6:	d058      	beq.n	8002e7a <HAL_TIM_ConfigClockSource+0x136>
 8002dc8:	2b40      	cmp	r3, #64	; 0x40
 8002dca:	d86f      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002dcc:	2b30      	cmp	r3, #48	; 0x30
 8002dce:	d064      	beq.n	8002e9a <HAL_TIM_ConfigClockSource+0x156>
 8002dd0:	2b30      	cmp	r3, #48	; 0x30
 8002dd2:	d86b      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002dd4:	2b20      	cmp	r3, #32
 8002dd6:	d060      	beq.n	8002e9a <HAL_TIM_ConfigClockSource+0x156>
 8002dd8:	2b20      	cmp	r3, #32
 8002dda:	d867      	bhi.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002ddc:	2b00      	cmp	r3, #0
 8002dde:	d05c      	beq.n	8002e9a <HAL_TIM_ConfigClockSource+0x156>
 8002de0:	2b10      	cmp	r3, #16
 8002de2:	d05a      	beq.n	8002e9a <HAL_TIM_ConfigClockSource+0x156>
 8002de4:	e062      	b.n	8002eac <HAL_TIM_ConfigClockSource+0x168>
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	6818      	ldr	r0, [r3, #0]
 8002dea:	683b      	ldr	r3, [r7, #0]
 8002dec:	6899      	ldr	r1, [r3, #8]
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	685a      	ldr	r2, [r3, #4]
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	68db      	ldr	r3, [r3, #12]
 8002df6:	f000 faee 	bl	80033d6 <TIM_ETR_SetConfig>
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	689b      	ldr	r3, [r3, #8]
 8002e00:	60fb      	str	r3, [r7, #12]
 8002e02:	68fb      	ldr	r3, [r7, #12]
 8002e04:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002e08:	60fb      	str	r3, [r7, #12]
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	68fa      	ldr	r2, [r7, #12]
 8002e10:	609a      	str	r2, [r3, #8]
 8002e12:	e04e      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	6818      	ldr	r0, [r3, #0]
 8002e18:	683b      	ldr	r3, [r7, #0]
 8002e1a:	6899      	ldr	r1, [r3, #8]
 8002e1c:	683b      	ldr	r3, [r7, #0]
 8002e1e:	685a      	ldr	r2, [r3, #4]
 8002e20:	683b      	ldr	r3, [r7, #0]
 8002e22:	68db      	ldr	r3, [r3, #12]
 8002e24:	f000 fad7 	bl	80033d6 <TIM_ETR_SetConfig>
 8002e28:	687b      	ldr	r3, [r7, #4]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	689a      	ldr	r2, [r3, #8]
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002e36:	609a      	str	r2, [r3, #8]
 8002e38:	e03b      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	6818      	ldr	r0, [r3, #0]
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	6859      	ldr	r1, [r3, #4]
 8002e42:	683b      	ldr	r3, [r7, #0]
 8002e44:	68db      	ldr	r3, [r3, #12]
 8002e46:	461a      	mov	r2, r3
 8002e48:	f000 fa4e 	bl	80032e8 <TIM_TI1_ConfigInputStage>
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	681b      	ldr	r3, [r3, #0]
 8002e50:	2150      	movs	r1, #80	; 0x50
 8002e52:	4618      	mov	r0, r3
 8002e54:	f000 faa5 	bl	80033a2 <TIM_ITRx_SetConfig>
 8002e58:	e02b      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	6818      	ldr	r0, [r3, #0]
 8002e5e:	683b      	ldr	r3, [r7, #0]
 8002e60:	6859      	ldr	r1, [r3, #4]
 8002e62:	683b      	ldr	r3, [r7, #0]
 8002e64:	68db      	ldr	r3, [r3, #12]
 8002e66:	461a      	mov	r2, r3
 8002e68:	f000 fa6c 	bl	8003344 <TIM_TI2_ConfigInputStage>
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	2160      	movs	r1, #96	; 0x60
 8002e72:	4618      	mov	r0, r3
 8002e74:	f000 fa95 	bl	80033a2 <TIM_ITRx_SetConfig>
 8002e78:	e01b      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	6818      	ldr	r0, [r3, #0]
 8002e7e:	683b      	ldr	r3, [r7, #0]
 8002e80:	6859      	ldr	r1, [r3, #4]
 8002e82:	683b      	ldr	r3, [r7, #0]
 8002e84:	68db      	ldr	r3, [r3, #12]
 8002e86:	461a      	mov	r2, r3
 8002e88:	f000 fa2e 	bl	80032e8 <TIM_TI1_ConfigInputStage>
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	2140      	movs	r1, #64	; 0x40
 8002e92:	4618      	mov	r0, r3
 8002e94:	f000 fa85 	bl	80033a2 <TIM_ITRx_SetConfig>
 8002e98:	e00b      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	681a      	ldr	r2, [r3, #0]
 8002e9e:	683b      	ldr	r3, [r7, #0]
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	4619      	mov	r1, r3
 8002ea4:	4610      	mov	r0, r2
 8002ea6:	f000 fa7c 	bl	80033a2 <TIM_ITRx_SetConfig>
 8002eaa:	e002      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002eac:	bf00      	nop
 8002eae:	e000      	b.n	8002eb2 <HAL_TIM_ConfigClockSource+0x16e>
 8002eb0:	bf00      	nop
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	2201      	movs	r2, #1
 8002eb6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	2200      	movs	r2, #0
 8002ebe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	3710      	adds	r7, #16
 8002ec8:	46bd      	mov	sp, r7
 8002eca:	bd80      	pop	{r7, pc}

08002ecc <HAL_TIM_OC_DelayElapsedCallback>:
 8002ecc:	b480      	push	{r7}
 8002ece:	b083      	sub	sp, #12
 8002ed0:	af00      	add	r7, sp, #0
 8002ed2:	6078      	str	r0, [r7, #4]
 8002ed4:	bf00      	nop
 8002ed6:	370c      	adds	r7, #12
 8002ed8:	46bd      	mov	sp, r7
 8002eda:	bc80      	pop	{r7}
 8002edc:	4770      	bx	lr

08002ede <HAL_TIM_IC_CaptureCallback>:
 8002ede:	b480      	push	{r7}
 8002ee0:	b083      	sub	sp, #12
 8002ee2:	af00      	add	r7, sp, #0
 8002ee4:	6078      	str	r0, [r7, #4]
 8002ee6:	bf00      	nop
 8002ee8:	370c      	adds	r7, #12
 8002eea:	46bd      	mov	sp, r7
 8002eec:	bc80      	pop	{r7}
 8002eee:	4770      	bx	lr

08002ef0 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002ef0:	b480      	push	{r7}
 8002ef2:	b083      	sub	sp, #12
 8002ef4:	af00      	add	r7, sp, #0
 8002ef6:	6078      	str	r0, [r7, #4]
 8002ef8:	bf00      	nop
 8002efa:	370c      	adds	r7, #12
 8002efc:	46bd      	mov	sp, r7
 8002efe:	bc80      	pop	{r7}
 8002f00:	4770      	bx	lr

08002f02 <HAL_TIM_TriggerCallback>:
 8002f02:	b480      	push	{r7}
 8002f04:	b083      	sub	sp, #12
 8002f06:	af00      	add	r7, sp, #0
 8002f08:	6078      	str	r0, [r7, #4]
 8002f0a:	bf00      	nop
 8002f0c:	370c      	adds	r7, #12
 8002f0e:	46bd      	mov	sp, r7
 8002f10:	bc80      	pop	{r7}
 8002f12:	4770      	bx	lr

08002f14 <TIM_Base_SetConfig>:
 8002f14:	b480      	push	{r7}
 8002f16:	b085      	sub	sp, #20
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	6039      	str	r1, [r7, #0]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	60fb      	str	r3, [r7, #12]
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	4a29      	ldr	r2, [pc, #164]	; (8002fcc <TIM_Base_SetConfig+0xb8>)
 8002f28:	4293      	cmp	r3, r2
 8002f2a:	d00b      	beq.n	8002f44 <TIM_Base_SetConfig+0x30>
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f32:	d007      	beq.n	8002f44 <TIM_Base_SetConfig+0x30>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	4a26      	ldr	r2, [pc, #152]	; (8002fd0 <TIM_Base_SetConfig+0xbc>)
 8002f38:	4293      	cmp	r3, r2
 8002f3a:	d003      	beq.n	8002f44 <TIM_Base_SetConfig+0x30>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	4a25      	ldr	r2, [pc, #148]	; (8002fd4 <TIM_Base_SetConfig+0xc0>)
 8002f40:	4293      	cmp	r3, r2
 8002f42:	d108      	bne.n	8002f56 <TIM_Base_SetConfig+0x42>
 8002f44:	68fb      	ldr	r3, [r7, #12]
 8002f46:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002f4a:	60fb      	str	r3, [r7, #12]
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	685b      	ldr	r3, [r3, #4]
 8002f50:	68fa      	ldr	r2, [r7, #12]
 8002f52:	4313      	orrs	r3, r2
 8002f54:	60fb      	str	r3, [r7, #12]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	4a1c      	ldr	r2, [pc, #112]	; (8002fcc <TIM_Base_SetConfig+0xb8>)
 8002f5a:	4293      	cmp	r3, r2
 8002f5c:	d00b      	beq.n	8002f76 <TIM_Base_SetConfig+0x62>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f64:	d007      	beq.n	8002f76 <TIM_Base_SetConfig+0x62>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	4a19      	ldr	r2, [pc, #100]	; (8002fd0 <TIM_Base_SetConfig+0xbc>)
 8002f6a:	4293      	cmp	r3, r2
 8002f6c:	d003      	beq.n	8002f76 <TIM_Base_SetConfig+0x62>
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	4a18      	ldr	r2, [pc, #96]	; (8002fd4 <TIM_Base_SetConfig+0xc0>)
 8002f72:	4293      	cmp	r3, r2
 8002f74:	d108      	bne.n	8002f88 <TIM_Base_SetConfig+0x74>
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002f7c:	60fb      	str	r3, [r7, #12]
 8002f7e:	683b      	ldr	r3, [r7, #0]
 8002f80:	68db      	ldr	r3, [r3, #12]
 8002f82:	68fa      	ldr	r2, [r7, #12]
 8002f84:	4313      	orrs	r3, r2
 8002f86:	60fb      	str	r3, [r7, #12]
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f8e:	683b      	ldr	r3, [r7, #0]
 8002f90:	695b      	ldr	r3, [r3, #20]
 8002f92:	4313      	orrs	r3, r2
 8002f94:	60fb      	str	r3, [r7, #12]
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	68fa      	ldr	r2, [r7, #12]
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	683b      	ldr	r3, [r7, #0]
 8002f9e:	689a      	ldr	r2, [r3, #8]
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	62da      	str	r2, [r3, #44]	; 0x2c
 8002fa4:	683b      	ldr	r3, [r7, #0]
 8002fa6:	681a      	ldr	r2, [r3, #0]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	629a      	str	r2, [r3, #40]	; 0x28
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	4a07      	ldr	r2, [pc, #28]	; (8002fcc <TIM_Base_SetConfig+0xb8>)
 8002fb0:	4293      	cmp	r3, r2
 8002fb2:	d103      	bne.n	8002fbc <TIM_Base_SetConfig+0xa8>
 8002fb4:	683b      	ldr	r3, [r7, #0]
 8002fb6:	691a      	ldr	r2, [r3, #16]
 8002fb8:	687b      	ldr	r3, [r7, #4]
 8002fba:	631a      	str	r2, [r3, #48]	; 0x30
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	615a      	str	r2, [r3, #20]
 8002fc2:	bf00      	nop
 8002fc4:	3714      	adds	r7, #20
 8002fc6:	46bd      	mov	sp, r7
 8002fc8:	bc80      	pop	{r7}
 8002fca:	4770      	bx	lr
 8002fcc:	40012c00 	.word	0x40012c00
 8002fd0:	40000400 	.word	0x40000400
 8002fd4:	40000800 	.word	0x40000800

08002fd8 <TIM_OC1_SetConfig>:
 8002fd8:	b480      	push	{r7}
 8002fda:	b087      	sub	sp, #28
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	6078      	str	r0, [r7, #4]
 8002fe0:	6039      	str	r1, [r7, #0]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6a1b      	ldr	r3, [r3, #32]
 8002fe6:	f023 0201 	bic.w	r2, r3, #1
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	621a      	str	r2, [r3, #32]
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	6a1b      	ldr	r3, [r3, #32]
 8002ff2:	617b      	str	r3, [r7, #20]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	685b      	ldr	r3, [r3, #4]
 8002ff8:	613b      	str	r3, [r7, #16]
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	699b      	ldr	r3, [r3, #24]
 8002ffe:	60fb      	str	r3, [r7, #12]
 8003000:	68fb      	ldr	r3, [r7, #12]
 8003002:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003006:	60fb      	str	r3, [r7, #12]
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	f023 0303 	bic.w	r3, r3, #3
 800300e:	60fb      	str	r3, [r7, #12]
 8003010:	683b      	ldr	r3, [r7, #0]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	68fa      	ldr	r2, [r7, #12]
 8003016:	4313      	orrs	r3, r2
 8003018:	60fb      	str	r3, [r7, #12]
 800301a:	697b      	ldr	r3, [r7, #20]
 800301c:	f023 0302 	bic.w	r3, r3, #2
 8003020:	617b      	str	r3, [r7, #20]
 8003022:	683b      	ldr	r3, [r7, #0]
 8003024:	689b      	ldr	r3, [r3, #8]
 8003026:	697a      	ldr	r2, [r7, #20]
 8003028:	4313      	orrs	r3, r2
 800302a:	617b      	str	r3, [r7, #20]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	4a1c      	ldr	r2, [pc, #112]	; (80030a0 <TIM_OC1_SetConfig+0xc8>)
 8003030:	4293      	cmp	r3, r2
 8003032:	d10c      	bne.n	800304e <TIM_OC1_SetConfig+0x76>
 8003034:	697b      	ldr	r3, [r7, #20]
 8003036:	f023 0308 	bic.w	r3, r3, #8
 800303a:	617b      	str	r3, [r7, #20]
 800303c:	683b      	ldr	r3, [r7, #0]
 800303e:	68db      	ldr	r3, [r3, #12]
 8003040:	697a      	ldr	r2, [r7, #20]
 8003042:	4313      	orrs	r3, r2
 8003044:	617b      	str	r3, [r7, #20]
 8003046:	697b      	ldr	r3, [r7, #20]
 8003048:	f023 0304 	bic.w	r3, r3, #4
 800304c:	617b      	str	r3, [r7, #20]
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	4a13      	ldr	r2, [pc, #76]	; (80030a0 <TIM_OC1_SetConfig+0xc8>)
 8003052:	4293      	cmp	r3, r2
 8003054:	d111      	bne.n	800307a <TIM_OC1_SetConfig+0xa2>
 8003056:	693b      	ldr	r3, [r7, #16]
 8003058:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800305c:	613b      	str	r3, [r7, #16]
 800305e:	693b      	ldr	r3, [r7, #16]
 8003060:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003064:	613b      	str	r3, [r7, #16]
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	695b      	ldr	r3, [r3, #20]
 800306a:	693a      	ldr	r2, [r7, #16]
 800306c:	4313      	orrs	r3, r2
 800306e:	613b      	str	r3, [r7, #16]
 8003070:	683b      	ldr	r3, [r7, #0]
 8003072:	699b      	ldr	r3, [r3, #24]
 8003074:	693a      	ldr	r2, [r7, #16]
 8003076:	4313      	orrs	r3, r2
 8003078:	613b      	str	r3, [r7, #16]
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	693a      	ldr	r2, [r7, #16]
 800307e:	605a      	str	r2, [r3, #4]
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	68fa      	ldr	r2, [r7, #12]
 8003084:	619a      	str	r2, [r3, #24]
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	685a      	ldr	r2, [r3, #4]
 800308a:	687b      	ldr	r3, [r7, #4]
 800308c:	635a      	str	r2, [r3, #52]	; 0x34
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	697a      	ldr	r2, [r7, #20]
 8003092:	621a      	str	r2, [r3, #32]
 8003094:	bf00      	nop
 8003096:	371c      	adds	r7, #28
 8003098:	46bd      	mov	sp, r7
 800309a:	bc80      	pop	{r7}
 800309c:	4770      	bx	lr
 800309e:	bf00      	nop
 80030a0:	40012c00 	.word	0x40012c00

080030a4 <TIM_OC2_SetConfig>:
 80030a4:	b480      	push	{r7}
 80030a6:	b087      	sub	sp, #28
 80030a8:	af00      	add	r7, sp, #0
 80030aa:	6078      	str	r0, [r7, #4]
 80030ac:	6039      	str	r1, [r7, #0]
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	6a1b      	ldr	r3, [r3, #32]
 80030b2:	f023 0210 	bic.w	r2, r3, #16
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	621a      	str	r2, [r3, #32]
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	6a1b      	ldr	r3, [r3, #32]
 80030be:	617b      	str	r3, [r7, #20]
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	685b      	ldr	r3, [r3, #4]
 80030c4:	613b      	str	r3, [r7, #16]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	699b      	ldr	r3, [r3, #24]
 80030ca:	60fb      	str	r3, [r7, #12]
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80030d2:	60fb      	str	r3, [r7, #12]
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80030da:	60fb      	str	r3, [r7, #12]
 80030dc:	683b      	ldr	r3, [r7, #0]
 80030de:	681b      	ldr	r3, [r3, #0]
 80030e0:	021b      	lsls	r3, r3, #8
 80030e2:	68fa      	ldr	r2, [r7, #12]
 80030e4:	4313      	orrs	r3, r2
 80030e6:	60fb      	str	r3, [r7, #12]
 80030e8:	697b      	ldr	r3, [r7, #20]
 80030ea:	f023 0320 	bic.w	r3, r3, #32
 80030ee:	617b      	str	r3, [r7, #20]
 80030f0:	683b      	ldr	r3, [r7, #0]
 80030f2:	689b      	ldr	r3, [r3, #8]
 80030f4:	011b      	lsls	r3, r3, #4
 80030f6:	697a      	ldr	r2, [r7, #20]
 80030f8:	4313      	orrs	r3, r2
 80030fa:	617b      	str	r3, [r7, #20]
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	4a1d      	ldr	r2, [pc, #116]	; (8003174 <TIM_OC2_SetConfig+0xd0>)
 8003100:	4293      	cmp	r3, r2
 8003102:	d10d      	bne.n	8003120 <TIM_OC2_SetConfig+0x7c>
 8003104:	697b      	ldr	r3, [r7, #20]
 8003106:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800310a:	617b      	str	r3, [r7, #20]
 800310c:	683b      	ldr	r3, [r7, #0]
 800310e:	68db      	ldr	r3, [r3, #12]
 8003110:	011b      	lsls	r3, r3, #4
 8003112:	697a      	ldr	r2, [r7, #20]
 8003114:	4313      	orrs	r3, r2
 8003116:	617b      	str	r3, [r7, #20]
 8003118:	697b      	ldr	r3, [r7, #20]
 800311a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800311e:	617b      	str	r3, [r7, #20]
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	4a14      	ldr	r2, [pc, #80]	; (8003174 <TIM_OC2_SetConfig+0xd0>)
 8003124:	4293      	cmp	r3, r2
 8003126:	d113      	bne.n	8003150 <TIM_OC2_SetConfig+0xac>
 8003128:	693b      	ldr	r3, [r7, #16]
 800312a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800312e:	613b      	str	r3, [r7, #16]
 8003130:	693b      	ldr	r3, [r7, #16]
 8003132:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003136:	613b      	str	r3, [r7, #16]
 8003138:	683b      	ldr	r3, [r7, #0]
 800313a:	695b      	ldr	r3, [r3, #20]
 800313c:	009b      	lsls	r3, r3, #2
 800313e:	693a      	ldr	r2, [r7, #16]
 8003140:	4313      	orrs	r3, r2
 8003142:	613b      	str	r3, [r7, #16]
 8003144:	683b      	ldr	r3, [r7, #0]
 8003146:	699b      	ldr	r3, [r3, #24]
 8003148:	009b      	lsls	r3, r3, #2
 800314a:	693a      	ldr	r2, [r7, #16]
 800314c:	4313      	orrs	r3, r2
 800314e:	613b      	str	r3, [r7, #16]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	693a      	ldr	r2, [r7, #16]
 8003154:	605a      	str	r2, [r3, #4]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	68fa      	ldr	r2, [r7, #12]
 800315a:	619a      	str	r2, [r3, #24]
 800315c:	683b      	ldr	r3, [r7, #0]
 800315e:	685a      	ldr	r2, [r3, #4]
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	639a      	str	r2, [r3, #56]	; 0x38
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	697a      	ldr	r2, [r7, #20]
 8003168:	621a      	str	r2, [r3, #32]
 800316a:	bf00      	nop
 800316c:	371c      	adds	r7, #28
 800316e:	46bd      	mov	sp, r7
 8003170:	bc80      	pop	{r7}
 8003172:	4770      	bx	lr
 8003174:	40012c00 	.word	0x40012c00

08003178 <TIM_OC3_SetConfig>:
 8003178:	b480      	push	{r7}
 800317a:	b087      	sub	sp, #28
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
 8003180:	6039      	str	r1, [r7, #0]
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	6a1b      	ldr	r3, [r3, #32]
 8003186:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	621a      	str	r2, [r3, #32]
 800318e:	687b      	ldr	r3, [r7, #4]
 8003190:	6a1b      	ldr	r3, [r3, #32]
 8003192:	617b      	str	r3, [r7, #20]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	685b      	ldr	r3, [r3, #4]
 8003198:	613b      	str	r3, [r7, #16]
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	69db      	ldr	r3, [r3, #28]
 800319e:	60fb      	str	r3, [r7, #12]
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80031a6:	60fb      	str	r3, [r7, #12]
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	f023 0303 	bic.w	r3, r3, #3
 80031ae:	60fb      	str	r3, [r7, #12]
 80031b0:	683b      	ldr	r3, [r7, #0]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	68fa      	ldr	r2, [r7, #12]
 80031b6:	4313      	orrs	r3, r2
 80031b8:	60fb      	str	r3, [r7, #12]
 80031ba:	697b      	ldr	r3, [r7, #20]
 80031bc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80031c0:	617b      	str	r3, [r7, #20]
 80031c2:	683b      	ldr	r3, [r7, #0]
 80031c4:	689b      	ldr	r3, [r3, #8]
 80031c6:	021b      	lsls	r3, r3, #8
 80031c8:	697a      	ldr	r2, [r7, #20]
 80031ca:	4313      	orrs	r3, r2
 80031cc:	617b      	str	r3, [r7, #20]
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	4a1d      	ldr	r2, [pc, #116]	; (8003248 <TIM_OC3_SetConfig+0xd0>)
 80031d2:	4293      	cmp	r3, r2
 80031d4:	d10d      	bne.n	80031f2 <TIM_OC3_SetConfig+0x7a>
 80031d6:	697b      	ldr	r3, [r7, #20]
 80031d8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80031dc:	617b      	str	r3, [r7, #20]
 80031de:	683b      	ldr	r3, [r7, #0]
 80031e0:	68db      	ldr	r3, [r3, #12]
 80031e2:	021b      	lsls	r3, r3, #8
 80031e4:	697a      	ldr	r2, [r7, #20]
 80031e6:	4313      	orrs	r3, r2
 80031e8:	617b      	str	r3, [r7, #20]
 80031ea:	697b      	ldr	r3, [r7, #20]
 80031ec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80031f0:	617b      	str	r3, [r7, #20]
 80031f2:	687b      	ldr	r3, [r7, #4]
 80031f4:	4a14      	ldr	r2, [pc, #80]	; (8003248 <TIM_OC3_SetConfig+0xd0>)
 80031f6:	4293      	cmp	r3, r2
 80031f8:	d113      	bne.n	8003222 <TIM_OC3_SetConfig+0xaa>
 80031fa:	693b      	ldr	r3, [r7, #16]
 80031fc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003200:	613b      	str	r3, [r7, #16]
 8003202:	693b      	ldr	r3, [r7, #16]
 8003204:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003208:	613b      	str	r3, [r7, #16]
 800320a:	683b      	ldr	r3, [r7, #0]
 800320c:	695b      	ldr	r3, [r3, #20]
 800320e:	011b      	lsls	r3, r3, #4
 8003210:	693a      	ldr	r2, [r7, #16]
 8003212:	4313      	orrs	r3, r2
 8003214:	613b      	str	r3, [r7, #16]
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	699b      	ldr	r3, [r3, #24]
 800321a:	011b      	lsls	r3, r3, #4
 800321c:	693a      	ldr	r2, [r7, #16]
 800321e:	4313      	orrs	r3, r2
 8003220:	613b      	str	r3, [r7, #16]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	693a      	ldr	r2, [r7, #16]
 8003226:	605a      	str	r2, [r3, #4]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	68fa      	ldr	r2, [r7, #12]
 800322c:	61da      	str	r2, [r3, #28]
 800322e:	683b      	ldr	r3, [r7, #0]
 8003230:	685a      	ldr	r2, [r3, #4]
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	63da      	str	r2, [r3, #60]	; 0x3c
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	697a      	ldr	r2, [r7, #20]
 800323a:	621a      	str	r2, [r3, #32]
 800323c:	bf00      	nop
 800323e:	371c      	adds	r7, #28
 8003240:	46bd      	mov	sp, r7
 8003242:	bc80      	pop	{r7}
 8003244:	4770      	bx	lr
 8003246:	bf00      	nop
 8003248:	40012c00 	.word	0x40012c00

0800324c <TIM_OC4_SetConfig>:
 800324c:	b480      	push	{r7}
 800324e:	b087      	sub	sp, #28
 8003250:	af00      	add	r7, sp, #0
 8003252:	6078      	str	r0, [r7, #4]
 8003254:	6039      	str	r1, [r7, #0]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	6a1b      	ldr	r3, [r3, #32]
 800325a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	621a      	str	r2, [r3, #32]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	6a1b      	ldr	r3, [r3, #32]
 8003266:	613b      	str	r3, [r7, #16]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	685b      	ldr	r3, [r3, #4]
 800326c:	617b      	str	r3, [r7, #20]
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	69db      	ldr	r3, [r3, #28]
 8003272:	60fb      	str	r3, [r7, #12]
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800327a:	60fb      	str	r3, [r7, #12]
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003282:	60fb      	str	r3, [r7, #12]
 8003284:	683b      	ldr	r3, [r7, #0]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	021b      	lsls	r3, r3, #8
 800328a:	68fa      	ldr	r2, [r7, #12]
 800328c:	4313      	orrs	r3, r2
 800328e:	60fb      	str	r3, [r7, #12]
 8003290:	693b      	ldr	r3, [r7, #16]
 8003292:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003296:	613b      	str	r3, [r7, #16]
 8003298:	683b      	ldr	r3, [r7, #0]
 800329a:	689b      	ldr	r3, [r3, #8]
 800329c:	031b      	lsls	r3, r3, #12
 800329e:	693a      	ldr	r2, [r7, #16]
 80032a0:	4313      	orrs	r3, r2
 80032a2:	613b      	str	r3, [r7, #16]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	4a0f      	ldr	r2, [pc, #60]	; (80032e4 <TIM_OC4_SetConfig+0x98>)
 80032a8:	4293      	cmp	r3, r2
 80032aa:	d109      	bne.n	80032c0 <TIM_OC4_SetConfig+0x74>
 80032ac:	697b      	ldr	r3, [r7, #20]
 80032ae:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80032b2:	617b      	str	r3, [r7, #20]
 80032b4:	683b      	ldr	r3, [r7, #0]
 80032b6:	695b      	ldr	r3, [r3, #20]
 80032b8:	019b      	lsls	r3, r3, #6
 80032ba:	697a      	ldr	r2, [r7, #20]
 80032bc:	4313      	orrs	r3, r2
 80032be:	617b      	str	r3, [r7, #20]
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	697a      	ldr	r2, [r7, #20]
 80032c4:	605a      	str	r2, [r3, #4]
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	68fa      	ldr	r2, [r7, #12]
 80032ca:	61da      	str	r2, [r3, #28]
 80032cc:	683b      	ldr	r3, [r7, #0]
 80032ce:	685a      	ldr	r2, [r3, #4]
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	641a      	str	r2, [r3, #64]	; 0x40
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	693a      	ldr	r2, [r7, #16]
 80032d8:	621a      	str	r2, [r3, #32]
 80032da:	bf00      	nop
 80032dc:	371c      	adds	r7, #28
 80032de:	46bd      	mov	sp, r7
 80032e0:	bc80      	pop	{r7}
 80032e2:	4770      	bx	lr
 80032e4:	40012c00 	.word	0x40012c00

080032e8 <TIM_TI1_ConfigInputStage>:
 80032e8:	b480      	push	{r7}
 80032ea:	b087      	sub	sp, #28
 80032ec:	af00      	add	r7, sp, #0
 80032ee:	60f8      	str	r0, [r7, #12]
 80032f0:	60b9      	str	r1, [r7, #8]
 80032f2:	607a      	str	r2, [r7, #4]
 80032f4:	68fb      	ldr	r3, [r7, #12]
 80032f6:	6a1b      	ldr	r3, [r3, #32]
 80032f8:	617b      	str	r3, [r7, #20]
 80032fa:	68fb      	ldr	r3, [r7, #12]
 80032fc:	6a1b      	ldr	r3, [r3, #32]
 80032fe:	f023 0201 	bic.w	r2, r3, #1
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	621a      	str	r2, [r3, #32]
 8003306:	68fb      	ldr	r3, [r7, #12]
 8003308:	699b      	ldr	r3, [r3, #24]
 800330a:	613b      	str	r3, [r7, #16]
 800330c:	693b      	ldr	r3, [r7, #16]
 800330e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003312:	613b      	str	r3, [r7, #16]
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	011b      	lsls	r3, r3, #4
 8003318:	693a      	ldr	r2, [r7, #16]
 800331a:	4313      	orrs	r3, r2
 800331c:	613b      	str	r3, [r7, #16]
 800331e:	697b      	ldr	r3, [r7, #20]
 8003320:	f023 030a 	bic.w	r3, r3, #10
 8003324:	617b      	str	r3, [r7, #20]
 8003326:	697a      	ldr	r2, [r7, #20]
 8003328:	68bb      	ldr	r3, [r7, #8]
 800332a:	4313      	orrs	r3, r2
 800332c:	617b      	str	r3, [r7, #20]
 800332e:	68fb      	ldr	r3, [r7, #12]
 8003330:	693a      	ldr	r2, [r7, #16]
 8003332:	619a      	str	r2, [r3, #24]
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	697a      	ldr	r2, [r7, #20]
 8003338:	621a      	str	r2, [r3, #32]
 800333a:	bf00      	nop
 800333c:	371c      	adds	r7, #28
 800333e:	46bd      	mov	sp, r7
 8003340:	bc80      	pop	{r7}
 8003342:	4770      	bx	lr

08003344 <TIM_TI2_ConfigInputStage>:
 8003344:	b480      	push	{r7}
 8003346:	b087      	sub	sp, #28
 8003348:	af00      	add	r7, sp, #0
 800334a:	60f8      	str	r0, [r7, #12]
 800334c:	60b9      	str	r1, [r7, #8]
 800334e:	607a      	str	r2, [r7, #4]
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	6a1b      	ldr	r3, [r3, #32]
 8003354:	f023 0210 	bic.w	r2, r3, #16
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	621a      	str	r2, [r3, #32]
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	699b      	ldr	r3, [r3, #24]
 8003360:	617b      	str	r3, [r7, #20]
 8003362:	68fb      	ldr	r3, [r7, #12]
 8003364:	6a1b      	ldr	r3, [r3, #32]
 8003366:	613b      	str	r3, [r7, #16]
 8003368:	697b      	ldr	r3, [r7, #20]
 800336a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800336e:	617b      	str	r3, [r7, #20]
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	031b      	lsls	r3, r3, #12
 8003374:	697a      	ldr	r2, [r7, #20]
 8003376:	4313      	orrs	r3, r2
 8003378:	617b      	str	r3, [r7, #20]
 800337a:	693b      	ldr	r3, [r7, #16]
 800337c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003380:	613b      	str	r3, [r7, #16]
 8003382:	68bb      	ldr	r3, [r7, #8]
 8003384:	011b      	lsls	r3, r3, #4
 8003386:	693a      	ldr	r2, [r7, #16]
 8003388:	4313      	orrs	r3, r2
 800338a:	613b      	str	r3, [r7, #16]
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	697a      	ldr	r2, [r7, #20]
 8003390:	619a      	str	r2, [r3, #24]
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	693a      	ldr	r2, [r7, #16]
 8003396:	621a      	str	r2, [r3, #32]
 8003398:	bf00      	nop
 800339a:	371c      	adds	r7, #28
 800339c:	46bd      	mov	sp, r7
 800339e:	bc80      	pop	{r7}
 80033a0:	4770      	bx	lr

080033a2 <TIM_ITRx_SetConfig>:
 80033a2:	b480      	push	{r7}
 80033a4:	b085      	sub	sp, #20
 80033a6:	af00      	add	r7, sp, #0
 80033a8:	6078      	str	r0, [r7, #4]
 80033aa:	6039      	str	r1, [r7, #0]
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	689b      	ldr	r3, [r3, #8]
 80033b0:	60fb      	str	r3, [r7, #12]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80033b8:	60fb      	str	r3, [r7, #12]
 80033ba:	683a      	ldr	r2, [r7, #0]
 80033bc:	68fb      	ldr	r3, [r7, #12]
 80033be:	4313      	orrs	r3, r2
 80033c0:	f043 0307 	orr.w	r3, r3, #7
 80033c4:	60fb      	str	r3, [r7, #12]
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	68fa      	ldr	r2, [r7, #12]
 80033ca:	609a      	str	r2, [r3, #8]
 80033cc:	bf00      	nop
 80033ce:	3714      	adds	r7, #20
 80033d0:	46bd      	mov	sp, r7
 80033d2:	bc80      	pop	{r7}
 80033d4:	4770      	bx	lr

080033d6 <TIM_ETR_SetConfig>:
 80033d6:	b480      	push	{r7}
 80033d8:	b087      	sub	sp, #28
 80033da:	af00      	add	r7, sp, #0
 80033dc:	60f8      	str	r0, [r7, #12]
 80033de:	60b9      	str	r1, [r7, #8]
 80033e0:	607a      	str	r2, [r7, #4]
 80033e2:	603b      	str	r3, [r7, #0]
 80033e4:	68fb      	ldr	r3, [r7, #12]
 80033e6:	689b      	ldr	r3, [r3, #8]
 80033e8:	617b      	str	r3, [r7, #20]
 80033ea:	697b      	ldr	r3, [r7, #20]
 80033ec:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80033f0:	617b      	str	r3, [r7, #20]
 80033f2:	683b      	ldr	r3, [r7, #0]
 80033f4:	021a      	lsls	r2, r3, #8
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	431a      	orrs	r2, r3
 80033fa:	68bb      	ldr	r3, [r7, #8]
 80033fc:	4313      	orrs	r3, r2
 80033fe:	697a      	ldr	r2, [r7, #20]
 8003400:	4313      	orrs	r3, r2
 8003402:	617b      	str	r3, [r7, #20]
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	697a      	ldr	r2, [r7, #20]
 8003408:	609a      	str	r2, [r3, #8]
 800340a:	bf00      	nop
 800340c:	371c      	adds	r7, #28
 800340e:	46bd      	mov	sp, r7
 8003410:	bc80      	pop	{r7}
 8003412:	4770      	bx	lr

08003414 <TIM_CCxChannelCmd>:
 8003414:	b480      	push	{r7}
 8003416:	b087      	sub	sp, #28
 8003418:	af00      	add	r7, sp, #0
 800341a:	60f8      	str	r0, [r7, #12]
 800341c:	60b9      	str	r1, [r7, #8]
 800341e:	607a      	str	r2, [r7, #4]
 8003420:	68bb      	ldr	r3, [r7, #8]
 8003422:	f003 031f 	and.w	r3, r3, #31
 8003426:	2201      	movs	r2, #1
 8003428:	fa02 f303 	lsl.w	r3, r2, r3
 800342c:	617b      	str	r3, [r7, #20]
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	6a1a      	ldr	r2, [r3, #32]
 8003432:	697b      	ldr	r3, [r7, #20]
 8003434:	43db      	mvns	r3, r3
 8003436:	401a      	ands	r2, r3
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	621a      	str	r2, [r3, #32]
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	6a1a      	ldr	r2, [r3, #32]
 8003440:	68bb      	ldr	r3, [r7, #8]
 8003442:	f003 031f 	and.w	r3, r3, #31
 8003446:	6879      	ldr	r1, [r7, #4]
 8003448:	fa01 f303 	lsl.w	r3, r1, r3
 800344c:	431a      	orrs	r2, r3
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	621a      	str	r2, [r3, #32]
 8003452:	bf00      	nop
 8003454:	371c      	adds	r7, #28
 8003456:	46bd      	mov	sp, r7
 8003458:	bc80      	pop	{r7}
 800345a:	4770      	bx	lr

0800345c <HAL_TIMEx_MasterConfigSynchronization>:
 800345c:	b480      	push	{r7}
 800345e:	b085      	sub	sp, #20
 8003460:	af00      	add	r7, sp, #0
 8003462:	6078      	str	r0, [r7, #4]
 8003464:	6039      	str	r1, [r7, #0]
 8003466:	687b      	ldr	r3, [r7, #4]
 8003468:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800346c:	2b01      	cmp	r3, #1
 800346e:	d101      	bne.n	8003474 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003470:	2302      	movs	r3, #2
 8003472:	e046      	b.n	8003502 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	2201      	movs	r2, #1
 8003478:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	2202      	movs	r2, #2
 8003480:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	681b      	ldr	r3, [r3, #0]
 8003488:	685b      	ldr	r3, [r3, #4]
 800348a:	60fb      	str	r3, [r7, #12]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	689b      	ldr	r3, [r3, #8]
 8003492:	60bb      	str	r3, [r7, #8]
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800349a:	60fb      	str	r3, [r7, #12]
 800349c:	683b      	ldr	r3, [r7, #0]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	68fa      	ldr	r2, [r7, #12]
 80034a2:	4313      	orrs	r3, r2
 80034a4:	60fb      	str	r3, [r7, #12]
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	681b      	ldr	r3, [r3, #0]
 80034aa:	68fa      	ldr	r2, [r7, #12]
 80034ac:	605a      	str	r2, [r3, #4]
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	4a16      	ldr	r2, [pc, #88]	; (800350c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80034b4:	4293      	cmp	r3, r2
 80034b6:	d00e      	beq.n	80034d6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80034c0:	d009      	beq.n	80034d6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	681b      	ldr	r3, [r3, #0]
 80034c6:	4a12      	ldr	r2, [pc, #72]	; (8003510 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80034c8:	4293      	cmp	r3, r2
 80034ca:	d004      	beq.n	80034d6 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	4a10      	ldr	r2, [pc, #64]	; (8003514 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 80034d2:	4293      	cmp	r3, r2
 80034d4:	d10c      	bne.n	80034f0 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 80034d6:	68bb      	ldr	r3, [r7, #8]
 80034d8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80034dc:	60bb      	str	r3, [r7, #8]
 80034de:	683b      	ldr	r3, [r7, #0]
 80034e0:	685b      	ldr	r3, [r3, #4]
 80034e2:	68ba      	ldr	r2, [r7, #8]
 80034e4:	4313      	orrs	r3, r2
 80034e6:	60bb      	str	r3, [r7, #8]
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	68ba      	ldr	r2, [r7, #8]
 80034ee:	609a      	str	r2, [r3, #8]
 80034f0:	687b      	ldr	r3, [r7, #4]
 80034f2:	2201      	movs	r2, #1
 80034f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	2200      	movs	r2, #0
 80034fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003500:	2300      	movs	r3, #0
 8003502:	4618      	mov	r0, r3
 8003504:	3714      	adds	r7, #20
 8003506:	46bd      	mov	sp, r7
 8003508:	bc80      	pop	{r7}
 800350a:	4770      	bx	lr
 800350c:	40012c00 	.word	0x40012c00
 8003510:	40000400 	.word	0x40000400
 8003514:	40000800 	.word	0x40000800

08003518 <HAL_TIMEx_CommutCallback>:
 8003518:	b480      	push	{r7}
 800351a:	b083      	sub	sp, #12
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	bf00      	nop
 8003522:	370c      	adds	r7, #12
 8003524:	46bd      	mov	sp, r7
 8003526:	bc80      	pop	{r7}
 8003528:	4770      	bx	lr

0800352a <HAL_TIMEx_BreakCallback>:
 800352a:	b480      	push	{r7}
 800352c:	b083      	sub	sp, #12
 800352e:	af00      	add	r7, sp, #0
 8003530:	6078      	str	r0, [r7, #4]
 8003532:	bf00      	nop
 8003534:	370c      	adds	r7, #12
 8003536:	46bd      	mov	sp, r7
 8003538:	bc80      	pop	{r7}
 800353a:	4770      	bx	lr

0800353c <HAL_UART_Init>:
 800353c:	b580      	push	{r7, lr}
 800353e:	b082      	sub	sp, #8
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	2b00      	cmp	r3, #0
 8003548:	d101      	bne.n	800354e <HAL_UART_Init+0x12>
 800354a:	2301      	movs	r3, #1
 800354c:	e03f      	b.n	80035ce <HAL_UART_Init+0x92>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003554:	b2db      	uxtb	r3, r3
 8003556:	2b00      	cmp	r3, #0
 8003558:	d106      	bne.n	8003568 <HAL_UART_Init+0x2c>
 800355a:	687b      	ldr	r3, [r7, #4]
 800355c:	2200      	movs	r2, #0
 800355e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003562:	6878      	ldr	r0, [r7, #4]
 8003564:	f7fd fe50 	bl	8001208 <HAL_UART_MspInit>
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	2224      	movs	r2, #36	; 0x24
 800356c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	68da      	ldr	r2, [r3, #12]
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800357e:	60da      	str	r2, [r3, #12]
 8003580:	6878      	ldr	r0, [r7, #4]
 8003582:	f000 fc25 	bl	8003dd0 <UART_SetConfig>
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	691a      	ldr	r2, [r3, #16]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003594:	611a      	str	r2, [r3, #16]
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	681b      	ldr	r3, [r3, #0]
 800359a:	695a      	ldr	r2, [r3, #20]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80035a4:	615a      	str	r2, [r3, #20]
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	681b      	ldr	r3, [r3, #0]
 80035aa:	68da      	ldr	r2, [r3, #12]
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80035b4:	60da      	str	r2, [r3, #12]
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	2200      	movs	r2, #0
 80035ba:	641a      	str	r2, [r3, #64]	; 0x40
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2220      	movs	r2, #32
 80035c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	2220      	movs	r2, #32
 80035c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035cc:	2300      	movs	r3, #0
 80035ce:	4618      	mov	r0, r3
 80035d0:	3708      	adds	r7, #8
 80035d2:	46bd      	mov	sp, r7
 80035d4:	bd80      	pop	{r7, pc}

080035d6 <HAL_UART_Transmit>:
 80035d6:	b580      	push	{r7, lr}
 80035d8:	b08a      	sub	sp, #40	; 0x28
 80035da:	af02      	add	r7, sp, #8
 80035dc:	60f8      	str	r0, [r7, #12]
 80035de:	60b9      	str	r1, [r7, #8]
 80035e0:	603b      	str	r3, [r7, #0]
 80035e2:	4613      	mov	r3, r2
 80035e4:	80fb      	strh	r3, [r7, #6]
 80035e6:	2300      	movs	r3, #0
 80035e8:	617b      	str	r3, [r7, #20]
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035f0:	b2db      	uxtb	r3, r3
 80035f2:	2b20      	cmp	r3, #32
 80035f4:	d17c      	bne.n	80036f0 <HAL_UART_Transmit+0x11a>
 80035f6:	68bb      	ldr	r3, [r7, #8]
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d002      	beq.n	8003602 <HAL_UART_Transmit+0x2c>
 80035fc:	88fb      	ldrh	r3, [r7, #6]
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d101      	bne.n	8003606 <HAL_UART_Transmit+0x30>
 8003602:	2301      	movs	r3, #1
 8003604:	e075      	b.n	80036f2 <HAL_UART_Transmit+0x11c>
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800360c:	2b01      	cmp	r3, #1
 800360e:	d101      	bne.n	8003614 <HAL_UART_Transmit+0x3e>
 8003610:	2302      	movs	r3, #2
 8003612:	e06e      	b.n	80036f2 <HAL_UART_Transmit+0x11c>
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	2201      	movs	r2, #1
 8003618:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	2200      	movs	r2, #0
 8003620:	641a      	str	r2, [r3, #64]	; 0x40
 8003622:	68fb      	ldr	r3, [r7, #12]
 8003624:	2221      	movs	r2, #33	; 0x21
 8003626:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800362a:	f7fe f87b 	bl	8001724 <HAL_GetTick>
 800362e:	6178      	str	r0, [r7, #20]
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	88fa      	ldrh	r2, [r7, #6]
 8003634:	849a      	strh	r2, [r3, #36]	; 0x24
 8003636:	68fb      	ldr	r3, [r7, #12]
 8003638:	88fa      	ldrh	r2, [r7, #6]
 800363a:	84da      	strh	r2, [r3, #38]	; 0x26
 800363c:	68fb      	ldr	r3, [r7, #12]
 800363e:	689b      	ldr	r3, [r3, #8]
 8003640:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003644:	d108      	bne.n	8003658 <HAL_UART_Transmit+0x82>
 8003646:	68fb      	ldr	r3, [r7, #12]
 8003648:	691b      	ldr	r3, [r3, #16]
 800364a:	2b00      	cmp	r3, #0
 800364c:	d104      	bne.n	8003658 <HAL_UART_Transmit+0x82>
 800364e:	2300      	movs	r3, #0
 8003650:	61fb      	str	r3, [r7, #28]
 8003652:	68bb      	ldr	r3, [r7, #8]
 8003654:	61bb      	str	r3, [r7, #24]
 8003656:	e003      	b.n	8003660 <HAL_UART_Transmit+0x8a>
 8003658:	68bb      	ldr	r3, [r7, #8]
 800365a:	61fb      	str	r3, [r7, #28]
 800365c:	2300      	movs	r3, #0
 800365e:	61bb      	str	r3, [r7, #24]
 8003660:	68fb      	ldr	r3, [r7, #12]
 8003662:	2200      	movs	r2, #0
 8003664:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003668:	e02a      	b.n	80036c0 <HAL_UART_Transmit+0xea>
 800366a:	683b      	ldr	r3, [r7, #0]
 800366c:	9300      	str	r3, [sp, #0]
 800366e:	697b      	ldr	r3, [r7, #20]
 8003670:	2200      	movs	r2, #0
 8003672:	2180      	movs	r1, #128	; 0x80
 8003674:	68f8      	ldr	r0, [r7, #12]
 8003676:	f000 fa11 	bl	8003a9c <UART_WaitOnFlagUntilTimeout>
 800367a:	4603      	mov	r3, r0
 800367c:	2b00      	cmp	r3, #0
 800367e:	d001      	beq.n	8003684 <HAL_UART_Transmit+0xae>
 8003680:	2303      	movs	r3, #3
 8003682:	e036      	b.n	80036f2 <HAL_UART_Transmit+0x11c>
 8003684:	69fb      	ldr	r3, [r7, #28]
 8003686:	2b00      	cmp	r3, #0
 8003688:	d10b      	bne.n	80036a2 <HAL_UART_Transmit+0xcc>
 800368a:	69bb      	ldr	r3, [r7, #24]
 800368c:	881b      	ldrh	r3, [r3, #0]
 800368e:	461a      	mov	r2, r3
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	681b      	ldr	r3, [r3, #0]
 8003694:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003698:	605a      	str	r2, [r3, #4]
 800369a:	69bb      	ldr	r3, [r7, #24]
 800369c:	3302      	adds	r3, #2
 800369e:	61bb      	str	r3, [r7, #24]
 80036a0:	e007      	b.n	80036b2 <HAL_UART_Transmit+0xdc>
 80036a2:	69fb      	ldr	r3, [r7, #28]
 80036a4:	781a      	ldrb	r2, [r3, #0]
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	605a      	str	r2, [r3, #4]
 80036ac:	69fb      	ldr	r3, [r7, #28]
 80036ae:	3301      	adds	r3, #1
 80036b0:	61fb      	str	r3, [r7, #28]
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80036b6:	b29b      	uxth	r3, r3
 80036b8:	3b01      	subs	r3, #1
 80036ba:	b29a      	uxth	r2, r3
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	84da      	strh	r2, [r3, #38]	; 0x26
 80036c0:	68fb      	ldr	r3, [r7, #12]
 80036c2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80036c4:	b29b      	uxth	r3, r3
 80036c6:	2b00      	cmp	r3, #0
 80036c8:	d1cf      	bne.n	800366a <HAL_UART_Transmit+0x94>
 80036ca:	683b      	ldr	r3, [r7, #0]
 80036cc:	9300      	str	r3, [sp, #0]
 80036ce:	697b      	ldr	r3, [r7, #20]
 80036d0:	2200      	movs	r2, #0
 80036d2:	2140      	movs	r1, #64	; 0x40
 80036d4:	68f8      	ldr	r0, [r7, #12]
 80036d6:	f000 f9e1 	bl	8003a9c <UART_WaitOnFlagUntilTimeout>
 80036da:	4603      	mov	r3, r0
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d001      	beq.n	80036e4 <HAL_UART_Transmit+0x10e>
 80036e0:	2303      	movs	r3, #3
 80036e2:	e006      	b.n	80036f2 <HAL_UART_Transmit+0x11c>
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	2220      	movs	r2, #32
 80036e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036ec:	2300      	movs	r3, #0
 80036ee:	e000      	b.n	80036f2 <HAL_UART_Transmit+0x11c>
 80036f0:	2302      	movs	r3, #2
 80036f2:	4618      	mov	r0, r3
 80036f4:	3720      	adds	r7, #32
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bd80      	pop	{r7, pc}
	...

080036fc <HAL_UART_IRQHandler>:
 80036fc:	b580      	push	{r7, lr}
 80036fe:	b08a      	sub	sp, #40	; 0x28
 8003700:	af00      	add	r7, sp, #0
 8003702:	6078      	str	r0, [r7, #4]
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	681b      	ldr	r3, [r3, #0]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	627b      	str	r3, [r7, #36]	; 0x24
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	681b      	ldr	r3, [r3, #0]
 8003710:	68db      	ldr	r3, [r3, #12]
 8003712:	623b      	str	r3, [r7, #32]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	695b      	ldr	r3, [r3, #20]
 800371a:	61fb      	str	r3, [r7, #28]
 800371c:	2300      	movs	r3, #0
 800371e:	61bb      	str	r3, [r7, #24]
 8003720:	2300      	movs	r3, #0
 8003722:	617b      	str	r3, [r7, #20]
 8003724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003726:	f003 030f 	and.w	r3, r3, #15
 800372a:	61bb      	str	r3, [r7, #24]
 800372c:	69bb      	ldr	r3, [r7, #24]
 800372e:	2b00      	cmp	r3, #0
 8003730:	d10d      	bne.n	800374e <HAL_UART_IRQHandler+0x52>
 8003732:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003734:	f003 0320 	and.w	r3, r3, #32
 8003738:	2b00      	cmp	r3, #0
 800373a:	d008      	beq.n	800374e <HAL_UART_IRQHandler+0x52>
 800373c:	6a3b      	ldr	r3, [r7, #32]
 800373e:	f003 0320 	and.w	r3, r3, #32
 8003742:	2b00      	cmp	r3, #0
 8003744:	d003      	beq.n	800374e <HAL_UART_IRQHandler+0x52>
 8003746:	6878      	ldr	r0, [r7, #4]
 8003748:	f000 fa99 	bl	8003c7e <UART_Receive_IT>
 800374c:	e17b      	b.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 800374e:	69bb      	ldr	r3, [r7, #24]
 8003750:	2b00      	cmp	r3, #0
 8003752:	f000 80b1 	beq.w	80038b8 <HAL_UART_IRQHandler+0x1bc>
 8003756:	69fb      	ldr	r3, [r7, #28]
 8003758:	f003 0301 	and.w	r3, r3, #1
 800375c:	2b00      	cmp	r3, #0
 800375e:	d105      	bne.n	800376c <HAL_UART_IRQHandler+0x70>
 8003760:	6a3b      	ldr	r3, [r7, #32]
 8003762:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003766:	2b00      	cmp	r3, #0
 8003768:	f000 80a6 	beq.w	80038b8 <HAL_UART_IRQHandler+0x1bc>
 800376c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800376e:	f003 0301 	and.w	r3, r3, #1
 8003772:	2b00      	cmp	r3, #0
 8003774:	d00a      	beq.n	800378c <HAL_UART_IRQHandler+0x90>
 8003776:	6a3b      	ldr	r3, [r7, #32]
 8003778:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800377c:	2b00      	cmp	r3, #0
 800377e:	d005      	beq.n	800378c <HAL_UART_IRQHandler+0x90>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003784:	f043 0201 	orr.w	r2, r3, #1
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	641a      	str	r2, [r3, #64]	; 0x40
 800378c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800378e:	f003 0304 	and.w	r3, r3, #4
 8003792:	2b00      	cmp	r3, #0
 8003794:	d00a      	beq.n	80037ac <HAL_UART_IRQHandler+0xb0>
 8003796:	69fb      	ldr	r3, [r7, #28]
 8003798:	f003 0301 	and.w	r3, r3, #1
 800379c:	2b00      	cmp	r3, #0
 800379e:	d005      	beq.n	80037ac <HAL_UART_IRQHandler+0xb0>
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037a4:	f043 0202 	orr.w	r2, r3, #2
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	641a      	str	r2, [r3, #64]	; 0x40
 80037ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037ae:	f003 0302 	and.w	r3, r3, #2
 80037b2:	2b00      	cmp	r3, #0
 80037b4:	d00a      	beq.n	80037cc <HAL_UART_IRQHandler+0xd0>
 80037b6:	69fb      	ldr	r3, [r7, #28]
 80037b8:	f003 0301 	and.w	r3, r3, #1
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d005      	beq.n	80037cc <HAL_UART_IRQHandler+0xd0>
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037c4:	f043 0204 	orr.w	r2, r3, #4
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	641a      	str	r2, [r3, #64]	; 0x40
 80037cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037ce:	f003 0308 	and.w	r3, r3, #8
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d00f      	beq.n	80037f6 <HAL_UART_IRQHandler+0xfa>
 80037d6:	6a3b      	ldr	r3, [r7, #32]
 80037d8:	f003 0320 	and.w	r3, r3, #32
 80037dc:	2b00      	cmp	r3, #0
 80037de:	d104      	bne.n	80037ea <HAL_UART_IRQHandler+0xee>
 80037e0:	69fb      	ldr	r3, [r7, #28]
 80037e2:	f003 0301 	and.w	r3, r3, #1
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d005      	beq.n	80037f6 <HAL_UART_IRQHandler+0xfa>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ee:	f043 0208 	orr.w	r2, r3, #8
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	641a      	str	r2, [r3, #64]	; 0x40
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	f000 811e 	beq.w	8003a3c <HAL_UART_IRQHandler+0x340>
 8003800:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003802:	f003 0320 	and.w	r3, r3, #32
 8003806:	2b00      	cmp	r3, #0
 8003808:	d007      	beq.n	800381a <HAL_UART_IRQHandler+0x11e>
 800380a:	6a3b      	ldr	r3, [r7, #32]
 800380c:	f003 0320 	and.w	r3, r3, #32
 8003810:	2b00      	cmp	r3, #0
 8003812:	d002      	beq.n	800381a <HAL_UART_IRQHandler+0x11e>
 8003814:	6878      	ldr	r0, [r7, #4]
 8003816:	f000 fa32 	bl	8003c7e <UART_Receive_IT>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	695b      	ldr	r3, [r3, #20]
 8003820:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003824:	2b00      	cmp	r3, #0
 8003826:	bf14      	ite	ne
 8003828:	2301      	movne	r3, #1
 800382a:	2300      	moveq	r3, #0
 800382c:	b2db      	uxtb	r3, r3
 800382e:	617b      	str	r3, [r7, #20]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003834:	f003 0308 	and.w	r3, r3, #8
 8003838:	2b00      	cmp	r3, #0
 800383a:	d102      	bne.n	8003842 <HAL_UART_IRQHandler+0x146>
 800383c:	697b      	ldr	r3, [r7, #20]
 800383e:	2b00      	cmp	r3, #0
 8003840:	d031      	beq.n	80038a6 <HAL_UART_IRQHandler+0x1aa>
 8003842:	6878      	ldr	r0, [r7, #4]
 8003844:	f000 f974 	bl	8003b30 <UART_EndRxTransfer>
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	681b      	ldr	r3, [r3, #0]
 800384c:	695b      	ldr	r3, [r3, #20]
 800384e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003852:	2b00      	cmp	r3, #0
 8003854:	d023      	beq.n	800389e <HAL_UART_IRQHandler+0x1a2>
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	681b      	ldr	r3, [r3, #0]
 800385a:	695a      	ldr	r2, [r3, #20]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003864:	615a      	str	r2, [r3, #20]
 8003866:	687b      	ldr	r3, [r7, #4]
 8003868:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800386a:	2b00      	cmp	r3, #0
 800386c:	d013      	beq.n	8003896 <HAL_UART_IRQHandler+0x19a>
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003872:	4a76      	ldr	r2, [pc, #472]	; (8003a4c <HAL_UART_IRQHandler+0x350>)
 8003874:	635a      	str	r2, [r3, #52]	; 0x34
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800387a:	4618      	mov	r0, r3
 800387c:	f7fe f8a4 	bl	80019c8 <HAL_DMA_Abort_IT>
 8003880:	4603      	mov	r3, r0
 8003882:	2b00      	cmp	r3, #0
 8003884:	d016      	beq.n	80038b4 <HAL_UART_IRQHandler+0x1b8>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800388a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800388c:	687a      	ldr	r2, [r7, #4]
 800388e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8003890:	4610      	mov	r0, r2
 8003892:	4798      	blx	r3
 8003894:	e00e      	b.n	80038b4 <HAL_UART_IRQHandler+0x1b8>
 8003896:	6878      	ldr	r0, [r7, #4]
 8003898:	f000 f8ec 	bl	8003a74 <HAL_UART_ErrorCallback>
 800389c:	e00a      	b.n	80038b4 <HAL_UART_IRQHandler+0x1b8>
 800389e:	6878      	ldr	r0, [r7, #4]
 80038a0:	f000 f8e8 	bl	8003a74 <HAL_UART_ErrorCallback>
 80038a4:	e006      	b.n	80038b4 <HAL_UART_IRQHandler+0x1b8>
 80038a6:	6878      	ldr	r0, [r7, #4]
 80038a8:	f000 f8e4 	bl	8003a74 <HAL_UART_ErrorCallback>
 80038ac:	687b      	ldr	r3, [r7, #4]
 80038ae:	2200      	movs	r2, #0
 80038b0:	641a      	str	r2, [r3, #64]	; 0x40
 80038b2:	e0c3      	b.n	8003a3c <HAL_UART_IRQHandler+0x340>
 80038b4:	bf00      	nop
 80038b6:	e0c1      	b.n	8003a3c <HAL_UART_IRQHandler+0x340>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80038bc:	2b01      	cmp	r3, #1
 80038be:	f040 80a1 	bne.w	8003a04 <HAL_UART_IRQHandler+0x308>
 80038c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038c4:	f003 0310 	and.w	r3, r3, #16
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	f000 809b 	beq.w	8003a04 <HAL_UART_IRQHandler+0x308>
 80038ce:	6a3b      	ldr	r3, [r7, #32]
 80038d0:	f003 0310 	and.w	r3, r3, #16
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	f000 8095 	beq.w	8003a04 <HAL_UART_IRQHandler+0x308>
 80038da:	2300      	movs	r3, #0
 80038dc:	60fb      	str	r3, [r7, #12]
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	681b      	ldr	r3, [r3, #0]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	60fb      	str	r3, [r7, #12]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	685b      	ldr	r3, [r3, #4]
 80038ec:	60fb      	str	r3, [r7, #12]
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	695b      	ldr	r3, [r3, #20]
 80038f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038fa:	2b00      	cmp	r3, #0
 80038fc:	d04e      	beq.n	800399c <HAL_UART_IRQHandler+0x2a0>
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	685b      	ldr	r3, [r3, #4]
 8003906:	823b      	strh	r3, [r7, #16]
 8003908:	8a3b      	ldrh	r3, [r7, #16]
 800390a:	2b00      	cmp	r3, #0
 800390c:	f000 8098 	beq.w	8003a40 <HAL_UART_IRQHandler+0x344>
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003914:	8a3a      	ldrh	r2, [r7, #16]
 8003916:	429a      	cmp	r2, r3
 8003918:	f080 8092 	bcs.w	8003a40 <HAL_UART_IRQHandler+0x344>
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	8a3a      	ldrh	r2, [r7, #16]
 8003920:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003926:	699b      	ldr	r3, [r3, #24]
 8003928:	2b20      	cmp	r3, #32
 800392a:	d02b      	beq.n	8003984 <HAL_UART_IRQHandler+0x288>
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	68da      	ldr	r2, [r3, #12]
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800393a:	60da      	str	r2, [r3, #12]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	695a      	ldr	r2, [r3, #20]
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	f022 0201 	bic.w	r2, r2, #1
 800394a:	615a      	str	r2, [r3, #20]
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	695a      	ldr	r2, [r3, #20]
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800395a:	615a      	str	r2, [r3, #20]
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	2220      	movs	r2, #32
 8003960:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	2200      	movs	r2, #0
 8003968:	631a      	str	r2, [r3, #48]	; 0x30
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	68da      	ldr	r2, [r3, #12]
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	681b      	ldr	r3, [r3, #0]
 8003974:	f022 0210 	bic.w	r2, r2, #16
 8003978:	60da      	str	r2, [r3, #12]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800397e:	4618      	mov	r0, r3
 8003980:	f7fd ffe7 	bl	8001952 <HAL_DMA_Abort>
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800398c:	b29b      	uxth	r3, r3
 800398e:	1ad3      	subs	r3, r2, r3
 8003990:	b29b      	uxth	r3, r3
 8003992:	4619      	mov	r1, r3
 8003994:	6878      	ldr	r0, [r7, #4]
 8003996:	f000 f876 	bl	8003a86 <HAL_UARTEx_RxEventCallback>
 800399a:	e051      	b.n	8003a40 <HAL_UART_IRQHandler+0x344>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80039a4:	b29b      	uxth	r3, r3
 80039a6:	1ad3      	subs	r3, r2, r3
 80039a8:	827b      	strh	r3, [r7, #18]
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80039ae:	b29b      	uxth	r3, r3
 80039b0:	2b00      	cmp	r3, #0
 80039b2:	d047      	beq.n	8003a44 <HAL_UART_IRQHandler+0x348>
 80039b4:	8a7b      	ldrh	r3, [r7, #18]
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d044      	beq.n	8003a44 <HAL_UART_IRQHandler+0x348>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	68da      	ldr	r2, [r3, #12]
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80039c8:	60da      	str	r2, [r3, #12]
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	695a      	ldr	r2, [r3, #20]
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	f022 0201 	bic.w	r2, r2, #1
 80039d8:	615a      	str	r2, [r3, #20]
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	2220      	movs	r2, #32
 80039de:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	2200      	movs	r2, #0
 80039e6:	631a      	str	r2, [r3, #48]	; 0x30
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	68da      	ldr	r2, [r3, #12]
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	f022 0210 	bic.w	r2, r2, #16
 80039f6:	60da      	str	r2, [r3, #12]
 80039f8:	8a7b      	ldrh	r3, [r7, #18]
 80039fa:	4619      	mov	r1, r3
 80039fc:	6878      	ldr	r0, [r7, #4]
 80039fe:	f000 f842 	bl	8003a86 <HAL_UARTEx_RxEventCallback>
 8003a02:	e01f      	b.n	8003a44 <HAL_UART_IRQHandler+0x348>
 8003a04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d008      	beq.n	8003a20 <HAL_UART_IRQHandler+0x324>
 8003a0e:	6a3b      	ldr	r3, [r7, #32]
 8003a10:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a14:	2b00      	cmp	r3, #0
 8003a16:	d003      	beq.n	8003a20 <HAL_UART_IRQHandler+0x324>
 8003a18:	6878      	ldr	r0, [r7, #4]
 8003a1a:	f000 f8c9 	bl	8003bb0 <UART_Transmit_IT>
 8003a1e:	e012      	b.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a22:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d00d      	beq.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a2a:	6a3b      	ldr	r3, [r7, #32]
 8003a2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d008      	beq.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a34:	6878      	ldr	r0, [r7, #4]
 8003a36:	f000 f90a 	bl	8003c4e <UART_EndTransmit_IT>
 8003a3a:	e004      	b.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a3c:	bf00      	nop
 8003a3e:	e002      	b.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a40:	bf00      	nop
 8003a42:	e000      	b.n	8003a46 <HAL_UART_IRQHandler+0x34a>
 8003a44:	bf00      	nop
 8003a46:	3728      	adds	r7, #40	; 0x28
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	bd80      	pop	{r7, pc}
 8003a4c:	08003b89 	.word	0x08003b89

08003a50 <HAL_UART_TxCpltCallback>:
 8003a50:	b480      	push	{r7}
 8003a52:	b083      	sub	sp, #12
 8003a54:	af00      	add	r7, sp, #0
 8003a56:	6078      	str	r0, [r7, #4]
 8003a58:	bf00      	nop
 8003a5a:	370c      	adds	r7, #12
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bc80      	pop	{r7}
 8003a60:	4770      	bx	lr

08003a62 <HAL_UART_RxCpltCallback>:
 8003a62:	b480      	push	{r7}
 8003a64:	b083      	sub	sp, #12
 8003a66:	af00      	add	r7, sp, #0
 8003a68:	6078      	str	r0, [r7, #4]
 8003a6a:	bf00      	nop
 8003a6c:	370c      	adds	r7, #12
 8003a6e:	46bd      	mov	sp, r7
 8003a70:	bc80      	pop	{r7}
 8003a72:	4770      	bx	lr

08003a74 <HAL_UART_ErrorCallback>:
 8003a74:	b480      	push	{r7}
 8003a76:	b083      	sub	sp, #12
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	6078      	str	r0, [r7, #4]
 8003a7c:	bf00      	nop
 8003a7e:	370c      	adds	r7, #12
 8003a80:	46bd      	mov	sp, r7
 8003a82:	bc80      	pop	{r7}
 8003a84:	4770      	bx	lr

08003a86 <HAL_UARTEx_RxEventCallback>:
 8003a86:	b480      	push	{r7}
 8003a88:	b083      	sub	sp, #12
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	6078      	str	r0, [r7, #4]
 8003a8e:	460b      	mov	r3, r1
 8003a90:	807b      	strh	r3, [r7, #2]
 8003a92:	bf00      	nop
 8003a94:	370c      	adds	r7, #12
 8003a96:	46bd      	mov	sp, r7
 8003a98:	bc80      	pop	{r7}
 8003a9a:	4770      	bx	lr

08003a9c <UART_WaitOnFlagUntilTimeout>:
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b084      	sub	sp, #16
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	60f8      	str	r0, [r7, #12]
 8003aa4:	60b9      	str	r1, [r7, #8]
 8003aa6:	603b      	str	r3, [r7, #0]
 8003aa8:	4613      	mov	r3, r2
 8003aaa:	71fb      	strb	r3, [r7, #7]
 8003aac:	e02c      	b.n	8003b08 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003aae:	69bb      	ldr	r3, [r7, #24]
 8003ab0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003ab4:	d028      	beq.n	8003b08 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003ab6:	69bb      	ldr	r3, [r7, #24]
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d007      	beq.n	8003acc <UART_WaitOnFlagUntilTimeout+0x30>
 8003abc:	f7fd fe32 	bl	8001724 <HAL_GetTick>
 8003ac0:	4602      	mov	r2, r0
 8003ac2:	683b      	ldr	r3, [r7, #0]
 8003ac4:	1ad3      	subs	r3, r2, r3
 8003ac6:	69ba      	ldr	r2, [r7, #24]
 8003ac8:	429a      	cmp	r2, r3
 8003aca:	d21d      	bcs.n	8003b08 <UART_WaitOnFlagUntilTimeout+0x6c>
 8003acc:	68fb      	ldr	r3, [r7, #12]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	68da      	ldr	r2, [r3, #12]
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8003ada:	60da      	str	r2, [r3, #12]
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	695a      	ldr	r2, [r3, #20]
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	681b      	ldr	r3, [r3, #0]
 8003ae6:	f022 0201 	bic.w	r2, r2, #1
 8003aea:	615a      	str	r2, [r3, #20]
 8003aec:	68fb      	ldr	r3, [r7, #12]
 8003aee:	2220      	movs	r2, #32
 8003af0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	2220      	movs	r2, #32
 8003af8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	2200      	movs	r2, #0
 8003b00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b04:	2303      	movs	r3, #3
 8003b06:	e00f      	b.n	8003b28 <UART_WaitOnFlagUntilTimeout+0x8c>
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	681a      	ldr	r2, [r3, #0]
 8003b0e:	68bb      	ldr	r3, [r7, #8]
 8003b10:	4013      	ands	r3, r2
 8003b12:	68ba      	ldr	r2, [r7, #8]
 8003b14:	429a      	cmp	r2, r3
 8003b16:	bf0c      	ite	eq
 8003b18:	2301      	moveq	r3, #1
 8003b1a:	2300      	movne	r3, #0
 8003b1c:	b2db      	uxtb	r3, r3
 8003b1e:	461a      	mov	r2, r3
 8003b20:	79fb      	ldrb	r3, [r7, #7]
 8003b22:	429a      	cmp	r2, r3
 8003b24:	d0c3      	beq.n	8003aae <UART_WaitOnFlagUntilTimeout+0x12>
 8003b26:	2300      	movs	r3, #0
 8003b28:	4618      	mov	r0, r3
 8003b2a:	3710      	adds	r7, #16
 8003b2c:	46bd      	mov	sp, r7
 8003b2e:	bd80      	pop	{r7, pc}

08003b30 <UART_EndRxTransfer>:
 8003b30:	b480      	push	{r7}
 8003b32:	b083      	sub	sp, #12
 8003b34:	af00      	add	r7, sp, #0
 8003b36:	6078      	str	r0, [r7, #4]
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	68da      	ldr	r2, [r3, #12]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8003b46:	60da      	str	r2, [r3, #12]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	695a      	ldr	r2, [r3, #20]
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f022 0201 	bic.w	r2, r2, #1
 8003b56:	615a      	str	r2, [r3, #20]
 8003b58:	687b      	ldr	r3, [r7, #4]
 8003b5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b5c:	2b01      	cmp	r3, #1
 8003b5e:	d107      	bne.n	8003b70 <UART_EndRxTransfer+0x40>
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	68da      	ldr	r2, [r3, #12]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f022 0210 	bic.w	r2, r2, #16
 8003b6e:	60da      	str	r2, [r3, #12]
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	2220      	movs	r2, #32
 8003b74:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	631a      	str	r2, [r3, #48]	; 0x30
 8003b7e:	bf00      	nop
 8003b80:	370c      	adds	r7, #12
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bc80      	pop	{r7}
 8003b86:	4770      	bx	lr

08003b88 <UART_DMAAbortOnError>:
 8003b88:	b580      	push	{r7, lr}
 8003b8a:	b084      	sub	sp, #16
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
 8003b90:	687b      	ldr	r3, [r7, #4]
 8003b92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b94:	60fb      	str	r3, [r7, #12]
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	2200      	movs	r2, #0
 8003b9a:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	2200      	movs	r2, #0
 8003ba0:	84da      	strh	r2, [r3, #38]	; 0x26
 8003ba2:	68f8      	ldr	r0, [r7, #12]
 8003ba4:	f7ff ff66 	bl	8003a74 <HAL_UART_ErrorCallback>
 8003ba8:	bf00      	nop
 8003baa:	3710      	adds	r7, #16
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}

08003bb0 <UART_Transmit_IT>:
 8003bb0:	b480      	push	{r7}
 8003bb2:	b085      	sub	sp, #20
 8003bb4:	af00      	add	r7, sp, #0
 8003bb6:	6078      	str	r0, [r7, #4]
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003bbe:	b2db      	uxtb	r3, r3
 8003bc0:	2b21      	cmp	r3, #33	; 0x21
 8003bc2:	d13e      	bne.n	8003c42 <UART_Transmit_IT+0x92>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	689b      	ldr	r3, [r3, #8]
 8003bc8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003bcc:	d114      	bne.n	8003bf8 <UART_Transmit_IT+0x48>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	691b      	ldr	r3, [r3, #16]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	d110      	bne.n	8003bf8 <UART_Transmit_IT+0x48>
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	6a1b      	ldr	r3, [r3, #32]
 8003bda:	60fb      	str	r3, [r7, #12]
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	881b      	ldrh	r3, [r3, #0]
 8003be0:	461a      	mov	r2, r3
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003bea:	605a      	str	r2, [r3, #4]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6a1b      	ldr	r3, [r3, #32]
 8003bf0:	1c9a      	adds	r2, r3, #2
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	621a      	str	r2, [r3, #32]
 8003bf6:	e008      	b.n	8003c0a <UART_Transmit_IT+0x5a>
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	6a1b      	ldr	r3, [r3, #32]
 8003bfc:	1c59      	adds	r1, r3, #1
 8003bfe:	687a      	ldr	r2, [r7, #4]
 8003c00:	6211      	str	r1, [r2, #32]
 8003c02:	781a      	ldrb	r2, [r3, #0]
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	605a      	str	r2, [r3, #4]
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003c0e:	b29b      	uxth	r3, r3
 8003c10:	3b01      	subs	r3, #1
 8003c12:	b29b      	uxth	r3, r3
 8003c14:	687a      	ldr	r2, [r7, #4]
 8003c16:	4619      	mov	r1, r3
 8003c18:	84d1      	strh	r1, [r2, #38]	; 0x26
 8003c1a:	2b00      	cmp	r3, #0
 8003c1c:	d10f      	bne.n	8003c3e <UART_Transmit_IT+0x8e>
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	68da      	ldr	r2, [r3, #12]
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003c2c:	60da      	str	r2, [r3, #12]
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	68da      	ldr	r2, [r3, #12]
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003c3c:	60da      	str	r2, [r3, #12]
 8003c3e:	2300      	movs	r3, #0
 8003c40:	e000      	b.n	8003c44 <UART_Transmit_IT+0x94>
 8003c42:	2302      	movs	r3, #2
 8003c44:	4618      	mov	r0, r3
 8003c46:	3714      	adds	r7, #20
 8003c48:	46bd      	mov	sp, r7
 8003c4a:	bc80      	pop	{r7}
 8003c4c:	4770      	bx	lr

08003c4e <UART_EndTransmit_IT>:
 8003c4e:	b580      	push	{r7, lr}
 8003c50:	b082      	sub	sp, #8
 8003c52:	af00      	add	r7, sp, #0
 8003c54:	6078      	str	r0, [r7, #4]
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	68da      	ldr	r2, [r3, #12]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003c64:	60da      	str	r2, [r3, #12]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	2220      	movs	r2, #32
 8003c6a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c6e:	6878      	ldr	r0, [r7, #4]
 8003c70:	f7ff feee 	bl	8003a50 <HAL_UART_TxCpltCallback>
 8003c74:	2300      	movs	r3, #0
 8003c76:	4618      	mov	r0, r3
 8003c78:	3708      	adds	r7, #8
 8003c7a:	46bd      	mov	sp, r7
 8003c7c:	bd80      	pop	{r7, pc}

08003c7e <UART_Receive_IT>:
 8003c7e:	b580      	push	{r7, lr}
 8003c80:	b086      	sub	sp, #24
 8003c82:	af00      	add	r7, sp, #0
 8003c84:	6078      	str	r0, [r7, #4]
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003c8c:	b2db      	uxtb	r3, r3
 8003c8e:	2b22      	cmp	r3, #34	; 0x22
 8003c90:	f040 8099 	bne.w	8003dc6 <UART_Receive_IT+0x148>
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	689b      	ldr	r3, [r3, #8]
 8003c98:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003c9c:	d117      	bne.n	8003cce <UART_Receive_IT+0x50>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	691b      	ldr	r3, [r3, #16]
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d113      	bne.n	8003cce <UART_Receive_IT+0x50>
 8003ca6:	2300      	movs	r3, #0
 8003ca8:	617b      	str	r3, [r7, #20]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003cae:	613b      	str	r3, [r7, #16]
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	685b      	ldr	r3, [r3, #4]
 8003cb6:	b29b      	uxth	r3, r3
 8003cb8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003cbc:	b29a      	uxth	r2, r3
 8003cbe:	693b      	ldr	r3, [r7, #16]
 8003cc0:	801a      	strh	r2, [r3, #0]
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003cc6:	1c9a      	adds	r2, r3, #2
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	629a      	str	r2, [r3, #40]	; 0x28
 8003ccc:	e026      	b.n	8003d1c <UART_Receive_IT+0x9e>
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003cd2:	617b      	str	r3, [r7, #20]
 8003cd4:	2300      	movs	r3, #0
 8003cd6:	613b      	str	r3, [r7, #16]
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	689b      	ldr	r3, [r3, #8]
 8003cdc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003ce0:	d007      	beq.n	8003cf2 <UART_Receive_IT+0x74>
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	689b      	ldr	r3, [r3, #8]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d10a      	bne.n	8003d00 <UART_Receive_IT+0x82>
 8003cea:	687b      	ldr	r3, [r7, #4]
 8003cec:	691b      	ldr	r3, [r3, #16]
 8003cee:	2b00      	cmp	r3, #0
 8003cf0:	d106      	bne.n	8003d00 <UART_Receive_IT+0x82>
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	685b      	ldr	r3, [r3, #4]
 8003cf8:	b2da      	uxtb	r2, r3
 8003cfa:	697b      	ldr	r3, [r7, #20]
 8003cfc:	701a      	strb	r2, [r3, #0]
 8003cfe:	e008      	b.n	8003d12 <UART_Receive_IT+0x94>
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	685b      	ldr	r3, [r3, #4]
 8003d06:	b2db      	uxtb	r3, r3
 8003d08:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8003d0c:	b2da      	uxtb	r2, r3
 8003d0e:	697b      	ldr	r3, [r7, #20]
 8003d10:	701a      	strb	r2, [r3, #0]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003d16:	1c5a      	adds	r2, r3, #1
 8003d18:	687b      	ldr	r3, [r7, #4]
 8003d1a:	629a      	str	r2, [r3, #40]	; 0x28
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8003d20:	b29b      	uxth	r3, r3
 8003d22:	3b01      	subs	r3, #1
 8003d24:	b29b      	uxth	r3, r3
 8003d26:	687a      	ldr	r2, [r7, #4]
 8003d28:	4619      	mov	r1, r3
 8003d2a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d148      	bne.n	8003dc2 <UART_Receive_IT+0x144>
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	68da      	ldr	r2, [r3, #12]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	f022 0220 	bic.w	r2, r2, #32
 8003d3e:	60da      	str	r2, [r3, #12]
 8003d40:	687b      	ldr	r3, [r7, #4]
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	68da      	ldr	r2, [r3, #12]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003d4e:	60da      	str	r2, [r3, #12]
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	695a      	ldr	r2, [r3, #20]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	f022 0201 	bic.w	r2, r2, #1
 8003d5e:	615a      	str	r2, [r3, #20]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	2220      	movs	r2, #32
 8003d64:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d6c:	2b01      	cmp	r3, #1
 8003d6e:	d123      	bne.n	8003db8 <UART_Receive_IT+0x13a>
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	2200      	movs	r2, #0
 8003d74:	631a      	str	r2, [r3, #48]	; 0x30
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	68da      	ldr	r2, [r3, #12]
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	f022 0210 	bic.w	r2, r2, #16
 8003d84:	60da      	str	r2, [r3, #12]
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	681b      	ldr	r3, [r3, #0]
 8003d8a:	681b      	ldr	r3, [r3, #0]
 8003d8c:	f003 0310 	and.w	r3, r3, #16
 8003d90:	2b10      	cmp	r3, #16
 8003d92:	d10a      	bne.n	8003daa <UART_Receive_IT+0x12c>
 8003d94:	2300      	movs	r3, #0
 8003d96:	60fb      	str	r3, [r7, #12]
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	60fb      	str	r3, [r7, #12]
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	685b      	ldr	r3, [r3, #4]
 8003da6:	60fb      	str	r3, [r7, #12]
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8003dae:	4619      	mov	r1, r3
 8003db0:	6878      	ldr	r0, [r7, #4]
 8003db2:	f7ff fe68 	bl	8003a86 <HAL_UARTEx_RxEventCallback>
 8003db6:	e002      	b.n	8003dbe <UART_Receive_IT+0x140>
 8003db8:	6878      	ldr	r0, [r7, #4]
 8003dba:	f7ff fe52 	bl	8003a62 <HAL_UART_RxCpltCallback>
 8003dbe:	2300      	movs	r3, #0
 8003dc0:	e002      	b.n	8003dc8 <UART_Receive_IT+0x14a>
 8003dc2:	2300      	movs	r3, #0
 8003dc4:	e000      	b.n	8003dc8 <UART_Receive_IT+0x14a>
 8003dc6:	2302      	movs	r3, #2
 8003dc8:	4618      	mov	r0, r3
 8003dca:	3718      	adds	r7, #24
 8003dcc:	46bd      	mov	sp, r7
 8003dce:	bd80      	pop	{r7, pc}

08003dd0 <UART_SetConfig>:
 8003dd0:	b580      	push	{r7, lr}
 8003dd2:	b084      	sub	sp, #16
 8003dd4:	af00      	add	r7, sp, #0
 8003dd6:	6078      	str	r0, [r7, #4]
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	681b      	ldr	r3, [r3, #0]
 8003ddc:	691b      	ldr	r3, [r3, #16]
 8003dde:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	68da      	ldr	r2, [r3, #12]
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	430a      	orrs	r2, r1
 8003dec:	611a      	str	r2, [r3, #16]
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	689a      	ldr	r2, [r3, #8]
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	691b      	ldr	r3, [r3, #16]
 8003df6:	431a      	orrs	r2, r3
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	695b      	ldr	r3, [r3, #20]
 8003dfc:	4313      	orrs	r3, r2
 8003dfe:	60bb      	str	r3, [r7, #8]
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	68db      	ldr	r3, [r3, #12]
 8003e06:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8003e0a:	f023 030c 	bic.w	r3, r3, #12
 8003e0e:	687a      	ldr	r2, [r7, #4]
 8003e10:	6812      	ldr	r2, [r2, #0]
 8003e12:	68b9      	ldr	r1, [r7, #8]
 8003e14:	430b      	orrs	r3, r1
 8003e16:	60d3      	str	r3, [r2, #12]
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	695b      	ldr	r3, [r3, #20]
 8003e1e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	699a      	ldr	r2, [r3, #24]
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	430a      	orrs	r2, r1
 8003e2c:	615a      	str	r2, [r3, #20]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	4a2c      	ldr	r2, [pc, #176]	; (8003ee4 <UART_SetConfig+0x114>)
 8003e34:	4293      	cmp	r3, r2
 8003e36:	d103      	bne.n	8003e40 <UART_SetConfig+0x70>
 8003e38:	f7fe fbf0 	bl	800261c <HAL_RCC_GetPCLK2Freq>
 8003e3c:	60f8      	str	r0, [r7, #12]
 8003e3e:	e002      	b.n	8003e46 <UART_SetConfig+0x76>
 8003e40:	f7fe fbd8 	bl	80025f4 <HAL_RCC_GetPCLK1Freq>
 8003e44:	60f8      	str	r0, [r7, #12]
 8003e46:	68fa      	ldr	r2, [r7, #12]
 8003e48:	4613      	mov	r3, r2
 8003e4a:	009b      	lsls	r3, r3, #2
 8003e4c:	4413      	add	r3, r2
 8003e4e:	009a      	lsls	r2, r3, #2
 8003e50:	441a      	add	r2, r3
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	685b      	ldr	r3, [r3, #4]
 8003e56:	009b      	lsls	r3, r3, #2
 8003e58:	fbb2 f3f3 	udiv	r3, r2, r3
 8003e5c:	4a22      	ldr	r2, [pc, #136]	; (8003ee8 <UART_SetConfig+0x118>)
 8003e5e:	fba2 2303 	umull	r2, r3, r2, r3
 8003e62:	095b      	lsrs	r3, r3, #5
 8003e64:	0119      	lsls	r1, r3, #4
 8003e66:	68fa      	ldr	r2, [r7, #12]
 8003e68:	4613      	mov	r3, r2
 8003e6a:	009b      	lsls	r3, r3, #2
 8003e6c:	4413      	add	r3, r2
 8003e6e:	009a      	lsls	r2, r3, #2
 8003e70:	441a      	add	r2, r3
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	685b      	ldr	r3, [r3, #4]
 8003e76:	009b      	lsls	r3, r3, #2
 8003e78:	fbb2 f2f3 	udiv	r2, r2, r3
 8003e7c:	4b1a      	ldr	r3, [pc, #104]	; (8003ee8 <UART_SetConfig+0x118>)
 8003e7e:	fba3 0302 	umull	r0, r3, r3, r2
 8003e82:	095b      	lsrs	r3, r3, #5
 8003e84:	2064      	movs	r0, #100	; 0x64
 8003e86:	fb00 f303 	mul.w	r3, r0, r3
 8003e8a:	1ad3      	subs	r3, r2, r3
 8003e8c:	011b      	lsls	r3, r3, #4
 8003e8e:	3332      	adds	r3, #50	; 0x32
 8003e90:	4a15      	ldr	r2, [pc, #84]	; (8003ee8 <UART_SetConfig+0x118>)
 8003e92:	fba2 2303 	umull	r2, r3, r2, r3
 8003e96:	095b      	lsrs	r3, r3, #5
 8003e98:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003e9c:	4419      	add	r1, r3
 8003e9e:	68fa      	ldr	r2, [r7, #12]
 8003ea0:	4613      	mov	r3, r2
 8003ea2:	009b      	lsls	r3, r3, #2
 8003ea4:	4413      	add	r3, r2
 8003ea6:	009a      	lsls	r2, r3, #2
 8003ea8:	441a      	add	r2, r3
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	685b      	ldr	r3, [r3, #4]
 8003eae:	009b      	lsls	r3, r3, #2
 8003eb0:	fbb2 f2f3 	udiv	r2, r2, r3
 8003eb4:	4b0c      	ldr	r3, [pc, #48]	; (8003ee8 <UART_SetConfig+0x118>)
 8003eb6:	fba3 0302 	umull	r0, r3, r3, r2
 8003eba:	095b      	lsrs	r3, r3, #5
 8003ebc:	2064      	movs	r0, #100	; 0x64
 8003ebe:	fb00 f303 	mul.w	r3, r0, r3
 8003ec2:	1ad3      	subs	r3, r2, r3
 8003ec4:	011b      	lsls	r3, r3, #4
 8003ec6:	3332      	adds	r3, #50	; 0x32
 8003ec8:	4a07      	ldr	r2, [pc, #28]	; (8003ee8 <UART_SetConfig+0x118>)
 8003eca:	fba2 2303 	umull	r2, r3, r2, r3
 8003ece:	095b      	lsrs	r3, r3, #5
 8003ed0:	f003 020f 	and.w	r2, r3, #15
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	440a      	add	r2, r1
 8003eda:	609a      	str	r2, [r3, #8]
 8003edc:	bf00      	nop
 8003ede:	3710      	adds	r7, #16
 8003ee0:	46bd      	mov	sp, r7
 8003ee2:	bd80      	pop	{r7, pc}
 8003ee4:	40013800 	.word	0x40013800
 8003ee8:	51eb851f 	.word	0x51eb851f

08003eec <__errno>:
 8003eec:	4b01      	ldr	r3, [pc, #4]	; (8003ef4 <__errno+0x8>)
 8003eee:	6818      	ldr	r0, [r3, #0]
 8003ef0:	4770      	bx	lr
 8003ef2:	bf00      	nop
 8003ef4:	20000030 	.word	0x20000030

08003ef8 <__libc_init_array>:
 8003ef8:	b570      	push	{r4, r5, r6, lr}
 8003efa:	2600      	movs	r6, #0
 8003efc:	4d0c      	ldr	r5, [pc, #48]	; (8003f30 <__libc_init_array+0x38>)
 8003efe:	4c0d      	ldr	r4, [pc, #52]	; (8003f34 <__libc_init_array+0x3c>)
 8003f00:	1b64      	subs	r4, r4, r5
 8003f02:	10a4      	asrs	r4, r4, #2
 8003f04:	42a6      	cmp	r6, r4
 8003f06:	d109      	bne.n	8003f1c <__libc_init_array+0x24>
 8003f08:	f000 fc9c 	bl	8004844 <_init>
 8003f0c:	2600      	movs	r6, #0
 8003f0e:	4d0a      	ldr	r5, [pc, #40]	; (8003f38 <__libc_init_array+0x40>)
 8003f10:	4c0a      	ldr	r4, [pc, #40]	; (8003f3c <__libc_init_array+0x44>)
 8003f12:	1b64      	subs	r4, r4, r5
 8003f14:	10a4      	asrs	r4, r4, #2
 8003f16:	42a6      	cmp	r6, r4
 8003f18:	d105      	bne.n	8003f26 <__libc_init_array+0x2e>
 8003f1a:	bd70      	pop	{r4, r5, r6, pc}
 8003f1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003f20:	4798      	blx	r3
 8003f22:	3601      	adds	r6, #1
 8003f24:	e7ee      	b.n	8003f04 <__libc_init_array+0xc>
 8003f26:	f855 3b04 	ldr.w	r3, [r5], #4
 8003f2a:	4798      	blx	r3
 8003f2c:	3601      	adds	r6, #1
 8003f2e:	e7f2      	b.n	8003f16 <__libc_init_array+0x1e>
 8003f30:	080048c8 	.word	0x080048c8
 8003f34:	080048c8 	.word	0x080048c8
 8003f38:	080048c8 	.word	0x080048c8
 8003f3c:	080048cc 	.word	0x080048cc

08003f40 <memset>:
 8003f40:	4603      	mov	r3, r0
 8003f42:	4402      	add	r2, r0
 8003f44:	4293      	cmp	r3, r2
 8003f46:	d100      	bne.n	8003f4a <memset+0xa>
 8003f48:	4770      	bx	lr
 8003f4a:	f803 1b01 	strb.w	r1, [r3], #1
 8003f4e:	e7f9      	b.n	8003f44 <memset+0x4>

08003f50 <siprintf>:
 8003f50:	b40e      	push	{r1, r2, r3}
 8003f52:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003f56:	b500      	push	{lr}
 8003f58:	b09c      	sub	sp, #112	; 0x70
 8003f5a:	ab1d      	add	r3, sp, #116	; 0x74
 8003f5c:	9002      	str	r0, [sp, #8]
 8003f5e:	9006      	str	r0, [sp, #24]
 8003f60:	9107      	str	r1, [sp, #28]
 8003f62:	9104      	str	r1, [sp, #16]
 8003f64:	4808      	ldr	r0, [pc, #32]	; (8003f88 <siprintf+0x38>)
 8003f66:	4909      	ldr	r1, [pc, #36]	; (8003f8c <siprintf+0x3c>)
 8003f68:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f6c:	9105      	str	r1, [sp, #20]
 8003f6e:	6800      	ldr	r0, [r0, #0]
 8003f70:	a902      	add	r1, sp, #8
 8003f72:	9301      	str	r3, [sp, #4]
 8003f74:	f000 f868 	bl	8004048 <_svfiprintf_r>
 8003f78:	2200      	movs	r2, #0
 8003f7a:	9b02      	ldr	r3, [sp, #8]
 8003f7c:	701a      	strb	r2, [r3, #0]
 8003f7e:	b01c      	add	sp, #112	; 0x70
 8003f80:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f84:	b003      	add	sp, #12
 8003f86:	4770      	bx	lr
 8003f88:	20000030 	.word	0x20000030
 8003f8c:	ffff0208 	.word	0xffff0208

08003f90 <__ssputs_r>:
 8003f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f94:	688e      	ldr	r6, [r1, #8]
 8003f96:	4682      	mov	sl, r0
 8003f98:	429e      	cmp	r6, r3
 8003f9a:	460c      	mov	r4, r1
 8003f9c:	4690      	mov	r8, r2
 8003f9e:	461f      	mov	r7, r3
 8003fa0:	d838      	bhi.n	8004014 <__ssputs_r+0x84>
 8003fa2:	898a      	ldrh	r2, [r1, #12]
 8003fa4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003fa8:	d032      	beq.n	8004010 <__ssputs_r+0x80>
 8003faa:	6825      	ldr	r5, [r4, #0]
 8003fac:	6909      	ldr	r1, [r1, #16]
 8003fae:	3301      	adds	r3, #1
 8003fb0:	eba5 0901 	sub.w	r9, r5, r1
 8003fb4:	6965      	ldr	r5, [r4, #20]
 8003fb6:	444b      	add	r3, r9
 8003fb8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003fbc:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003fc0:	106d      	asrs	r5, r5, #1
 8003fc2:	429d      	cmp	r5, r3
 8003fc4:	bf38      	it	cc
 8003fc6:	461d      	movcc	r5, r3
 8003fc8:	0553      	lsls	r3, r2, #21
 8003fca:	d531      	bpl.n	8004030 <__ssputs_r+0xa0>
 8003fcc:	4629      	mov	r1, r5
 8003fce:	f000 fb6f 	bl	80046b0 <_malloc_r>
 8003fd2:	4606      	mov	r6, r0
 8003fd4:	b950      	cbnz	r0, 8003fec <__ssputs_r+0x5c>
 8003fd6:	230c      	movs	r3, #12
 8003fd8:	f04f 30ff 	mov.w	r0, #4294967295
 8003fdc:	f8ca 3000 	str.w	r3, [sl]
 8003fe0:	89a3      	ldrh	r3, [r4, #12]
 8003fe2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fe6:	81a3      	strh	r3, [r4, #12]
 8003fe8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fec:	464a      	mov	r2, r9
 8003fee:	6921      	ldr	r1, [r4, #16]
 8003ff0:	f000 face 	bl	8004590 <memcpy>
 8003ff4:	89a3      	ldrh	r3, [r4, #12]
 8003ff6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003ffa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003ffe:	81a3      	strh	r3, [r4, #12]
 8004000:	6126      	str	r6, [r4, #16]
 8004002:	444e      	add	r6, r9
 8004004:	6026      	str	r6, [r4, #0]
 8004006:	463e      	mov	r6, r7
 8004008:	6165      	str	r5, [r4, #20]
 800400a:	eba5 0509 	sub.w	r5, r5, r9
 800400e:	60a5      	str	r5, [r4, #8]
 8004010:	42be      	cmp	r6, r7
 8004012:	d900      	bls.n	8004016 <__ssputs_r+0x86>
 8004014:	463e      	mov	r6, r7
 8004016:	4632      	mov	r2, r6
 8004018:	4641      	mov	r1, r8
 800401a:	6820      	ldr	r0, [r4, #0]
 800401c:	f000 fac6 	bl	80045ac <memmove>
 8004020:	68a3      	ldr	r3, [r4, #8]
 8004022:	2000      	movs	r0, #0
 8004024:	1b9b      	subs	r3, r3, r6
 8004026:	60a3      	str	r3, [r4, #8]
 8004028:	6823      	ldr	r3, [r4, #0]
 800402a:	4433      	add	r3, r6
 800402c:	6023      	str	r3, [r4, #0]
 800402e:	e7db      	b.n	8003fe8 <__ssputs_r+0x58>
 8004030:	462a      	mov	r2, r5
 8004032:	f000 fbb1 	bl	8004798 <_realloc_r>
 8004036:	4606      	mov	r6, r0
 8004038:	2800      	cmp	r0, #0
 800403a:	d1e1      	bne.n	8004000 <__ssputs_r+0x70>
 800403c:	4650      	mov	r0, sl
 800403e:	6921      	ldr	r1, [r4, #16]
 8004040:	f000 face 	bl	80045e0 <_free_r>
 8004044:	e7c7      	b.n	8003fd6 <__ssputs_r+0x46>
	...

08004048 <_svfiprintf_r>:
 8004048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800404c:	4698      	mov	r8, r3
 800404e:	898b      	ldrh	r3, [r1, #12]
 8004050:	4607      	mov	r7, r0
 8004052:	061b      	lsls	r3, r3, #24
 8004054:	460d      	mov	r5, r1
 8004056:	4614      	mov	r4, r2
 8004058:	b09d      	sub	sp, #116	; 0x74
 800405a:	d50e      	bpl.n	800407a <_svfiprintf_r+0x32>
 800405c:	690b      	ldr	r3, [r1, #16]
 800405e:	b963      	cbnz	r3, 800407a <_svfiprintf_r+0x32>
 8004060:	2140      	movs	r1, #64	; 0x40
 8004062:	f000 fb25 	bl	80046b0 <_malloc_r>
 8004066:	6028      	str	r0, [r5, #0]
 8004068:	6128      	str	r0, [r5, #16]
 800406a:	b920      	cbnz	r0, 8004076 <_svfiprintf_r+0x2e>
 800406c:	230c      	movs	r3, #12
 800406e:	603b      	str	r3, [r7, #0]
 8004070:	f04f 30ff 	mov.w	r0, #4294967295
 8004074:	e0d1      	b.n	800421a <_svfiprintf_r+0x1d2>
 8004076:	2340      	movs	r3, #64	; 0x40
 8004078:	616b      	str	r3, [r5, #20]
 800407a:	2300      	movs	r3, #0
 800407c:	9309      	str	r3, [sp, #36]	; 0x24
 800407e:	2320      	movs	r3, #32
 8004080:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004084:	2330      	movs	r3, #48	; 0x30
 8004086:	f04f 0901 	mov.w	r9, #1
 800408a:	f8cd 800c 	str.w	r8, [sp, #12]
 800408e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004234 <_svfiprintf_r+0x1ec>
 8004092:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004096:	4623      	mov	r3, r4
 8004098:	469a      	mov	sl, r3
 800409a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800409e:	b10a      	cbz	r2, 80040a4 <_svfiprintf_r+0x5c>
 80040a0:	2a25      	cmp	r2, #37	; 0x25
 80040a2:	d1f9      	bne.n	8004098 <_svfiprintf_r+0x50>
 80040a4:	ebba 0b04 	subs.w	fp, sl, r4
 80040a8:	d00b      	beq.n	80040c2 <_svfiprintf_r+0x7a>
 80040aa:	465b      	mov	r3, fp
 80040ac:	4622      	mov	r2, r4
 80040ae:	4629      	mov	r1, r5
 80040b0:	4638      	mov	r0, r7
 80040b2:	f7ff ff6d 	bl	8003f90 <__ssputs_r>
 80040b6:	3001      	adds	r0, #1
 80040b8:	f000 80aa 	beq.w	8004210 <_svfiprintf_r+0x1c8>
 80040bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80040be:	445a      	add	r2, fp
 80040c0:	9209      	str	r2, [sp, #36]	; 0x24
 80040c2:	f89a 3000 	ldrb.w	r3, [sl]
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	f000 80a2 	beq.w	8004210 <_svfiprintf_r+0x1c8>
 80040cc:	2300      	movs	r3, #0
 80040ce:	f04f 32ff 	mov.w	r2, #4294967295
 80040d2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80040d6:	f10a 0a01 	add.w	sl, sl, #1
 80040da:	9304      	str	r3, [sp, #16]
 80040dc:	9307      	str	r3, [sp, #28]
 80040de:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80040e2:	931a      	str	r3, [sp, #104]	; 0x68
 80040e4:	4654      	mov	r4, sl
 80040e6:	2205      	movs	r2, #5
 80040e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040ec:	4851      	ldr	r0, [pc, #324]	; (8004234 <_svfiprintf_r+0x1ec>)
 80040ee:	f000 fa41 	bl	8004574 <memchr>
 80040f2:	9a04      	ldr	r2, [sp, #16]
 80040f4:	b9d8      	cbnz	r0, 800412e <_svfiprintf_r+0xe6>
 80040f6:	06d0      	lsls	r0, r2, #27
 80040f8:	bf44      	itt	mi
 80040fa:	2320      	movmi	r3, #32
 80040fc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004100:	0711      	lsls	r1, r2, #28
 8004102:	bf44      	itt	mi
 8004104:	232b      	movmi	r3, #43	; 0x2b
 8004106:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800410a:	f89a 3000 	ldrb.w	r3, [sl]
 800410e:	2b2a      	cmp	r3, #42	; 0x2a
 8004110:	d015      	beq.n	800413e <_svfiprintf_r+0xf6>
 8004112:	4654      	mov	r4, sl
 8004114:	2000      	movs	r0, #0
 8004116:	f04f 0c0a 	mov.w	ip, #10
 800411a:	9a07      	ldr	r2, [sp, #28]
 800411c:	4621      	mov	r1, r4
 800411e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004122:	3b30      	subs	r3, #48	; 0x30
 8004124:	2b09      	cmp	r3, #9
 8004126:	d94e      	bls.n	80041c6 <_svfiprintf_r+0x17e>
 8004128:	b1b0      	cbz	r0, 8004158 <_svfiprintf_r+0x110>
 800412a:	9207      	str	r2, [sp, #28]
 800412c:	e014      	b.n	8004158 <_svfiprintf_r+0x110>
 800412e:	eba0 0308 	sub.w	r3, r0, r8
 8004132:	fa09 f303 	lsl.w	r3, r9, r3
 8004136:	4313      	orrs	r3, r2
 8004138:	46a2      	mov	sl, r4
 800413a:	9304      	str	r3, [sp, #16]
 800413c:	e7d2      	b.n	80040e4 <_svfiprintf_r+0x9c>
 800413e:	9b03      	ldr	r3, [sp, #12]
 8004140:	1d19      	adds	r1, r3, #4
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	9103      	str	r1, [sp, #12]
 8004146:	2b00      	cmp	r3, #0
 8004148:	bfbb      	ittet	lt
 800414a:	425b      	neglt	r3, r3
 800414c:	f042 0202 	orrlt.w	r2, r2, #2
 8004150:	9307      	strge	r3, [sp, #28]
 8004152:	9307      	strlt	r3, [sp, #28]
 8004154:	bfb8      	it	lt
 8004156:	9204      	strlt	r2, [sp, #16]
 8004158:	7823      	ldrb	r3, [r4, #0]
 800415a:	2b2e      	cmp	r3, #46	; 0x2e
 800415c:	d10c      	bne.n	8004178 <_svfiprintf_r+0x130>
 800415e:	7863      	ldrb	r3, [r4, #1]
 8004160:	2b2a      	cmp	r3, #42	; 0x2a
 8004162:	d135      	bne.n	80041d0 <_svfiprintf_r+0x188>
 8004164:	9b03      	ldr	r3, [sp, #12]
 8004166:	3402      	adds	r4, #2
 8004168:	1d1a      	adds	r2, r3, #4
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	9203      	str	r2, [sp, #12]
 800416e:	2b00      	cmp	r3, #0
 8004170:	bfb8      	it	lt
 8004172:	f04f 33ff 	movlt.w	r3, #4294967295
 8004176:	9305      	str	r3, [sp, #20]
 8004178:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8004238 <_svfiprintf_r+0x1f0>
 800417c:	2203      	movs	r2, #3
 800417e:	4650      	mov	r0, sl
 8004180:	7821      	ldrb	r1, [r4, #0]
 8004182:	f000 f9f7 	bl	8004574 <memchr>
 8004186:	b140      	cbz	r0, 800419a <_svfiprintf_r+0x152>
 8004188:	2340      	movs	r3, #64	; 0x40
 800418a:	eba0 000a 	sub.w	r0, r0, sl
 800418e:	fa03 f000 	lsl.w	r0, r3, r0
 8004192:	9b04      	ldr	r3, [sp, #16]
 8004194:	3401      	adds	r4, #1
 8004196:	4303      	orrs	r3, r0
 8004198:	9304      	str	r3, [sp, #16]
 800419a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800419e:	2206      	movs	r2, #6
 80041a0:	4826      	ldr	r0, [pc, #152]	; (800423c <_svfiprintf_r+0x1f4>)
 80041a2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80041a6:	f000 f9e5 	bl	8004574 <memchr>
 80041aa:	2800      	cmp	r0, #0
 80041ac:	d038      	beq.n	8004220 <_svfiprintf_r+0x1d8>
 80041ae:	4b24      	ldr	r3, [pc, #144]	; (8004240 <_svfiprintf_r+0x1f8>)
 80041b0:	bb1b      	cbnz	r3, 80041fa <_svfiprintf_r+0x1b2>
 80041b2:	9b03      	ldr	r3, [sp, #12]
 80041b4:	3307      	adds	r3, #7
 80041b6:	f023 0307 	bic.w	r3, r3, #7
 80041ba:	3308      	adds	r3, #8
 80041bc:	9303      	str	r3, [sp, #12]
 80041be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80041c0:	4433      	add	r3, r6
 80041c2:	9309      	str	r3, [sp, #36]	; 0x24
 80041c4:	e767      	b.n	8004096 <_svfiprintf_r+0x4e>
 80041c6:	460c      	mov	r4, r1
 80041c8:	2001      	movs	r0, #1
 80041ca:	fb0c 3202 	mla	r2, ip, r2, r3
 80041ce:	e7a5      	b.n	800411c <_svfiprintf_r+0xd4>
 80041d0:	2300      	movs	r3, #0
 80041d2:	f04f 0c0a 	mov.w	ip, #10
 80041d6:	4619      	mov	r1, r3
 80041d8:	3401      	adds	r4, #1
 80041da:	9305      	str	r3, [sp, #20]
 80041dc:	4620      	mov	r0, r4
 80041de:	f810 2b01 	ldrb.w	r2, [r0], #1
 80041e2:	3a30      	subs	r2, #48	; 0x30
 80041e4:	2a09      	cmp	r2, #9
 80041e6:	d903      	bls.n	80041f0 <_svfiprintf_r+0x1a8>
 80041e8:	2b00      	cmp	r3, #0
 80041ea:	d0c5      	beq.n	8004178 <_svfiprintf_r+0x130>
 80041ec:	9105      	str	r1, [sp, #20]
 80041ee:	e7c3      	b.n	8004178 <_svfiprintf_r+0x130>
 80041f0:	4604      	mov	r4, r0
 80041f2:	2301      	movs	r3, #1
 80041f4:	fb0c 2101 	mla	r1, ip, r1, r2
 80041f8:	e7f0      	b.n	80041dc <_svfiprintf_r+0x194>
 80041fa:	ab03      	add	r3, sp, #12
 80041fc:	9300      	str	r3, [sp, #0]
 80041fe:	462a      	mov	r2, r5
 8004200:	4638      	mov	r0, r7
 8004202:	4b10      	ldr	r3, [pc, #64]	; (8004244 <_svfiprintf_r+0x1fc>)
 8004204:	a904      	add	r1, sp, #16
 8004206:	f3af 8000 	nop.w
 800420a:	1c42      	adds	r2, r0, #1
 800420c:	4606      	mov	r6, r0
 800420e:	d1d6      	bne.n	80041be <_svfiprintf_r+0x176>
 8004210:	89ab      	ldrh	r3, [r5, #12]
 8004212:	065b      	lsls	r3, r3, #25
 8004214:	f53f af2c 	bmi.w	8004070 <_svfiprintf_r+0x28>
 8004218:	9809      	ldr	r0, [sp, #36]	; 0x24
 800421a:	b01d      	add	sp, #116	; 0x74
 800421c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004220:	ab03      	add	r3, sp, #12
 8004222:	9300      	str	r3, [sp, #0]
 8004224:	462a      	mov	r2, r5
 8004226:	4638      	mov	r0, r7
 8004228:	4b06      	ldr	r3, [pc, #24]	; (8004244 <_svfiprintf_r+0x1fc>)
 800422a:	a904      	add	r1, sp, #16
 800422c:	f000 f87c 	bl	8004328 <_printf_i>
 8004230:	e7eb      	b.n	800420a <_svfiprintf_r+0x1c2>
 8004232:	bf00      	nop
 8004234:	08004894 	.word	0x08004894
 8004238:	0800489a 	.word	0x0800489a
 800423c:	0800489e 	.word	0x0800489e
 8004240:	00000000 	.word	0x00000000
 8004244:	08003f91 	.word	0x08003f91

08004248 <_printf_common>:
 8004248:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800424c:	4616      	mov	r6, r2
 800424e:	4699      	mov	r9, r3
 8004250:	688a      	ldr	r2, [r1, #8]
 8004252:	690b      	ldr	r3, [r1, #16]
 8004254:	4607      	mov	r7, r0
 8004256:	4293      	cmp	r3, r2
 8004258:	bfb8      	it	lt
 800425a:	4613      	movlt	r3, r2
 800425c:	6033      	str	r3, [r6, #0]
 800425e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004262:	460c      	mov	r4, r1
 8004264:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004268:	b10a      	cbz	r2, 800426e <_printf_common+0x26>
 800426a:	3301      	adds	r3, #1
 800426c:	6033      	str	r3, [r6, #0]
 800426e:	6823      	ldr	r3, [r4, #0]
 8004270:	0699      	lsls	r1, r3, #26
 8004272:	bf42      	ittt	mi
 8004274:	6833      	ldrmi	r3, [r6, #0]
 8004276:	3302      	addmi	r3, #2
 8004278:	6033      	strmi	r3, [r6, #0]
 800427a:	6825      	ldr	r5, [r4, #0]
 800427c:	f015 0506 	ands.w	r5, r5, #6
 8004280:	d106      	bne.n	8004290 <_printf_common+0x48>
 8004282:	f104 0a19 	add.w	sl, r4, #25
 8004286:	68e3      	ldr	r3, [r4, #12]
 8004288:	6832      	ldr	r2, [r6, #0]
 800428a:	1a9b      	subs	r3, r3, r2
 800428c:	42ab      	cmp	r3, r5
 800428e:	dc28      	bgt.n	80042e2 <_printf_common+0x9a>
 8004290:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004294:	1e13      	subs	r3, r2, #0
 8004296:	6822      	ldr	r2, [r4, #0]
 8004298:	bf18      	it	ne
 800429a:	2301      	movne	r3, #1
 800429c:	0692      	lsls	r2, r2, #26
 800429e:	d42d      	bmi.n	80042fc <_printf_common+0xb4>
 80042a0:	4649      	mov	r1, r9
 80042a2:	4638      	mov	r0, r7
 80042a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80042a8:	47c0      	blx	r8
 80042aa:	3001      	adds	r0, #1
 80042ac:	d020      	beq.n	80042f0 <_printf_common+0xa8>
 80042ae:	6823      	ldr	r3, [r4, #0]
 80042b0:	68e5      	ldr	r5, [r4, #12]
 80042b2:	f003 0306 	and.w	r3, r3, #6
 80042b6:	2b04      	cmp	r3, #4
 80042b8:	bf18      	it	ne
 80042ba:	2500      	movne	r5, #0
 80042bc:	6832      	ldr	r2, [r6, #0]
 80042be:	f04f 0600 	mov.w	r6, #0
 80042c2:	68a3      	ldr	r3, [r4, #8]
 80042c4:	bf08      	it	eq
 80042c6:	1aad      	subeq	r5, r5, r2
 80042c8:	6922      	ldr	r2, [r4, #16]
 80042ca:	bf08      	it	eq
 80042cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80042d0:	4293      	cmp	r3, r2
 80042d2:	bfc4      	itt	gt
 80042d4:	1a9b      	subgt	r3, r3, r2
 80042d6:	18ed      	addgt	r5, r5, r3
 80042d8:	341a      	adds	r4, #26
 80042da:	42b5      	cmp	r5, r6
 80042dc:	d11a      	bne.n	8004314 <_printf_common+0xcc>
 80042de:	2000      	movs	r0, #0
 80042e0:	e008      	b.n	80042f4 <_printf_common+0xac>
 80042e2:	2301      	movs	r3, #1
 80042e4:	4652      	mov	r2, sl
 80042e6:	4649      	mov	r1, r9
 80042e8:	4638      	mov	r0, r7
 80042ea:	47c0      	blx	r8
 80042ec:	3001      	adds	r0, #1
 80042ee:	d103      	bne.n	80042f8 <_printf_common+0xb0>
 80042f0:	f04f 30ff 	mov.w	r0, #4294967295
 80042f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80042f8:	3501      	adds	r5, #1
 80042fa:	e7c4      	b.n	8004286 <_printf_common+0x3e>
 80042fc:	2030      	movs	r0, #48	; 0x30
 80042fe:	18e1      	adds	r1, r4, r3
 8004300:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004304:	1c5a      	adds	r2, r3, #1
 8004306:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800430a:	4422      	add	r2, r4
 800430c:	3302      	adds	r3, #2
 800430e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004312:	e7c5      	b.n	80042a0 <_printf_common+0x58>
 8004314:	2301      	movs	r3, #1
 8004316:	4622      	mov	r2, r4
 8004318:	4649      	mov	r1, r9
 800431a:	4638      	mov	r0, r7
 800431c:	47c0      	blx	r8
 800431e:	3001      	adds	r0, #1
 8004320:	d0e6      	beq.n	80042f0 <_printf_common+0xa8>
 8004322:	3601      	adds	r6, #1
 8004324:	e7d9      	b.n	80042da <_printf_common+0x92>
	...

08004328 <_printf_i>:
 8004328:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800432c:	7e0f      	ldrb	r7, [r1, #24]
 800432e:	4691      	mov	r9, r2
 8004330:	2f78      	cmp	r7, #120	; 0x78
 8004332:	4680      	mov	r8, r0
 8004334:	460c      	mov	r4, r1
 8004336:	469a      	mov	sl, r3
 8004338:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800433a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800433e:	d807      	bhi.n	8004350 <_printf_i+0x28>
 8004340:	2f62      	cmp	r7, #98	; 0x62
 8004342:	d80a      	bhi.n	800435a <_printf_i+0x32>
 8004344:	2f00      	cmp	r7, #0
 8004346:	f000 80d9 	beq.w	80044fc <_printf_i+0x1d4>
 800434a:	2f58      	cmp	r7, #88	; 0x58
 800434c:	f000 80a4 	beq.w	8004498 <_printf_i+0x170>
 8004350:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004354:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004358:	e03a      	b.n	80043d0 <_printf_i+0xa8>
 800435a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800435e:	2b15      	cmp	r3, #21
 8004360:	d8f6      	bhi.n	8004350 <_printf_i+0x28>
 8004362:	a101      	add	r1, pc, #4	; (adr r1, 8004368 <_printf_i+0x40>)
 8004364:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004368:	080043c1 	.word	0x080043c1
 800436c:	080043d5 	.word	0x080043d5
 8004370:	08004351 	.word	0x08004351
 8004374:	08004351 	.word	0x08004351
 8004378:	08004351 	.word	0x08004351
 800437c:	08004351 	.word	0x08004351
 8004380:	080043d5 	.word	0x080043d5
 8004384:	08004351 	.word	0x08004351
 8004388:	08004351 	.word	0x08004351
 800438c:	08004351 	.word	0x08004351
 8004390:	08004351 	.word	0x08004351
 8004394:	080044e3 	.word	0x080044e3
 8004398:	08004405 	.word	0x08004405
 800439c:	080044c5 	.word	0x080044c5
 80043a0:	08004351 	.word	0x08004351
 80043a4:	08004351 	.word	0x08004351
 80043a8:	08004505 	.word	0x08004505
 80043ac:	08004351 	.word	0x08004351
 80043b0:	08004405 	.word	0x08004405
 80043b4:	08004351 	.word	0x08004351
 80043b8:	08004351 	.word	0x08004351
 80043bc:	080044cd 	.word	0x080044cd
 80043c0:	682b      	ldr	r3, [r5, #0]
 80043c2:	1d1a      	adds	r2, r3, #4
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	602a      	str	r2, [r5, #0]
 80043c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80043cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80043d0:	2301      	movs	r3, #1
 80043d2:	e0a4      	b.n	800451e <_printf_i+0x1f6>
 80043d4:	6820      	ldr	r0, [r4, #0]
 80043d6:	6829      	ldr	r1, [r5, #0]
 80043d8:	0606      	lsls	r6, r0, #24
 80043da:	f101 0304 	add.w	r3, r1, #4
 80043de:	d50a      	bpl.n	80043f6 <_printf_i+0xce>
 80043e0:	680e      	ldr	r6, [r1, #0]
 80043e2:	602b      	str	r3, [r5, #0]
 80043e4:	2e00      	cmp	r6, #0
 80043e6:	da03      	bge.n	80043f0 <_printf_i+0xc8>
 80043e8:	232d      	movs	r3, #45	; 0x2d
 80043ea:	4276      	negs	r6, r6
 80043ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80043f0:	230a      	movs	r3, #10
 80043f2:	485e      	ldr	r0, [pc, #376]	; (800456c <_printf_i+0x244>)
 80043f4:	e019      	b.n	800442a <_printf_i+0x102>
 80043f6:	680e      	ldr	r6, [r1, #0]
 80043f8:	f010 0f40 	tst.w	r0, #64	; 0x40
 80043fc:	602b      	str	r3, [r5, #0]
 80043fe:	bf18      	it	ne
 8004400:	b236      	sxthne	r6, r6
 8004402:	e7ef      	b.n	80043e4 <_printf_i+0xbc>
 8004404:	682b      	ldr	r3, [r5, #0]
 8004406:	6820      	ldr	r0, [r4, #0]
 8004408:	1d19      	adds	r1, r3, #4
 800440a:	6029      	str	r1, [r5, #0]
 800440c:	0601      	lsls	r1, r0, #24
 800440e:	d501      	bpl.n	8004414 <_printf_i+0xec>
 8004410:	681e      	ldr	r6, [r3, #0]
 8004412:	e002      	b.n	800441a <_printf_i+0xf2>
 8004414:	0646      	lsls	r6, r0, #25
 8004416:	d5fb      	bpl.n	8004410 <_printf_i+0xe8>
 8004418:	881e      	ldrh	r6, [r3, #0]
 800441a:	2f6f      	cmp	r7, #111	; 0x6f
 800441c:	bf0c      	ite	eq
 800441e:	2308      	moveq	r3, #8
 8004420:	230a      	movne	r3, #10
 8004422:	4852      	ldr	r0, [pc, #328]	; (800456c <_printf_i+0x244>)
 8004424:	2100      	movs	r1, #0
 8004426:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800442a:	6865      	ldr	r5, [r4, #4]
 800442c:	2d00      	cmp	r5, #0
 800442e:	bfa8      	it	ge
 8004430:	6821      	ldrge	r1, [r4, #0]
 8004432:	60a5      	str	r5, [r4, #8]
 8004434:	bfa4      	itt	ge
 8004436:	f021 0104 	bicge.w	r1, r1, #4
 800443a:	6021      	strge	r1, [r4, #0]
 800443c:	b90e      	cbnz	r6, 8004442 <_printf_i+0x11a>
 800443e:	2d00      	cmp	r5, #0
 8004440:	d04d      	beq.n	80044de <_printf_i+0x1b6>
 8004442:	4615      	mov	r5, r2
 8004444:	fbb6 f1f3 	udiv	r1, r6, r3
 8004448:	fb03 6711 	mls	r7, r3, r1, r6
 800444c:	5dc7      	ldrb	r7, [r0, r7]
 800444e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004452:	4637      	mov	r7, r6
 8004454:	42bb      	cmp	r3, r7
 8004456:	460e      	mov	r6, r1
 8004458:	d9f4      	bls.n	8004444 <_printf_i+0x11c>
 800445a:	2b08      	cmp	r3, #8
 800445c:	d10b      	bne.n	8004476 <_printf_i+0x14e>
 800445e:	6823      	ldr	r3, [r4, #0]
 8004460:	07de      	lsls	r6, r3, #31
 8004462:	d508      	bpl.n	8004476 <_printf_i+0x14e>
 8004464:	6923      	ldr	r3, [r4, #16]
 8004466:	6861      	ldr	r1, [r4, #4]
 8004468:	4299      	cmp	r1, r3
 800446a:	bfde      	ittt	le
 800446c:	2330      	movle	r3, #48	; 0x30
 800446e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004472:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004476:	1b52      	subs	r2, r2, r5
 8004478:	6122      	str	r2, [r4, #16]
 800447a:	464b      	mov	r3, r9
 800447c:	4621      	mov	r1, r4
 800447e:	4640      	mov	r0, r8
 8004480:	f8cd a000 	str.w	sl, [sp]
 8004484:	aa03      	add	r2, sp, #12
 8004486:	f7ff fedf 	bl	8004248 <_printf_common>
 800448a:	3001      	adds	r0, #1
 800448c:	d14c      	bne.n	8004528 <_printf_i+0x200>
 800448e:	f04f 30ff 	mov.w	r0, #4294967295
 8004492:	b004      	add	sp, #16
 8004494:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004498:	4834      	ldr	r0, [pc, #208]	; (800456c <_printf_i+0x244>)
 800449a:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800449e:	6829      	ldr	r1, [r5, #0]
 80044a0:	6823      	ldr	r3, [r4, #0]
 80044a2:	f851 6b04 	ldr.w	r6, [r1], #4
 80044a6:	6029      	str	r1, [r5, #0]
 80044a8:	061d      	lsls	r5, r3, #24
 80044aa:	d514      	bpl.n	80044d6 <_printf_i+0x1ae>
 80044ac:	07df      	lsls	r7, r3, #31
 80044ae:	bf44      	itt	mi
 80044b0:	f043 0320 	orrmi.w	r3, r3, #32
 80044b4:	6023      	strmi	r3, [r4, #0]
 80044b6:	b91e      	cbnz	r6, 80044c0 <_printf_i+0x198>
 80044b8:	6823      	ldr	r3, [r4, #0]
 80044ba:	f023 0320 	bic.w	r3, r3, #32
 80044be:	6023      	str	r3, [r4, #0]
 80044c0:	2310      	movs	r3, #16
 80044c2:	e7af      	b.n	8004424 <_printf_i+0xfc>
 80044c4:	6823      	ldr	r3, [r4, #0]
 80044c6:	f043 0320 	orr.w	r3, r3, #32
 80044ca:	6023      	str	r3, [r4, #0]
 80044cc:	2378      	movs	r3, #120	; 0x78
 80044ce:	4828      	ldr	r0, [pc, #160]	; (8004570 <_printf_i+0x248>)
 80044d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80044d4:	e7e3      	b.n	800449e <_printf_i+0x176>
 80044d6:	0659      	lsls	r1, r3, #25
 80044d8:	bf48      	it	mi
 80044da:	b2b6      	uxthmi	r6, r6
 80044dc:	e7e6      	b.n	80044ac <_printf_i+0x184>
 80044de:	4615      	mov	r5, r2
 80044e0:	e7bb      	b.n	800445a <_printf_i+0x132>
 80044e2:	682b      	ldr	r3, [r5, #0]
 80044e4:	6826      	ldr	r6, [r4, #0]
 80044e6:	1d18      	adds	r0, r3, #4
 80044e8:	6961      	ldr	r1, [r4, #20]
 80044ea:	6028      	str	r0, [r5, #0]
 80044ec:	0635      	lsls	r5, r6, #24
 80044ee:	681b      	ldr	r3, [r3, #0]
 80044f0:	d501      	bpl.n	80044f6 <_printf_i+0x1ce>
 80044f2:	6019      	str	r1, [r3, #0]
 80044f4:	e002      	b.n	80044fc <_printf_i+0x1d4>
 80044f6:	0670      	lsls	r0, r6, #25
 80044f8:	d5fb      	bpl.n	80044f2 <_printf_i+0x1ca>
 80044fa:	8019      	strh	r1, [r3, #0]
 80044fc:	2300      	movs	r3, #0
 80044fe:	4615      	mov	r5, r2
 8004500:	6123      	str	r3, [r4, #16]
 8004502:	e7ba      	b.n	800447a <_printf_i+0x152>
 8004504:	682b      	ldr	r3, [r5, #0]
 8004506:	2100      	movs	r1, #0
 8004508:	1d1a      	adds	r2, r3, #4
 800450a:	602a      	str	r2, [r5, #0]
 800450c:	681d      	ldr	r5, [r3, #0]
 800450e:	6862      	ldr	r2, [r4, #4]
 8004510:	4628      	mov	r0, r5
 8004512:	f000 f82f 	bl	8004574 <memchr>
 8004516:	b108      	cbz	r0, 800451c <_printf_i+0x1f4>
 8004518:	1b40      	subs	r0, r0, r5
 800451a:	6060      	str	r0, [r4, #4]
 800451c:	6863      	ldr	r3, [r4, #4]
 800451e:	6123      	str	r3, [r4, #16]
 8004520:	2300      	movs	r3, #0
 8004522:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004526:	e7a8      	b.n	800447a <_printf_i+0x152>
 8004528:	462a      	mov	r2, r5
 800452a:	4649      	mov	r1, r9
 800452c:	4640      	mov	r0, r8
 800452e:	6923      	ldr	r3, [r4, #16]
 8004530:	47d0      	blx	sl
 8004532:	3001      	adds	r0, #1
 8004534:	d0ab      	beq.n	800448e <_printf_i+0x166>
 8004536:	6823      	ldr	r3, [r4, #0]
 8004538:	079b      	lsls	r3, r3, #30
 800453a:	d413      	bmi.n	8004564 <_printf_i+0x23c>
 800453c:	68e0      	ldr	r0, [r4, #12]
 800453e:	9b03      	ldr	r3, [sp, #12]
 8004540:	4298      	cmp	r0, r3
 8004542:	bfb8      	it	lt
 8004544:	4618      	movlt	r0, r3
 8004546:	e7a4      	b.n	8004492 <_printf_i+0x16a>
 8004548:	2301      	movs	r3, #1
 800454a:	4632      	mov	r2, r6
 800454c:	4649      	mov	r1, r9
 800454e:	4640      	mov	r0, r8
 8004550:	47d0      	blx	sl
 8004552:	3001      	adds	r0, #1
 8004554:	d09b      	beq.n	800448e <_printf_i+0x166>
 8004556:	3501      	adds	r5, #1
 8004558:	68e3      	ldr	r3, [r4, #12]
 800455a:	9903      	ldr	r1, [sp, #12]
 800455c:	1a5b      	subs	r3, r3, r1
 800455e:	42ab      	cmp	r3, r5
 8004560:	dcf2      	bgt.n	8004548 <_printf_i+0x220>
 8004562:	e7eb      	b.n	800453c <_printf_i+0x214>
 8004564:	2500      	movs	r5, #0
 8004566:	f104 0619 	add.w	r6, r4, #25
 800456a:	e7f5      	b.n	8004558 <_printf_i+0x230>
 800456c:	080048a5 	.word	0x080048a5
 8004570:	080048b6 	.word	0x080048b6

08004574 <memchr>:
 8004574:	4603      	mov	r3, r0
 8004576:	b510      	push	{r4, lr}
 8004578:	b2c9      	uxtb	r1, r1
 800457a:	4402      	add	r2, r0
 800457c:	4293      	cmp	r3, r2
 800457e:	4618      	mov	r0, r3
 8004580:	d101      	bne.n	8004586 <memchr+0x12>
 8004582:	2000      	movs	r0, #0
 8004584:	e003      	b.n	800458e <memchr+0x1a>
 8004586:	7804      	ldrb	r4, [r0, #0]
 8004588:	3301      	adds	r3, #1
 800458a:	428c      	cmp	r4, r1
 800458c:	d1f6      	bne.n	800457c <memchr+0x8>
 800458e:	bd10      	pop	{r4, pc}

08004590 <memcpy>:
 8004590:	440a      	add	r2, r1
 8004592:	4291      	cmp	r1, r2
 8004594:	f100 33ff 	add.w	r3, r0, #4294967295
 8004598:	d100      	bne.n	800459c <memcpy+0xc>
 800459a:	4770      	bx	lr
 800459c:	b510      	push	{r4, lr}
 800459e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80045a2:	4291      	cmp	r1, r2
 80045a4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80045a8:	d1f9      	bne.n	800459e <memcpy+0xe>
 80045aa:	bd10      	pop	{r4, pc}

080045ac <memmove>:
 80045ac:	4288      	cmp	r0, r1
 80045ae:	b510      	push	{r4, lr}
 80045b0:	eb01 0402 	add.w	r4, r1, r2
 80045b4:	d902      	bls.n	80045bc <memmove+0x10>
 80045b6:	4284      	cmp	r4, r0
 80045b8:	4623      	mov	r3, r4
 80045ba:	d807      	bhi.n	80045cc <memmove+0x20>
 80045bc:	1e43      	subs	r3, r0, #1
 80045be:	42a1      	cmp	r1, r4
 80045c0:	d008      	beq.n	80045d4 <memmove+0x28>
 80045c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80045c6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80045ca:	e7f8      	b.n	80045be <memmove+0x12>
 80045cc:	4601      	mov	r1, r0
 80045ce:	4402      	add	r2, r0
 80045d0:	428a      	cmp	r2, r1
 80045d2:	d100      	bne.n	80045d6 <memmove+0x2a>
 80045d4:	bd10      	pop	{r4, pc}
 80045d6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80045da:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80045de:	e7f7      	b.n	80045d0 <memmove+0x24>

080045e0 <_free_r>:
 80045e0:	b538      	push	{r3, r4, r5, lr}
 80045e2:	4605      	mov	r5, r0
 80045e4:	2900      	cmp	r1, #0
 80045e6:	d040      	beq.n	800466a <_free_r+0x8a>
 80045e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80045ec:	1f0c      	subs	r4, r1, #4
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	bfb8      	it	lt
 80045f2:	18e4      	addlt	r4, r4, r3
 80045f4:	f000 f910 	bl	8004818 <__malloc_lock>
 80045f8:	4a1c      	ldr	r2, [pc, #112]	; (800466c <_free_r+0x8c>)
 80045fa:	6813      	ldr	r3, [r2, #0]
 80045fc:	b933      	cbnz	r3, 800460c <_free_r+0x2c>
 80045fe:	6063      	str	r3, [r4, #4]
 8004600:	6014      	str	r4, [r2, #0]
 8004602:	4628      	mov	r0, r5
 8004604:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004608:	f000 b90c 	b.w	8004824 <__malloc_unlock>
 800460c:	42a3      	cmp	r3, r4
 800460e:	d908      	bls.n	8004622 <_free_r+0x42>
 8004610:	6820      	ldr	r0, [r4, #0]
 8004612:	1821      	adds	r1, r4, r0
 8004614:	428b      	cmp	r3, r1
 8004616:	bf01      	itttt	eq
 8004618:	6819      	ldreq	r1, [r3, #0]
 800461a:	685b      	ldreq	r3, [r3, #4]
 800461c:	1809      	addeq	r1, r1, r0
 800461e:	6021      	streq	r1, [r4, #0]
 8004620:	e7ed      	b.n	80045fe <_free_r+0x1e>
 8004622:	461a      	mov	r2, r3
 8004624:	685b      	ldr	r3, [r3, #4]
 8004626:	b10b      	cbz	r3, 800462c <_free_r+0x4c>
 8004628:	42a3      	cmp	r3, r4
 800462a:	d9fa      	bls.n	8004622 <_free_r+0x42>
 800462c:	6811      	ldr	r1, [r2, #0]
 800462e:	1850      	adds	r0, r2, r1
 8004630:	42a0      	cmp	r0, r4
 8004632:	d10b      	bne.n	800464c <_free_r+0x6c>
 8004634:	6820      	ldr	r0, [r4, #0]
 8004636:	4401      	add	r1, r0
 8004638:	1850      	adds	r0, r2, r1
 800463a:	4283      	cmp	r3, r0
 800463c:	6011      	str	r1, [r2, #0]
 800463e:	d1e0      	bne.n	8004602 <_free_r+0x22>
 8004640:	6818      	ldr	r0, [r3, #0]
 8004642:	685b      	ldr	r3, [r3, #4]
 8004644:	4401      	add	r1, r0
 8004646:	6011      	str	r1, [r2, #0]
 8004648:	6053      	str	r3, [r2, #4]
 800464a:	e7da      	b.n	8004602 <_free_r+0x22>
 800464c:	d902      	bls.n	8004654 <_free_r+0x74>
 800464e:	230c      	movs	r3, #12
 8004650:	602b      	str	r3, [r5, #0]
 8004652:	e7d6      	b.n	8004602 <_free_r+0x22>
 8004654:	6820      	ldr	r0, [r4, #0]
 8004656:	1821      	adds	r1, r4, r0
 8004658:	428b      	cmp	r3, r1
 800465a:	bf01      	itttt	eq
 800465c:	6819      	ldreq	r1, [r3, #0]
 800465e:	685b      	ldreq	r3, [r3, #4]
 8004660:	1809      	addeq	r1, r1, r0
 8004662:	6021      	streq	r1, [r4, #0]
 8004664:	6063      	str	r3, [r4, #4]
 8004666:	6054      	str	r4, [r2, #4]
 8004668:	e7cb      	b.n	8004602 <_free_r+0x22>
 800466a:	bd38      	pop	{r3, r4, r5, pc}
 800466c:	200001f8 	.word	0x200001f8

08004670 <sbrk_aligned>:
 8004670:	b570      	push	{r4, r5, r6, lr}
 8004672:	4e0e      	ldr	r6, [pc, #56]	; (80046ac <sbrk_aligned+0x3c>)
 8004674:	460c      	mov	r4, r1
 8004676:	6831      	ldr	r1, [r6, #0]
 8004678:	4605      	mov	r5, r0
 800467a:	b911      	cbnz	r1, 8004682 <sbrk_aligned+0x12>
 800467c:	f000 f8bc 	bl	80047f8 <_sbrk_r>
 8004680:	6030      	str	r0, [r6, #0]
 8004682:	4621      	mov	r1, r4
 8004684:	4628      	mov	r0, r5
 8004686:	f000 f8b7 	bl	80047f8 <_sbrk_r>
 800468a:	1c43      	adds	r3, r0, #1
 800468c:	d00a      	beq.n	80046a4 <sbrk_aligned+0x34>
 800468e:	1cc4      	adds	r4, r0, #3
 8004690:	f024 0403 	bic.w	r4, r4, #3
 8004694:	42a0      	cmp	r0, r4
 8004696:	d007      	beq.n	80046a8 <sbrk_aligned+0x38>
 8004698:	1a21      	subs	r1, r4, r0
 800469a:	4628      	mov	r0, r5
 800469c:	f000 f8ac 	bl	80047f8 <_sbrk_r>
 80046a0:	3001      	adds	r0, #1
 80046a2:	d101      	bne.n	80046a8 <sbrk_aligned+0x38>
 80046a4:	f04f 34ff 	mov.w	r4, #4294967295
 80046a8:	4620      	mov	r0, r4
 80046aa:	bd70      	pop	{r4, r5, r6, pc}
 80046ac:	200001fc 	.word	0x200001fc

080046b0 <_malloc_r>:
 80046b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046b4:	1ccd      	adds	r5, r1, #3
 80046b6:	f025 0503 	bic.w	r5, r5, #3
 80046ba:	3508      	adds	r5, #8
 80046bc:	2d0c      	cmp	r5, #12
 80046be:	bf38      	it	cc
 80046c0:	250c      	movcc	r5, #12
 80046c2:	2d00      	cmp	r5, #0
 80046c4:	4607      	mov	r7, r0
 80046c6:	db01      	blt.n	80046cc <_malloc_r+0x1c>
 80046c8:	42a9      	cmp	r1, r5
 80046ca:	d905      	bls.n	80046d8 <_malloc_r+0x28>
 80046cc:	230c      	movs	r3, #12
 80046ce:	2600      	movs	r6, #0
 80046d0:	603b      	str	r3, [r7, #0]
 80046d2:	4630      	mov	r0, r6
 80046d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046d8:	4e2e      	ldr	r6, [pc, #184]	; (8004794 <_malloc_r+0xe4>)
 80046da:	f000 f89d 	bl	8004818 <__malloc_lock>
 80046de:	6833      	ldr	r3, [r6, #0]
 80046e0:	461c      	mov	r4, r3
 80046e2:	bb34      	cbnz	r4, 8004732 <_malloc_r+0x82>
 80046e4:	4629      	mov	r1, r5
 80046e6:	4638      	mov	r0, r7
 80046e8:	f7ff ffc2 	bl	8004670 <sbrk_aligned>
 80046ec:	1c43      	adds	r3, r0, #1
 80046ee:	4604      	mov	r4, r0
 80046f0:	d14d      	bne.n	800478e <_malloc_r+0xde>
 80046f2:	6834      	ldr	r4, [r6, #0]
 80046f4:	4626      	mov	r6, r4
 80046f6:	2e00      	cmp	r6, #0
 80046f8:	d140      	bne.n	800477c <_malloc_r+0xcc>
 80046fa:	6823      	ldr	r3, [r4, #0]
 80046fc:	4631      	mov	r1, r6
 80046fe:	4638      	mov	r0, r7
 8004700:	eb04 0803 	add.w	r8, r4, r3
 8004704:	f000 f878 	bl	80047f8 <_sbrk_r>
 8004708:	4580      	cmp	r8, r0
 800470a:	d13a      	bne.n	8004782 <_malloc_r+0xd2>
 800470c:	6821      	ldr	r1, [r4, #0]
 800470e:	3503      	adds	r5, #3
 8004710:	1a6d      	subs	r5, r5, r1
 8004712:	f025 0503 	bic.w	r5, r5, #3
 8004716:	3508      	adds	r5, #8
 8004718:	2d0c      	cmp	r5, #12
 800471a:	bf38      	it	cc
 800471c:	250c      	movcc	r5, #12
 800471e:	4638      	mov	r0, r7
 8004720:	4629      	mov	r1, r5
 8004722:	f7ff ffa5 	bl	8004670 <sbrk_aligned>
 8004726:	3001      	adds	r0, #1
 8004728:	d02b      	beq.n	8004782 <_malloc_r+0xd2>
 800472a:	6823      	ldr	r3, [r4, #0]
 800472c:	442b      	add	r3, r5
 800472e:	6023      	str	r3, [r4, #0]
 8004730:	e00e      	b.n	8004750 <_malloc_r+0xa0>
 8004732:	6822      	ldr	r2, [r4, #0]
 8004734:	1b52      	subs	r2, r2, r5
 8004736:	d41e      	bmi.n	8004776 <_malloc_r+0xc6>
 8004738:	2a0b      	cmp	r2, #11
 800473a:	d916      	bls.n	800476a <_malloc_r+0xba>
 800473c:	1961      	adds	r1, r4, r5
 800473e:	42a3      	cmp	r3, r4
 8004740:	6025      	str	r5, [r4, #0]
 8004742:	bf18      	it	ne
 8004744:	6059      	strne	r1, [r3, #4]
 8004746:	6863      	ldr	r3, [r4, #4]
 8004748:	bf08      	it	eq
 800474a:	6031      	streq	r1, [r6, #0]
 800474c:	5162      	str	r2, [r4, r5]
 800474e:	604b      	str	r3, [r1, #4]
 8004750:	4638      	mov	r0, r7
 8004752:	f104 060b 	add.w	r6, r4, #11
 8004756:	f000 f865 	bl	8004824 <__malloc_unlock>
 800475a:	f026 0607 	bic.w	r6, r6, #7
 800475e:	1d23      	adds	r3, r4, #4
 8004760:	1af2      	subs	r2, r6, r3
 8004762:	d0b6      	beq.n	80046d2 <_malloc_r+0x22>
 8004764:	1b9b      	subs	r3, r3, r6
 8004766:	50a3      	str	r3, [r4, r2]
 8004768:	e7b3      	b.n	80046d2 <_malloc_r+0x22>
 800476a:	6862      	ldr	r2, [r4, #4]
 800476c:	42a3      	cmp	r3, r4
 800476e:	bf0c      	ite	eq
 8004770:	6032      	streq	r2, [r6, #0]
 8004772:	605a      	strne	r2, [r3, #4]
 8004774:	e7ec      	b.n	8004750 <_malloc_r+0xa0>
 8004776:	4623      	mov	r3, r4
 8004778:	6864      	ldr	r4, [r4, #4]
 800477a:	e7b2      	b.n	80046e2 <_malloc_r+0x32>
 800477c:	4634      	mov	r4, r6
 800477e:	6876      	ldr	r6, [r6, #4]
 8004780:	e7b9      	b.n	80046f6 <_malloc_r+0x46>
 8004782:	230c      	movs	r3, #12
 8004784:	4638      	mov	r0, r7
 8004786:	603b      	str	r3, [r7, #0]
 8004788:	f000 f84c 	bl	8004824 <__malloc_unlock>
 800478c:	e7a1      	b.n	80046d2 <_malloc_r+0x22>
 800478e:	6025      	str	r5, [r4, #0]
 8004790:	e7de      	b.n	8004750 <_malloc_r+0xa0>
 8004792:	bf00      	nop
 8004794:	200001f8 	.word	0x200001f8

08004798 <_realloc_r>:
 8004798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800479c:	4680      	mov	r8, r0
 800479e:	4614      	mov	r4, r2
 80047a0:	460e      	mov	r6, r1
 80047a2:	b921      	cbnz	r1, 80047ae <_realloc_r+0x16>
 80047a4:	4611      	mov	r1, r2
 80047a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80047aa:	f7ff bf81 	b.w	80046b0 <_malloc_r>
 80047ae:	b92a      	cbnz	r2, 80047bc <_realloc_r+0x24>
 80047b0:	f7ff ff16 	bl	80045e0 <_free_r>
 80047b4:	4625      	mov	r5, r4
 80047b6:	4628      	mov	r0, r5
 80047b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80047bc:	f000 f838 	bl	8004830 <_malloc_usable_size_r>
 80047c0:	4284      	cmp	r4, r0
 80047c2:	4607      	mov	r7, r0
 80047c4:	d802      	bhi.n	80047cc <_realloc_r+0x34>
 80047c6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80047ca:	d812      	bhi.n	80047f2 <_realloc_r+0x5a>
 80047cc:	4621      	mov	r1, r4
 80047ce:	4640      	mov	r0, r8
 80047d0:	f7ff ff6e 	bl	80046b0 <_malloc_r>
 80047d4:	4605      	mov	r5, r0
 80047d6:	2800      	cmp	r0, #0
 80047d8:	d0ed      	beq.n	80047b6 <_realloc_r+0x1e>
 80047da:	42bc      	cmp	r4, r7
 80047dc:	4622      	mov	r2, r4
 80047de:	4631      	mov	r1, r6
 80047e0:	bf28      	it	cs
 80047e2:	463a      	movcs	r2, r7
 80047e4:	f7ff fed4 	bl	8004590 <memcpy>
 80047e8:	4631      	mov	r1, r6
 80047ea:	4640      	mov	r0, r8
 80047ec:	f7ff fef8 	bl	80045e0 <_free_r>
 80047f0:	e7e1      	b.n	80047b6 <_realloc_r+0x1e>
 80047f2:	4635      	mov	r5, r6
 80047f4:	e7df      	b.n	80047b6 <_realloc_r+0x1e>
	...

080047f8 <_sbrk_r>:
 80047f8:	b538      	push	{r3, r4, r5, lr}
 80047fa:	2300      	movs	r3, #0
 80047fc:	4d05      	ldr	r5, [pc, #20]	; (8004814 <_sbrk_r+0x1c>)
 80047fe:	4604      	mov	r4, r0
 8004800:	4608      	mov	r0, r1
 8004802:	602b      	str	r3, [r5, #0]
 8004804:	f7fc fd98 	bl	8001338 <_sbrk>
 8004808:	1c43      	adds	r3, r0, #1
 800480a:	d102      	bne.n	8004812 <_sbrk_r+0x1a>
 800480c:	682b      	ldr	r3, [r5, #0]
 800480e:	b103      	cbz	r3, 8004812 <_sbrk_r+0x1a>
 8004810:	6023      	str	r3, [r4, #0]
 8004812:	bd38      	pop	{r3, r4, r5, pc}
 8004814:	20000200 	.word	0x20000200

08004818 <__malloc_lock>:
 8004818:	4801      	ldr	r0, [pc, #4]	; (8004820 <__malloc_lock+0x8>)
 800481a:	f000 b811 	b.w	8004840 <__retarget_lock_acquire_recursive>
 800481e:	bf00      	nop
 8004820:	20000204 	.word	0x20000204

08004824 <__malloc_unlock>:
 8004824:	4801      	ldr	r0, [pc, #4]	; (800482c <__malloc_unlock+0x8>)
 8004826:	f000 b80c 	b.w	8004842 <__retarget_lock_release_recursive>
 800482a:	bf00      	nop
 800482c:	20000204 	.word	0x20000204

08004830 <_malloc_usable_size_r>:
 8004830:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004834:	1f18      	subs	r0, r3, #4
 8004836:	2b00      	cmp	r3, #0
 8004838:	bfbc      	itt	lt
 800483a:	580b      	ldrlt	r3, [r1, r0]
 800483c:	18c0      	addlt	r0, r0, r3
 800483e:	4770      	bx	lr

08004840 <__retarget_lock_acquire_recursive>:
 8004840:	4770      	bx	lr

08004842 <__retarget_lock_release_recursive>:
 8004842:	4770      	bx	lr

08004844 <_init>:
 8004844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004846:	bf00      	nop
 8004848:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800484a:	bc08      	pop	{r3}
 800484c:	469e      	mov	lr, r3
 800484e:	4770      	bx	lr

08004850 <_fini>:
 8004850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004852:	bf00      	nop
 8004854:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004856:	bc08      	pop	{r3}
 8004858:	469e      	mov	lr, r3
 800485a:	4770      	bx	lr
